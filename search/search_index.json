{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NDR \u00b6 About \u00b6 NDR (Neuroscience Data Readers) is a consolidated Matlab toolbox for reading neurophysiology and imaging files. It contains some original code and substantial code that has been merged from open source repositories across the internet. Availability \u00b6 A mature prototype of NDR is available in Matlab . Installation \u00b6 Check out the Installation Guide . Help and Support \u00b6 Use the issue tracker to submit questions, bugs, and issues. Financial Support \u00b6 Supported by the NIH BRAIN Initiative informatics group , grant MH114678, and by the MathWorks / INCF Community Toolbox Training Project program. Many thanks to our contributors .","title":"Home"},{"location":"#ndr","text":"","title":"NDR"},{"location":"#about","text":"NDR (Neuroscience Data Readers) is a consolidated Matlab toolbox for reading neurophysiology and imaging files. It contains some original code and substantial code that has been merged from open source repositories across the internet.","title":"About"},{"location":"#availability","text":"A mature prototype of NDR is available in Matlab .","title":"Availability"},{"location":"#installation","text":"Check out the Installation Guide .","title":"Installation"},{"location":"#help-and-support","text":"Use the issue tracker to submit questions, bugs, and issues.","title":"Help and Support"},{"location":"#financial-support","text":"Supported by the NIH BRAIN Initiative informatics group , grant MH114678, and by the MathWorks / INCF Community Toolbox Training Project program. Many thanks to our contributors .","title":"Financial Support"},{"location":"contributing/","text":"Contributing \u00b6 Anyone with a GitHub account can contribute. Press the Fork button in the upper-right corner of the NDR-matlab GitHub repository to make a copy of NDR in your own GitHub space. Add your own ndr.reader.base base object, as described in the tutorial. Be sure to write a test function. If any helper functions are needed, be sure you have permission to add them, and add them to the ndr.format package or to the lib folder. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the NDR development team for integration.","title":"Contributing"},{"location":"contributing/#contributing","text":"Anyone with a GitHub account can contribute. Press the Fork button in the upper-right corner of the NDR-matlab GitHub repository to make a copy of NDR in your own GitHub space. Add your own ndr.reader.base base object, as described in the tutorial. Be sure to write a test function. If any helper functions are needed, be sure you have permission to add them, and add them to the ndr.format package or to the lib folder. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the NDR development team for integration.","title":"Contributing"},{"location":"installation/","text":"Installation: \u00b6 Recommended method: \u00b6 NDR is installed as a part of the Neuroscience Data Interface ( NDI ). The easiest way is to install it with the NDI installer as described here. Make sure git is installed on your machine. If it is not, on Windows, go here . On Mac, open a terminal, and type xcode-select --install . Accept the license and wait for install. On Linux, consult your Linux distribution's package manager. Download the file ndi_install.m to your Desktop. Run the following in Matlab: cd ~/Desktop ndi_install Python code \u00b6 NDR can now call Python code, including the neo Python package for reading neurophysiology files. See here for instructions to install the particular version of Python and the dependencies necessary to use neo. Manual method: \u00b6 Run the following on your terminal command line: git clone http://github.com/VH-Lab/NDR-matlab You'll need a Matlab startup.m file. Add the command ndi_Init to that file, after ensuring that the directory for NDR-matlab is on your Matlab path. (All of these steps are taken care of via the automatic installation above.)","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation:"},{"location":"installation/#recommended-method","text":"NDR is installed as a part of the Neuroscience Data Interface ( NDI ). The easiest way is to install it with the NDI installer as described here. Make sure git is installed on your machine. If it is not, on Windows, go here . On Mac, open a terminal, and type xcode-select --install . Accept the license and wait for install. On Linux, consult your Linux distribution's package manager. Download the file ndi_install.m to your Desktop. Run the following in Matlab: cd ~/Desktop ndi_install","title":"Recommended method:"},{"location":"installation/#python-code","text":"NDR can now call Python code, including the neo Python package for reading neurophysiology files. See here for instructions to install the particular version of Python and the dependencies necessary to use neo.","title":"Python code"},{"location":"installation/#manual-method","text":"Run the following on your terminal command line: git clone http://github.com/VH-Lab/NDR-matlab You'll need a Matlab startup.m file. Add the command ndi_Init to that file, after ensuring that the directory for NDR-matlab is on your Matlab path. (All of these steps are taken care of via the automatic installation above.)","title":"Manual method:"},{"location":"notes/ced_smr_channels/","text":"Channel names in Intan RHD files: \u00b6 How channels are named natively according to the Intan system: \u00b6 CED Type What it is How specified Example native channel name Example meaning Waveforms Analog waveforms that are regularly sampled Specified according to type and number ai21 Reads waveform data on channel 21 Event- Digital events that are defined by a negative-going signal 'e' and channel number e24 All events on channel 24 (no check is made to ensure they are negative going, any event on channel 24 is returned) Event+ Digital events that are defined by a negative-going signal 'e' and channel number e25 All events on channel 25 (no check is made to ensure they are positive going, any event on channel 25 is returned) Level Digital events that are defined by a positive or negative-going signal 'e' and channel number e26 All events on channel 26 (no check is made to see how the event is defined) Marker Specify a numeric marker with the channel number mk20 numeric marker on channel 20 TextMark Specify a text marker with the channel number text30 Text marker on channel 30 Example input to ndr.read Meaning 'ai1-3' Waveforms on channels 1 through 3 (total of 3 channels) 'e10' Digital events on channel 10 'text30' Text marker events on channel 30","title":"Channel names in Intan RHD files:"},{"location":"notes/ced_smr_channels/#channel-names-in-intan-rhd-files","text":"","title":"Channel names in Intan RHD files:"},{"location":"notes/ced_smr_channels/#how-channels-are-named-natively-according-to-the-intan-system","text":"CED Type What it is How specified Example native channel name Example meaning Waveforms Analog waveforms that are regularly sampled Specified according to type and number ai21 Reads waveform data on channel 21 Event- Digital events that are defined by a negative-going signal 'e' and channel number e24 All events on channel 24 (no check is made to ensure they are negative going, any event on channel 24 is returned) Event+ Digital events that are defined by a negative-going signal 'e' and channel number e25 All events on channel 25 (no check is made to ensure they are positive going, any event on channel 25 is returned) Level Digital events that are defined by a positive or negative-going signal 'e' and channel number e26 All events on channel 26 (no check is made to see how the event is defined) Marker Specify a numeric marker with the channel number mk20 numeric marker on channel 20 TextMark Specify a text marker with the channel number text30 Text marker on channel 30 Example input to ndr.read Meaning 'ai1-3' Waveforms on channels 1 through 3 (total of 3 channels) 'e10' Digital events on channel 10 'text30' Text marker events on channel 30","title":"How channels are named natively according to the Intan system:"},{"location":"notes/intan_channels/","text":"Channel names in Intan RHD files: \u00b6 How channels are named natively according to the Intan system: \u00b6 Type How specified Example native channel name Example meaning Traditional analog inputs Specified according to the input bank ('A', 'B', 'C', D', etc) and a number. A-000 Analog input bank A, channel 000 Auxillary analog inputs Specified according to input bank ('A', 'B', 'C', 'D', etc) followed by '-AUX' and a number. A-AUX2 Auxillary input bank A channel 2 Traditional digital inputs Specified with 'DIN-' followed by the channel number DIN-00 Digital input channel 00 Traditional digital outputs log Specified with 'DOUT-' followed by the channel number DOUT-00 Digital output channel 00 Supply voltage channels Specified with bank followed by '-VDD1' A-VDD1 Supply voltage on port A NDR doesn't allow dashes in read strings so one specfies channels from different banks according to the following examples: Example input to ndr.read Meaning 'A000-015' Traditional analog input channels A-000 through A-015 (total of 16 channels) 'A000-010;B023-035' Traditional analog input channels A-000 through A-010 and channels B-023 through 035 (total of 24 channels) 'DIN00-15' Digital input channels 00 - 15 'AAUX1-3' Auxillary inputs 1-3 from bank A Relative channel specification for Intan: \u00b6 NDR also allows one to specify Intan channels in a relative fashion. The mapping between relative channels and the native channel names varies depending upon which channels were turned on during a particular recording. Type How specified Example channel name Example meaning Traditional analog inputs 'ai' followed by channel number 'ai1' The first analog input channel that was turned on in the acquisition; for example, if A-023 was the lowest channel that was turned on during the recording, then 'ai1' would correspond to channel A-023. If A-030 was the lowest channel turned on during the recording, then 'ai1' would correspond to A-030. Traditional digital inputs 'di' followed by channel number 'di1' The first digital input channel. If DIN-000 was active, then 'di1' would correspond to DIN-000. Examples: Example input to ndr.read Meaning 'ai1-5' The first (lowest name/numbered) 5 channels that were turned on during the recording. 'ai5-7' The fifth through 7th channels (starting from the lowest name/number) that were turned on during the recording. 'di1-16' The first through 16th digital channels that were turned on during the recording.","title":"Channel names in Intan RHD files:"},{"location":"notes/intan_channels/#channel-names-in-intan-rhd-files","text":"","title":"Channel names in Intan RHD files:"},{"location":"notes/intan_channels/#how-channels-are-named-natively-according-to-the-intan-system","text":"Type How specified Example native channel name Example meaning Traditional analog inputs Specified according to the input bank ('A', 'B', 'C', D', etc) and a number. A-000 Analog input bank A, channel 000 Auxillary analog inputs Specified according to input bank ('A', 'B', 'C', 'D', etc) followed by '-AUX' and a number. A-AUX2 Auxillary input bank A channel 2 Traditional digital inputs Specified with 'DIN-' followed by the channel number DIN-00 Digital input channel 00 Traditional digital outputs log Specified with 'DOUT-' followed by the channel number DOUT-00 Digital output channel 00 Supply voltage channels Specified with bank followed by '-VDD1' A-VDD1 Supply voltage on port A NDR doesn't allow dashes in read strings so one specfies channels from different banks according to the following examples: Example input to ndr.read Meaning 'A000-015' Traditional analog input channels A-000 through A-015 (total of 16 channels) 'A000-010;B023-035' Traditional analog input channels A-000 through A-010 and channels B-023 through 035 (total of 24 channels) 'DIN00-15' Digital input channels 00 - 15 'AAUX1-3' Auxillary inputs 1-3 from bank A","title":"How channels are named natively according to the Intan system:"},{"location":"notes/intan_channels/#relative-channel-specification-for-intan","text":"NDR also allows one to specify Intan channels in a relative fashion. The mapping between relative channels and the native channel names varies depending upon which channels were turned on during a particular recording. Type How specified Example channel name Example meaning Traditional analog inputs 'ai' followed by channel number 'ai1' The first analog input channel that was turned on in the acquisition; for example, if A-023 was the lowest channel that was turned on during the recording, then 'ai1' would correspond to channel A-023. If A-030 was the lowest channel turned on during the recording, then 'ai1' would correspond to A-030. Traditional digital inputs 'di' followed by channel number 'di1' The first digital input channel. If DIN-000 was active, then 'di1' would correspond to DIN-000. Examples: Example input to ndr.read Meaning 'ai1-5' The first (lowest name/numbered) 5 channels that were turned on during the recording. 'ai5-7' The fifth through 7th channels (starting from the lowest name/number) that were turned on during the recording. 'di1-16' The first through 16th digital channels that were turned on during the recording.","title":"Relative channel specification for Intan:"},{"location":"reference/ndr_Init.m/","text":"ndr_Init \u00b6 NDR_INIT - initalize a global variable ndr_globals with default file paths","title":"ndr_Init"},{"location":"reference/ndr_Init.m/#ndr_init","text":"NDR_INIT - initalize a global variable ndr_globals with default file paths","title":"ndr_Init"},{"location":"reference/%2Bndr/globals.m/","text":"ndr.globals \u00b6 GLOBALS - define global variables for NDR NDR . GLOBALS Script that defines some global variables for the NDR package The following variables are defined : Name : | Description ------------------------------------------------------------------------- ndr_globals . path . path | The path of the NDR distribution on this machine . | ( Initialized by ndr_Init . m ) ndr_globals . path . preferences | A path to a directory of preferences files ndr_globals . path . filecachepath | A path where files may be cached ( not deleted every time ) ndr_globals . path . temppath | The path to a directory that may be used for | temporary files ( Initialized by ndr_Init . m ) ndi_globals . path . testpath | A path to a safe place to run test code ndi . debug | A structure with preferences for debugging","title":"ndr.globals"},{"location":"reference/%2Bndr/globals.m/#ndrglobals","text":"GLOBALS - define global variables for NDR NDR . GLOBALS Script that defines some global variables for the NDR package The following variables are defined : Name : | Description ------------------------------------------------------------------------- ndr_globals . path . path | The path of the NDR distribution on this machine . | ( Initialized by ndr_Init . m ) ndr_globals . path . preferences | A path to a directory of preferences files ndr_globals . path . filecachepath | A path where files may be cached ( not deleted every time ) ndr_globals . path . temppath | The path to a directory that may be used for | temporary files ( Initialized by ndr_Init . m ) ndi_globals . path . testpath | A path to a safe place to run test code ndi . debug | A structure with preferences for debugging","title":"ndr.globals"},{"location":"reference/%2Bndr/reader.m/","text":"CLASS ndr.reader \u00b6 NDR - create a new Neuroscience Data Reader object NDR_READER_OBJ = ndr . reader ( NDR_READER_TYPE ) Creates an Neuroscence Data Reader object of the indicated type . Some valid types include ' IntanRHD ' , ' CedSpike2 ' , ' SpikeGadgets ' , ' Blackrock ' . Superclasses \u00b6 none Properties \u00b6 Property Description ndr_reader_base the ndr reader base object, that actually reads the files Methods \u00b6 Method Description epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch read read data from an ndr.reader object readchannels_epochsamples read the data based on specified channels reader create a new Neuroscience Data Reader object readevents_epochsamples read events, markers, and digital events of specified channels for a specified epoch readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL FOR REGULARLY-SAMPLED CHANNELS t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch Methods help \u00b6 epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . This function calls the method of the ndr_reader_base class . If EPOCH_SELECT is not provided , it is assumed to be 1 . See also : ndr . time . clocktype getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch . EPOCHSTREAMS should be a cell array of files or streams that comprise this epoch . EPOCH_SELECT indicates the epoch within the EPOCHSTREAMS files to select . The vast majority of systems only allow one EPOCH per file , so EPOCH_SELECT is usually 1 . It defaults to 1 if it is not given . CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) read - read data from an ndr.reader object CHANNELSTRING can be multiple things . For most readers , it should be a string of NDR channel names , e . g . ' ai1-3+b2-4 ' . Intan reader accepts both the NDR channel names , e . g . ' ai1-3+b2-4 ' , and device channel names , e . g . ' A021+A022 ' . Neo reader stands as an exception - it expects device channel names , but as a cell array , e . g . { ' A-000 ' , ' A-001 ' }. [ DATA , TIME ] = READ ( NDR_READER_OBJ , EPOCHSTREAMS , CHANNELSTRING , ... ) This function takes additional arguments in the form of name / value pairs . ------------------------------------------------------------------------- | Parameter ( default ) | Description | |---------------------------|-------------------------------------------| | t0 ( - Inf ) | Time to start reading ( in units of | | | epochclock ) . Use - Inf to start from | | | earliest sample available . | | t1 ( Inf ) | Time to stop reading ( in units of | | | epochclock ) . Use Inf to stop at the | | | last sample available . | | epoch_select ( 1 ) | The epoch within EPOCHSTREAMS to select . | | | Usually , there is only 1 epoch per file | | | but some file formats support more than | | | 1 epoch per file . | | useSamples ( 0 ) | Use sample numbers instead of time | | s0 ( NaN ) | Sample number to start reading , if | | | useSamples is 1 . First sample is 1 . | | s1 ( NaN ) | Sample number to stop reading , if | | | useSamples is 1 . Last sample is Inf . | ------------------------------------------------------------------------- readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS(NDR_READER_OBJ, CHANNELTYPE, CHANNEL, EPOCH ,S0, S1) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read, beginning from 1 EPOCH is the epoch number to read from. DATA will have one column per channel. reader - create a new Neuroscience Data Reader object NDR_READER_OBJ = ndr . reader ( NDR_READER_TYPE ) Creates an Neuroscence Data Reader object of the indicated type . Some valid types include ' IntanRHD ' , ' CedSpike2 ' , ' SpikeGadgets ' , ' Blackrock ' . Documentation for ndr . reader / reader doc ndr . reader readevents_epochsamples - read events, markers, and digital events of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHSTREAMS , EPOCH_SELECT , T0 , T1 ) Returns TIMESTAMPS and DATA corresponding to event or marker channels . If the number of CHANNEL entries is 1 , then TIMESTAMPS is a column vector of type double , and DATA is also a column of a type that depends on the type of event that is read . If the number of CHANNEL entries is more than 1 , then TIMESTAMPS and DATA are both columns of cell arrays , with 1 column per channel . CHANNELTYPE is a cell array of strings , describing the type of each channel to read , such as ' event ' - TIMESTAMPS mark the occurrence of each event ; DATA is a logical 1 for each timestamp ' marker ' - TIMESTAMPS mark the occurence of each event ; each row of DATA is the data associated with the marker (type double) ' text ' - TIMESTAMPS mark the occurence of each event ; DATA is a cell array of character arrays, 1 per event ' dep ' - Create events from a digital channel with positive transitions . TIMESTAMPS mark the occurence of each event and DATA entries will be a 1 ' dimp ' - Create events from a digital channel by finding impulses that exhibit positive then negative transitions . TIMESTAMPS mark the occurrence of each event , and DATA indicates whether the event is a positive transition ( 1 ) or negative ( - 1 ) transition . ' den ' - Create events from a digital channel with negative transitions . TIMESTAMPS mark the occurrence of each event and DATA entries will be a - 1 . ' dimn ' - Create events from a digital channel by finding impulses that exhibit negative then positive transitions . TIMESTAMPS mark the occurence of each event , and DATA indicates whether the event is a negative transition ( 1 ) or a positive transition ( - 1 ) . CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Step 1 : check to see if the user is requesting a \" native \" type of event ( event , marker , text ) or a \" derived \" type of event ( like dep , den , dimp , dimn , which are derived from the data of sampled digital channels ) If the user does request a derived event type , then compute it readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is a cell array of strings , describing the type of each channel to read , such as ' event ' - TIMESTAMPS mark the occurrence of each event ; DATA is a logical 1 for each timestamp ' marker ' - TIMESTAMPS mark the occurence of each event ; each row of DATA is the data associated with the marker (type double) ' text ' - TIMESTAMPS mark the occurence of each event ; DATA is a cell array of character arrays, 1 per event One cannot use the event types that are derived from digital data ( ' dep ' , ' dimp ' , ' den ' , ' dimn ' ) with READEVENTS_EPOCHSAMPLES_NATIVE . Use READEVENTS_EPOCHSAMPLES instead . CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL FOR REGULARLY-SAMPLED CHANNELS SR = SAMPLERATE ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHSTREAMS , EPOCH_SELECT ) SR is an array of sample rates from the specified channels CHANNELTYPE is a cell array of strings , describing the type of each channel to read . This must be a regularly - sampled type , such as ' analog_input ' or ' ai ' - regularly sampled analog input ' analog_output ' or ' ao ' - regularly sampled analog output ' digital_input ' or ' di ' - regularly sampled digital input ' digital_output ' or ' do ' - regularly sampled digital output CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1. t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . This function calls the method of the ndr_reader_base class . If EPOCH_SELECT is not provided , it is assumed to be 1 . See also : ndr . time . clocktype , ndr . reader . base / epochclock","title":"ndr.reader"},{"location":"reference/%2Bndr/reader.m/#class-ndrreader","text":"NDR - create a new Neuroscience Data Reader object NDR_READER_OBJ = ndr . reader ( NDR_READER_TYPE ) Creates an Neuroscence Data Reader object of the indicated type . Some valid types include ' IntanRHD ' , ' CedSpike2 ' , ' SpikeGadgets ' , ' Blackrock ' .","title":"CLASS ndr.reader"},{"location":"reference/%2Bndr/reader.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/%2Bndr/reader.m/#properties","text":"Property Description ndr_reader_base the ndr reader base object, that actually reads the files","title":"Properties"},{"location":"reference/%2Bndr/reader.m/#methods","text":"Method Description epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch read read data from an ndr.reader object readchannels_epochsamples read the data based on specified channels reader create a new Neuroscience Data Reader object readevents_epochsamples read events, markers, and digital events of specified channels for a specified epoch readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL FOR REGULARLY-SAMPLED CHANNELS t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch","title":"Methods"},{"location":"reference/%2Bndr/reader.m/#methods-help","text":"epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . This function calls the method of the ndr_reader_base class . If EPOCH_SELECT is not provided , it is assumed to be 1 . See also : ndr . time . clocktype getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch . EPOCHSTREAMS should be a cell array of files or streams that comprise this epoch . EPOCH_SELECT indicates the epoch within the EPOCHSTREAMS files to select . The vast majority of systems only allow one EPOCH per file , so EPOCH_SELECT is usually 1 . It defaults to 1 if it is not given . CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) read - read data from an ndr.reader object CHANNELSTRING can be multiple things . For most readers , it should be a string of NDR channel names , e . g . ' ai1-3+b2-4 ' . Intan reader accepts both the NDR channel names , e . g . ' ai1-3+b2-4 ' , and device channel names , e . g . ' A021+A022 ' . Neo reader stands as an exception - it expects device channel names , but as a cell array , e . g . { ' A-000 ' , ' A-001 ' }. [ DATA , TIME ] = READ ( NDR_READER_OBJ , EPOCHSTREAMS , CHANNELSTRING , ... ) This function takes additional arguments in the form of name / value pairs . ------------------------------------------------------------------------- | Parameter ( default ) | Description | |---------------------------|-------------------------------------------| | t0 ( - Inf ) | Time to start reading ( in units of | | | epochclock ) . Use - Inf to start from | | | earliest sample available . | | t1 ( Inf ) | Time to stop reading ( in units of | | | epochclock ) . Use Inf to stop at the | | | last sample available . | | epoch_select ( 1 ) | The epoch within EPOCHSTREAMS to select . | | | Usually , there is only 1 epoch per file | | | but some file formats support more than | | | 1 epoch per file . | | useSamples ( 0 ) | Use sample numbers instead of time | | s0 ( NaN ) | Sample number to start reading , if | | | useSamples is 1 . First sample is 1 . | | s1 ( NaN ) | Sample number to stop reading , if | | | useSamples is 1 . Last sample is Inf . | ------------------------------------------------------------------------- readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS(NDR_READER_OBJ, CHANNELTYPE, CHANNEL, EPOCH ,S0, S1) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read, beginning from 1 EPOCH is the epoch number to read from. DATA will have one column per channel. reader - create a new Neuroscience Data Reader object NDR_READER_OBJ = ndr . reader ( NDR_READER_TYPE ) Creates an Neuroscence Data Reader object of the indicated type . Some valid types include ' IntanRHD ' , ' CedSpike2 ' , ' SpikeGadgets ' , ' Blackrock ' . Documentation for ndr . reader / reader doc ndr . reader readevents_epochsamples - read events, markers, and digital events of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHSTREAMS , EPOCH_SELECT , T0 , T1 ) Returns TIMESTAMPS and DATA corresponding to event or marker channels . If the number of CHANNEL entries is 1 , then TIMESTAMPS is a column vector of type double , and DATA is also a column of a type that depends on the type of event that is read . If the number of CHANNEL entries is more than 1 , then TIMESTAMPS and DATA are both columns of cell arrays , with 1 column per channel . CHANNELTYPE is a cell array of strings , describing the type of each channel to read , such as ' event ' - TIMESTAMPS mark the occurrence of each event ; DATA is a logical 1 for each timestamp ' marker ' - TIMESTAMPS mark the occurence of each event ; each row of DATA is the data associated with the marker (type double) ' text ' - TIMESTAMPS mark the occurence of each event ; DATA is a cell array of character arrays, 1 per event ' dep ' - Create events from a digital channel with positive transitions . TIMESTAMPS mark the occurence of each event and DATA entries will be a 1 ' dimp ' - Create events from a digital channel by finding impulses that exhibit positive then negative transitions . TIMESTAMPS mark the occurrence of each event , and DATA indicates whether the event is a positive transition ( 1 ) or negative ( - 1 ) transition . ' den ' - Create events from a digital channel with negative transitions . TIMESTAMPS mark the occurrence of each event and DATA entries will be a - 1 . ' dimn ' - Create events from a digital channel by finding impulses that exhibit negative then positive transitions . TIMESTAMPS mark the occurence of each event , and DATA indicates whether the event is a negative transition ( 1 ) or a positive transition ( - 1 ) . CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Step 1 : check to see if the user is requesting a \" native \" type of event ( event , marker , text ) or a \" derived \" type of event ( like dep , den , dimp , dimn , which are derived from the data of sampled digital channels ) If the user does request a derived event type , then compute it readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is a cell array of strings , describing the type of each channel to read , such as ' event ' - TIMESTAMPS mark the occurrence of each event ; DATA is a logical 1 for each timestamp ' marker ' - TIMESTAMPS mark the occurence of each event ; each row of DATA is the data associated with the marker (type double) ' text ' - TIMESTAMPS mark the occurence of each event ; DATA is a cell array of character arrays, 1 per event One cannot use the event types that are derived from digital data ( ' dep ' , ' dimp ' , ' den ' , ' dimn ' ) with READEVENTS_EPOCHSAMPLES_NATIVE . Use READEVENTS_EPOCHSAMPLES instead . CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL FOR REGULARLY-SAMPLED CHANNELS SR = SAMPLERATE ( NDR_READER_OBJ , CHANNELTYPE , CHANNEL , EPOCHSTREAMS , EPOCH_SELECT ) SR is an array of sample rates from the specified channels CHANNELTYPE is a cell array of strings , describing the type of each channel to read . This must be a regularly - sampled type , such as ' analog_input ' or ' ai ' - regularly sampled analog input ' analog_output ' or ' ao ' - regularly sampled analog output ' digital_input ' or ' di ' - regularly sampled digital input ' digital_output ' or ' do ' - regularly sampled digital output CHANNEL is a vector with the identity ( ies ) of the channel ( s ) to be read . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1. t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . This function calls the method of the ndr_reader_base class . If EPOCH_SELECT is not provided , it is assumed to be 1 . See also : ndr . time . clocktype , ndr . reader . base / epochclock","title":"Methods help"},{"location":"reference/%2Bndr/%2Bdata/assign.m/","text":"ndr.data.assign \u00b6 assign - make a list of assignments ( matlab 5 or higher ) ndr . data . assign ( 'VAR1' , VAL1 , 'VAR2' , VAL2 , ... ) makes the assignments VAR1 = VAL1 ; VAR2 = VAL2 ; ... in the caller 's workspace. This is most useful when passing in an option list to a function . Thus in the function which starts : function foo ( x , y , varargin ) z = 0 ; ndr . data . assign ( varargin {:}); the variable z can be given a non - default value by calling the function like so : foo ( x , y , 'z' , 4 ); If the input is a single structure , then the structure is converted to a set of NAME / VALUE pairs and interpreted as 'VAR1' , VAL1 , etc , where VAR1 is the first field name of the input , VAL1 is the value of the field name , etc .","title":"ndr.data.assign"},{"location":"reference/%2Bndr/%2Bdata/assign.m/#ndrdataassign","text":"assign - make a list of assignments ( matlab 5 or higher ) ndr . data . assign ( 'VAR1' , VAL1 , 'VAR2' , VAL2 , ... ) makes the assignments VAR1 = VAL1 ; VAR2 = VAL2 ; ... in the caller 's workspace. This is most useful when passing in an option list to a function . Thus in the function which starts : function foo ( x , y , varargin ) z = 0 ; ndr . data . assign ( varargin {:}); the variable z can be given a non - default value by calling the function like so : foo ( x , y , 'z' , 4 ); If the input is a single structure , then the structure is converted to a set of NAME / VALUE pairs and interpreted as 'VAR1' , VAL1 , etc , where VAR1 is the first field name of the input , VAL1 is the value of the field name , etc .","title":"ndr.data.assign"},{"location":"reference/%2Bndr/%2Bdata/colvec.m/","text":"ndr.data.colvec \u00b6 COLVEC - return a matrix reshaped as a column vector Y = ndr . data . colvec ( X ) Returns the contents of the matrix X as a column vector Y that is 1 xM , where M is the product of all the sizes of the dimensions of X ( M = PROD ( SIZE ( X ))) . ndr . data . colvec is equivalent to Y = X ( : ) ; This function is useful for addressing all of the elements of a matrix as a vector when X is a subset of another matrix . See also : ndr . data . rowvec Example : A = rand ( 5 , 5 ) Y = ndr . data . colvec ( A ( 1 : 3 , 1 : 2 )) % returns points in rows 1 : 3 , columns 1 : 2","title":"ndr.data.colvec"},{"location":"reference/%2Bndr/%2Bdata/colvec.m/#ndrdatacolvec","text":"COLVEC - return a matrix reshaped as a column vector Y = ndr . data . colvec ( X ) Returns the contents of the matrix X as a column vector Y that is 1 xM , where M is the product of all the sizes of the dimensions of X ( M = PROD ( SIZE ( X ))) . ndr . data . colvec is equivalent to Y = X ( : ) ; This function is useful for addressing all of the elements of a matrix as a vector when X is a subset of another matrix . See also : ndr . data . rowvec Example : A = rand ( 5 , 5 ) Y = ndr . data . colvec ( A ( 1 : 3 , 1 : 2 )) % returns points in rows 1 : 3 , columns 1 : 2","title":"ndr.data.colvec"},{"location":"reference/%2Bndr/%2Bdata/rowvec.m/","text":"ndr.data.rowvec \u00b6 ROWVEC - return a matrix reshaped as a row vector Y = ndr . data . rowvec ( X ) Returns the contents of the matrix X as a row vector Y that is Mx1 , where M is the product of all the sizes of the dimensions of X ( M = PROD ( SIZE ( X ))) . ndr . data . rowvec is equivalent to Y = X ( : ) ' ; This function is useful for addressing all of the elements of a matrix as a vector when X is a subset of another matrix . See also : ndr . data . colvec Example : A = rand ( 5 , 5 ) Y = ndr . data . rowvec ( A ( 1 : 3 , 1 : 2 )) % returns points in rows 1 : 3 , columns 1 : 2","title":"ndr.data.rowvec"},{"location":"reference/%2Bndr/%2Bdata/rowvec.m/#ndrdatarowvec","text":"ROWVEC - return a matrix reshaped as a row vector Y = ndr . data . rowvec ( X ) Returns the contents of the matrix X as a row vector Y that is Mx1 , where M is the product of all the sizes of the dimensions of X ( M = PROD ( SIZE ( X ))) . ndr . data . rowvec is equivalent to Y = X ( : ) ' ; This function is useful for addressing all of the elements of a matrix as a vector when X is a subset of another matrix . See also : ndr . data . colvec Example : A = rand ( 5 , 5 ) Y = ndr . data . rowvec ( A ( 1 : 3 , 1 : 2 )) % returns points in rows 1 : 3 , columns 1 : 2","title":"ndr.data.rowvec"},{"location":"reference/%2Bndr/%2Bdata/struct2namevaluepair.m/","text":"ndr.data.struct2namevaluepair \u00b6 STRUCT2NAMEVALUEPAIR - Convert a structure to a cell array of name / value pairs NV = ndr . data . struct2namevaluepair ( THESTRUCT ) Convert a structure to a cell array of name / value pairs . This is useful for passing name / value pairs to functions that accept them as extra arguments . Each field name of the structure is used as the 'name' , and the value is used as the 'value' . Example : myStruct . param1 = 1 ; myStruct . param2 = 2 ; nv = ndr . data . struct2namevaluepair ( myStruct ) % nv = {'param1', 1, 'param2', 2} See also : VARARGIN , ndr . data . assign , STRUCT","title":"ndr.data.struct2namevaluepair"},{"location":"reference/%2Bndr/%2Bdata/struct2namevaluepair.m/#ndrdatastruct2namevaluepair","text":"STRUCT2NAMEVALUEPAIR - Convert a structure to a cell array of name / value pairs NV = ndr . data . struct2namevaluepair ( THESTRUCT ) Convert a structure to a cell array of name / value pairs . This is useful for passing name / value pairs to functions that accept them as extra arguments . Each field name of the structure is used as the 'name' , and the value is used as the 'value' . Example : myStruct . param1 = 1 ; myStruct . param2 = 2 ; nv = ndr . data . struct2namevaluepair ( myStruct ) % nv = {'param1', 1, 'param2', 2} See also : VARARGIN , ndr . data . assign , STRUCT","title":"ndr.data.struct2namevaluepair"},{"location":"reference/%2Bndr/%2Bdocs/build.m/","text":"ndr.docs.build \u00b6 ndr.docs.build - build the NDR markdown documentation from Matlab source Builds the ND$ documentation locally in $NDR-matlab/docs and updates the mkdocs-yml file in the $NDR-matlab directory. **Example**: ndr.docs.build();","title":"ndr.docs.build"},{"location":"reference/%2Bndr/%2Bdocs/build.m/#ndrdocsbuild","text":"ndr.docs.build - build the NDR markdown documentation from Matlab source Builds the ND$ documentation locally in $NDR-matlab/docs and updates the mkdocs-yml file in the $NDR-matlab directory. **Example**: ndr.docs.build();","title":"ndr.docs.build"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/","text":"CLASS ndr.file.fileobj \u00b6 FILEOBJ - a Matlab binary file object ; an interface to fopen, fread, fwrite, fseek, fclose, ftell This is an object interface to fopen , fread , fwrite , fseek , fclose , and ftell . Why do this ? One could imagine one day separating the process of reading and writing a data stream from the file system . For example , one could write to GRIDFS by overriding these functions , and the user ' s code would never have to know . Superclasses \u00b6 handle Properties \u00b6 Property Description fullpathfilename fid permission machineformat 'big-endian' or 'little-endian' Methods \u00b6 Method Description addlistener ADDLISTENER Add listener for event. delete delete a FILEOBJ_OBJ, closing file first if need be eq == (EQ) Test handle equality. fclose close a FILEOBJ feof test to see if a FILEOBJ is at END-OF-FILE ferror return the last file error message for FILEOBJ fgetl get a line from a FILEOBJ fgets get a line from a FILEOBJ fileobj create a new binary file object fileparts return filename parts for the file associated with FILEOBJ findobj FINDOBJ Find objects matching specified conditions. findprop FINDPROP Find property of MATLAB handle object. fopen open a FILEOBJ fprintf print data to a FILEOBJ_OBJ fread read data from a FILEOBJ frewind 'rewind' a FILEOBJ back to the beginning fscanf scan data from a FILEOBJ_OBJ fseek seek to a location within a FILEOBJ ftell find current location within a FILEOBJ fwrite write data to a FILEOBJ ge >= (GE) Greater than or equal relation for handles. gt > (GT) Greater than relation for handles. isvalid ISVALID Test handle validity. le <= (LE) Less than or equal relation for handles. listener LISTENER Add listener for event without binding the listener to the source object. lt < (LT) Less than relation for handles. ne ~= (NE) Not equal relation for handles. notify NOTIFY Notify listeners of event. setproperties set the properties of a FILEOBJ Methods help \u00b6 addlistener - ADDLISTENER Add listener for event. el = ADDLISTENER ( hSource , Eventname , callbackFcn ) creates a listener for the event named Eventname . The source of the event is the handle object hSource . If hSource is an array of source handles , the listener responds to the named event on any handle in the array . callbackFcn is a function handle that is invoked when the event is triggered . el = ADDLISTENER ( hSource , PropName , Eventname , Callback ) adds a listener for a property event . Eventname must be one of 'PreGet' , 'PostGet' , 'PreSet' , or 'PostSet' . Eventname can be a string scalar or character vector . PropName must be a single property name specified as string scalar or character vector , or a collection of property names specified as a cell array of character vectors or a string array , or as an array of one or more meta . property objects . The properties must belong to the class of hSource . If hSource is scalar , PropName can include dynamic properties . For all forms , addlistener returns an event . listener . To remove a listener , delete the object returned by addlistener . For example , delete ( el ) calls the handle class delete method to remove the listener and delete it from the workspace . ADDLISTENER binds the listener 's lifecycle to the object that is the source of the event . Unless you explicitly delete the listener , it is destroyed only when the source object is destroyed . To control the lifecycle of the listener independently from the event source object , use listener or the event . listener constructor to create the listener . See also LISTENER , EVENT . LISTENER , NDR . FILE . FILEOBJ , NOTIFY , DELETE , META . PROPERTY , EVENTS Help for ndr . file . fileobj / addlistener is inherited from superclass handle Documentation for ndr . file . fileobj / addlistener doc handle / addlistener delete - delete a FILEOBJ_OBJ, closing file first if need be DELETE ( FILEOBJ_OBJ ) Deletes the handle FILEOBJ_OBJ . If the file ( FILEOBJ_OBJ . fid ) is open , it is closed first . See also : HANDLE / DELETE , FILEOBJ / FCLOSE eq - == (EQ) Test handle equality. Handles are equal if they are handles for the same object . H1 == H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise equality result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = EQ ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / eq is inherited from superclass handle fclose - close a FILEOBJ FILEOBJ_OBJ = FCLOSE ( FILEOBJ_OBJ ) Close a file associated with a FILEOBJ . Attempt to close the file and then set FILEOBJ_OBJ . fid to - 1 . feof - test to see if a FILEOBJ is at END-OF-FILE B = FEOF ( FILEOBJ_OBJ ) Returns 1 if FILEOBJ_OBJ is at its end of file , 0 otherwise . See also : FSEEK , FILEOBJ / FSEEK , FTELL ferror - return the last file error message for FILEOBJ [ MESSAGE , ERRORNUM ] = FERROR ( FILEOBJ_OBJ , COMMAND ) Return the most recent file error MESSAGE and ERRORNUM for the file associated with FERROR . fgetl - get a line from a FILEOBJ TLINE = FGETL ( FILEOBJ_OBJ ) Returns the next line ( not including NEWLINE character ) just like FGETL . See also : FGETL fgets - get a line from a FILEOBJ TLINE = FGETS ( FILEOBJ_OBJ , [ NCHAR ] ) Returns the next line ( including NEWLINE character ) just like FGETS . See also : FGETS fileobj - create a new binary file object FILEOBJ_OBJ = FILEOBJ ( ... ) Creates an empty FILEOBJ object . If FILENAME is provided , then the filename is stored . Documentation for ndr . file . fileobj / fileobj doc ndr . file . fileobj fileparts - return filename parts for the file associated with FILEOBJ [PATHSTR,NAME,EXT] = FILEPARTS(FILEOBJ_OBJ) Returns FILEPARTS of the 'fullpathfilename' field of FILEOBJ. findobj - FINDOBJ Find objects matching specified conditions. The FINDOBJ method of the HANDLE class follows the same syntax as the MATLAB FINDOBJ command , except that the first argument must be an array of handles to objects . HM = FINDOBJ ( H , < conditions > ) searches the handle object array H and returns an array of handle objects matching the specified conditions . Only the public members of the objects of H are considered when evaluating the conditions . See also FINDOBJ , NDR . FILE . FILEOBJ Help for ndr . file . fileobj / findobj is inherited from superclass handle Documentation for ndr . file . fileobj / findobj doc handle / findobj findprop - FINDPROP Find property of MATLAB handle object. p = FINDPROP ( H , PROPNAME ) finds and returns the META . PROPERTY object associated with property name PROPNAME of scalar handle object H . PROPNAME can be a string scalar or character vector . It can be the name of a property defined by the class of H or a dynamic property added to scalar object H . If no property named PROPNAME exists for object H , an empty META . PROPERTY array is returned . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / FINDOBJ , DYNAMICPROPS , META . PROPERTY Help for ndr . file . fileobj / findprop is inherited from superclass handle Documentation for ndr . file . fileobj / findprop doc handle / findprop fopen - open a FILEOBJ FILEOBJ_OBJ = FOPEN ( FILEOBJ_OBJ , [ , PERMISSION ] , [ MACHINEFORMAT ] , [ FILENAME ] ) Opens the file associated with a FILEOBJ_OBJ object . If FILENAME , PERMISSION , and MACHINEFORMAT are given , then those variables of FILEOBJ_OBJ are updated . If they are not given , then the existing values in the FILEOBJ_OBJ are used . Note that the order of the input arguments differs from FOPEN , so that the object can be called in place of an FID ( e . g ., fid = fopen ( myvariable ), where myvariable is either a file name or a FILEOBJ object ). If the operation is successful , then FILEOBJ_OBJ . fid is greater than 3. Otherwise , FILEOBJ_OBJ . fid is - 1. See also : FOPEN , FILEOBJ / FCLOSE , FCLOSE fprintf - print data to a FILEOBJ_OBJ [ COUNT ] = FPRINTF ( FID , FORMAT , A , ...) Call FPRINTF ( see FPRINTF for inputs ) for the file associated with FILEOBJ_OBJ . fread - read data from a FILEOBJ COUNT = FWRITE ( FILEOBJ_OBJ , COUNT , [ PRECISION ] , [ SKIP ] , [ MACHINEFORMAT ] ) Attempts to read COUNT elements with resolution PRECISION . If PRECISION is not provided , then 'char' is assumed . If SKIP is provided , then SKIP is in number of bytes , unless PRECISION is in bits , in which case SKIP is in bits . MACHINEFORMAT is the machine format to use . See FREAD for a full description of these input arguments . See also : FREAD frewind - 'rewind' a FILEOBJ back to the beginning FREWIND(FILEOBJ_OBJ) Seeks to the beginning of the file. See also: FSEEK, FILEOBJ/FSEEK, FTELL fscanf - scan data from a FILEOBJ_OBJ [ A,COUNT ] = FSCANF ( FID , FORMAT , [ SIZEA ] ) Call FSCANF ( see FSCANF for inputs ) for the file associated with FILEOBJ_OBJ . fseek - seek to a location within a FILEOBJ B = FSEEK ( FILEOBJ_OBJ , OFFSET , REFERENCE ) Seeks the file to the location OFFSET ( in bytes ) relative to REFERENCE . REFERENCE can be ' bof ' or - 1 Beginning of file ' cof ' or 0 Current position in file ' eof ' or 1 End of file B is 0 on success and - 1 on failure . See also : FSEEK , FILEOBJ / FTELL ftell - find current location within a FILEOBJ LOCATION = FTELL ( FILEOBJ_OBJ ) Returns the current location ( in bytes ) relative to the beginning of the file . If the query fails , - 1 is returned . See also : FSEEK , FILEOBJ / FSEEK , FTELL fwrite - write data to a FILEOBJ COUNT = FWRITE ( FILEOBJ_OBJ , DATA , [ PRECISION ] , [ SKIP ] , [ MACHINEFORMAT ] ) Attempts to write DATA elements with resolution PRECISION . If PRECISION is not provided , then 'char' is assumed . If SKIP is provided , then SKIP is in number of bytes , unless PRECISION is in bits , in which case SKIP is in bits . MACHINEFORMAT is the machine format to use . See FWRITE for a full description of these input arguments . See also : FWRITE ge - >= (GE) Greater than or equal relation for handles. H1 >= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise >= result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = GE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / ge is inherited from superclass handle gt - > (GT) Greater than relation for handles. H1 > H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise > result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = GT ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / gt is inherited from superclass handle isvalid - ISVALID Test handle validity. TF = ISVALID ( H ) performs an element - wise check for validity on the handle elements of H . The result is a logical array of the same dimensions as H , where each element is the element - wise validity result . A handle is invalid if it has been deleted or if it is an element of a handle array and has not yet been initialized . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / DELETE Help for ndr . file . fileobj / isvalid is inherited from superclass handle Documentation for ndr . file . fileobj / isvalid doc handle / isvalid le - <= (LE) Less than or equal relation for handles. Handles are equal if they are handles for the same object . All comparisons use a number associated with each handle object . Nothing can be assumed about the result of a handle comparison except that the repeated comparison of two handles in the same MATLAB session will yield the same result . The order of handle values is purely arbitrary and has no connection to the state of the handle objects being compared . H1 <= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise >= result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = LE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / le is inherited from superclass handle listener - LISTENER Add listener for event without binding the listener to the source object. el = LISTENER ( hSource , Eventname , callbackFcn ) creates a listener for the event named Eventname . The source of the event is the handle object hSource . If hSource is an array of source handles , the listener responds to the named event on any handle in the array . callbackFcn is a function handle that is invoked when the event is triggered . el = LISTENER ( hSource , PropName , Eventname , callback ) adds a listener for a property event . Eventname must be one of 'PreGet' , 'PostGet' , 'PreSet' , or 'PostSet' . Eventname can be a string sclar or character vector . PropName must be either a single property name specified as a string scalar or character vector , or a collection of property names specified as a cell array of character vectors or a string array , or as an array of one ore more meta . property objects . The properties must belong to the class of hSource . If hSource is scalar , PropName can include dynamic properties . For all forms , listener returns an event . listener . To remove a listener , delete the object returned by listener . For example , delete ( el ) calls the handle class delete method to remove the listener and delete it from the workspace . Calling delete ( el ) on the listener object deletes the listener , which means the event no longer causes the callback function to execute . LISTENER does not bind the listener 's lifecycle to the object that is the source of the event . Destroying the source object does not impact the lifecycle of the listener object . A listener created with LISTENER must be destroyed independently of the source object . Calling delete ( el ) explicitly destroys the listener . Redefining or clearing the variable containing the listener can delete the listener if no other references to it exist . To tie the lifecycle of the listener to the lifecycle of the source object , use addlistener . See also ADDLISTENER , EVENT . LISTENER , NDR . FILE . FILEOBJ , NOTIFY , DELETE , META . PROPERTY , EVENTS Help for ndr . file . fileobj / listener is inherited from superclass handle Documentation for ndr . file . fileobj / listener doc handle / listener lt - < (LT) Less than relation for handles. H1 < H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise < result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = LT ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / lt is inherited from superclass handle ne - ~= (NE) Not equal relation for handles. Handles are equal if they are handles for the same object and are unequal otherwise . H1 ~= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise equality result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = NE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT Help for ndr . file . fileobj / ne is inherited from superclass handle notify - NOTIFY Notify listeners of event. NOTIFY ( H , eventname ) notifies listeners added to the event named eventname for handle object array H that the event is taking place . eventname can be a string scalar or character vector . H is the array of handles to the event source objects , and ' eventname ' must be a character vector . NOTIFY ( H , eventname , ed ) provides a way of encapsulating information about an event which can then be accessed by each registered listener . ed must belong to the EVENT . EVENTDATA class . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / ADDLISTENER , NDR . FILE . FILEOBJ / LISTENER , EVENT . EVENTDATA , EVENTS Help for ndr . file . fileobj / notify is inherited from superclass handle Documentation for ndr . file . fileobj / notify doc handle / notify setproperties - set the properties of a FILEOBJ FILEOBJ_OBJ = SETPROPERTIES ( FILEOBJ_OBJ , 'PROPERTY1' , VALUE1 , ...) Sets the properties of a FILEOBJ with name / value pairs . Properties are : fullpathfilename ; % the full path file name of the file fid ; % The Matlab file identifier permission ; % The file permission machineformat % big-endian ( 'b' ), little-endian ( 'l' ), or native ( 'n' )","title":"ndr.file.fileobj"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/#class-ndrfilefileobj","text":"FILEOBJ - a Matlab binary file object ; an interface to fopen, fread, fwrite, fseek, fclose, ftell This is an object interface to fopen , fread , fwrite , fseek , fclose , and ftell . Why do this ? One could imagine one day separating the process of reading and writing a data stream from the file system . For example , one could write to GRIDFS by overriding these functions , and the user ' s code would never have to know .","title":"CLASS ndr.file.fileobj"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/#superclasses","text":"handle","title":"Superclasses"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/#properties","text":"Property Description fullpathfilename fid permission machineformat 'big-endian' or 'little-endian'","title":"Properties"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/#methods","text":"Method Description addlistener ADDLISTENER Add listener for event. delete delete a FILEOBJ_OBJ, closing file first if need be eq == (EQ) Test handle equality. fclose close a FILEOBJ feof test to see if a FILEOBJ is at END-OF-FILE ferror return the last file error message for FILEOBJ fgetl get a line from a FILEOBJ fgets get a line from a FILEOBJ fileobj create a new binary file object fileparts return filename parts for the file associated with FILEOBJ findobj FINDOBJ Find objects matching specified conditions. findprop FINDPROP Find property of MATLAB handle object. fopen open a FILEOBJ fprintf print data to a FILEOBJ_OBJ fread read data from a FILEOBJ frewind 'rewind' a FILEOBJ back to the beginning fscanf scan data from a FILEOBJ_OBJ fseek seek to a location within a FILEOBJ ftell find current location within a FILEOBJ fwrite write data to a FILEOBJ ge >= (GE) Greater than or equal relation for handles. gt > (GT) Greater than relation for handles. isvalid ISVALID Test handle validity. le <= (LE) Less than or equal relation for handles. listener LISTENER Add listener for event without binding the listener to the source object. lt < (LT) Less than relation for handles. ne ~= (NE) Not equal relation for handles. notify NOTIFY Notify listeners of event. setproperties set the properties of a FILEOBJ","title":"Methods"},{"location":"reference/%2Bndr/%2Bfile/fileobj.m/#methods-help","text":"addlistener - ADDLISTENER Add listener for event. el = ADDLISTENER ( hSource , Eventname , callbackFcn ) creates a listener for the event named Eventname . The source of the event is the handle object hSource . If hSource is an array of source handles , the listener responds to the named event on any handle in the array . callbackFcn is a function handle that is invoked when the event is triggered . el = ADDLISTENER ( hSource , PropName , Eventname , Callback ) adds a listener for a property event . Eventname must be one of 'PreGet' , 'PostGet' , 'PreSet' , or 'PostSet' . Eventname can be a string scalar or character vector . PropName must be a single property name specified as string scalar or character vector , or a collection of property names specified as a cell array of character vectors or a string array , or as an array of one or more meta . property objects . The properties must belong to the class of hSource . If hSource is scalar , PropName can include dynamic properties . For all forms , addlistener returns an event . listener . To remove a listener , delete the object returned by addlistener . For example , delete ( el ) calls the handle class delete method to remove the listener and delete it from the workspace . ADDLISTENER binds the listener 's lifecycle to the object that is the source of the event . Unless you explicitly delete the listener , it is destroyed only when the source object is destroyed . To control the lifecycle of the listener independently from the event source object , use listener or the event . listener constructor to create the listener . See also LISTENER , EVENT . LISTENER , NDR . FILE . FILEOBJ , NOTIFY , DELETE , META . PROPERTY , EVENTS Help for ndr . file . fileobj / addlistener is inherited from superclass handle Documentation for ndr . file . fileobj / addlistener doc handle / addlistener delete - delete a FILEOBJ_OBJ, closing file first if need be DELETE ( FILEOBJ_OBJ ) Deletes the handle FILEOBJ_OBJ . If the file ( FILEOBJ_OBJ . fid ) is open , it is closed first . See also : HANDLE / DELETE , FILEOBJ / FCLOSE eq - == (EQ) Test handle equality. Handles are equal if they are handles for the same object . H1 == H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise equality result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = EQ ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / eq is inherited from superclass handle fclose - close a FILEOBJ FILEOBJ_OBJ = FCLOSE ( FILEOBJ_OBJ ) Close a file associated with a FILEOBJ . Attempt to close the file and then set FILEOBJ_OBJ . fid to - 1 . feof - test to see if a FILEOBJ is at END-OF-FILE B = FEOF ( FILEOBJ_OBJ ) Returns 1 if FILEOBJ_OBJ is at its end of file , 0 otherwise . See also : FSEEK , FILEOBJ / FSEEK , FTELL ferror - return the last file error message for FILEOBJ [ MESSAGE , ERRORNUM ] = FERROR ( FILEOBJ_OBJ , COMMAND ) Return the most recent file error MESSAGE and ERRORNUM for the file associated with FERROR . fgetl - get a line from a FILEOBJ TLINE = FGETL ( FILEOBJ_OBJ ) Returns the next line ( not including NEWLINE character ) just like FGETL . See also : FGETL fgets - get a line from a FILEOBJ TLINE = FGETS ( FILEOBJ_OBJ , [ NCHAR ] ) Returns the next line ( including NEWLINE character ) just like FGETS . See also : FGETS fileobj - create a new binary file object FILEOBJ_OBJ = FILEOBJ ( ... ) Creates an empty FILEOBJ object . If FILENAME is provided , then the filename is stored . Documentation for ndr . file . fileobj / fileobj doc ndr . file . fileobj fileparts - return filename parts for the file associated with FILEOBJ [PATHSTR,NAME,EXT] = FILEPARTS(FILEOBJ_OBJ) Returns FILEPARTS of the 'fullpathfilename' field of FILEOBJ. findobj - FINDOBJ Find objects matching specified conditions. The FINDOBJ method of the HANDLE class follows the same syntax as the MATLAB FINDOBJ command , except that the first argument must be an array of handles to objects . HM = FINDOBJ ( H , < conditions > ) searches the handle object array H and returns an array of handle objects matching the specified conditions . Only the public members of the objects of H are considered when evaluating the conditions . See also FINDOBJ , NDR . FILE . FILEOBJ Help for ndr . file . fileobj / findobj is inherited from superclass handle Documentation for ndr . file . fileobj / findobj doc handle / findobj findprop - FINDPROP Find property of MATLAB handle object. p = FINDPROP ( H , PROPNAME ) finds and returns the META . PROPERTY object associated with property name PROPNAME of scalar handle object H . PROPNAME can be a string scalar or character vector . It can be the name of a property defined by the class of H or a dynamic property added to scalar object H . If no property named PROPNAME exists for object H , an empty META . PROPERTY array is returned . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / FINDOBJ , DYNAMICPROPS , META . PROPERTY Help for ndr . file . fileobj / findprop is inherited from superclass handle Documentation for ndr . file . fileobj / findprop doc handle / findprop fopen - open a FILEOBJ FILEOBJ_OBJ = FOPEN ( FILEOBJ_OBJ , [ , PERMISSION ] , [ MACHINEFORMAT ] , [ FILENAME ] ) Opens the file associated with a FILEOBJ_OBJ object . If FILENAME , PERMISSION , and MACHINEFORMAT are given , then those variables of FILEOBJ_OBJ are updated . If they are not given , then the existing values in the FILEOBJ_OBJ are used . Note that the order of the input arguments differs from FOPEN , so that the object can be called in place of an FID ( e . g ., fid = fopen ( myvariable ), where myvariable is either a file name or a FILEOBJ object ). If the operation is successful , then FILEOBJ_OBJ . fid is greater than 3. Otherwise , FILEOBJ_OBJ . fid is - 1. See also : FOPEN , FILEOBJ / FCLOSE , FCLOSE fprintf - print data to a FILEOBJ_OBJ [ COUNT ] = FPRINTF ( FID , FORMAT , A , ...) Call FPRINTF ( see FPRINTF for inputs ) for the file associated with FILEOBJ_OBJ . fread - read data from a FILEOBJ COUNT = FWRITE ( FILEOBJ_OBJ , COUNT , [ PRECISION ] , [ SKIP ] , [ MACHINEFORMAT ] ) Attempts to read COUNT elements with resolution PRECISION . If PRECISION is not provided , then 'char' is assumed . If SKIP is provided , then SKIP is in number of bytes , unless PRECISION is in bits , in which case SKIP is in bits . MACHINEFORMAT is the machine format to use . See FREAD for a full description of these input arguments . See also : FREAD frewind - 'rewind' a FILEOBJ back to the beginning FREWIND(FILEOBJ_OBJ) Seeks to the beginning of the file. See also: FSEEK, FILEOBJ/FSEEK, FTELL fscanf - scan data from a FILEOBJ_OBJ [ A,COUNT ] = FSCANF ( FID , FORMAT , [ SIZEA ] ) Call FSCANF ( see FSCANF for inputs ) for the file associated with FILEOBJ_OBJ . fseek - seek to a location within a FILEOBJ B = FSEEK ( FILEOBJ_OBJ , OFFSET , REFERENCE ) Seeks the file to the location OFFSET ( in bytes ) relative to REFERENCE . REFERENCE can be ' bof ' or - 1 Beginning of file ' cof ' or 0 Current position in file ' eof ' or 1 End of file B is 0 on success and - 1 on failure . See also : FSEEK , FILEOBJ / FTELL ftell - find current location within a FILEOBJ LOCATION = FTELL ( FILEOBJ_OBJ ) Returns the current location ( in bytes ) relative to the beginning of the file . If the query fails , - 1 is returned . See also : FSEEK , FILEOBJ / FSEEK , FTELL fwrite - write data to a FILEOBJ COUNT = FWRITE ( FILEOBJ_OBJ , DATA , [ PRECISION ] , [ SKIP ] , [ MACHINEFORMAT ] ) Attempts to write DATA elements with resolution PRECISION . If PRECISION is not provided , then 'char' is assumed . If SKIP is provided , then SKIP is in number of bytes , unless PRECISION is in bits , in which case SKIP is in bits . MACHINEFORMAT is the machine format to use . See FWRITE for a full description of these input arguments . See also : FWRITE ge - >= (GE) Greater than or equal relation for handles. H1 >= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise >= result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = GE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / ge is inherited from superclass handle gt - > (GT) Greater than relation for handles. H1 > H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise > result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = GT ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / gt is inherited from superclass handle isvalid - ISVALID Test handle validity. TF = ISVALID ( H ) performs an element - wise check for validity on the handle elements of H . The result is a logical array of the same dimensions as H , where each element is the element - wise validity result . A handle is invalid if it has been deleted or if it is an element of a handle array and has not yet been initialized . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / DELETE Help for ndr . file . fileobj / isvalid is inherited from superclass handle Documentation for ndr . file . fileobj / isvalid doc handle / isvalid le - <= (LE) Less than or equal relation for handles. Handles are equal if they are handles for the same object . All comparisons use a number associated with each handle object . Nothing can be assumed about the result of a handle comparison except that the repeated comparison of two handles in the same MATLAB session will yield the same result . The order of handle values is purely arbitrary and has no connection to the state of the handle objects being compared . H1 <= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise >= result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = LE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LT , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / le is inherited from superclass handle listener - LISTENER Add listener for event without binding the listener to the source object. el = LISTENER ( hSource , Eventname , callbackFcn ) creates a listener for the event named Eventname . The source of the event is the handle object hSource . If hSource is an array of source handles , the listener responds to the named event on any handle in the array . callbackFcn is a function handle that is invoked when the event is triggered . el = LISTENER ( hSource , PropName , Eventname , callback ) adds a listener for a property event . Eventname must be one of 'PreGet' , 'PostGet' , 'PreSet' , or 'PostSet' . Eventname can be a string sclar or character vector . PropName must be either a single property name specified as a string scalar or character vector , or a collection of property names specified as a cell array of character vectors or a string array , or as an array of one ore more meta . property objects . The properties must belong to the class of hSource . If hSource is scalar , PropName can include dynamic properties . For all forms , listener returns an event . listener . To remove a listener , delete the object returned by listener . For example , delete ( el ) calls the handle class delete method to remove the listener and delete it from the workspace . Calling delete ( el ) on the listener object deletes the listener , which means the event no longer causes the callback function to execute . LISTENER does not bind the listener 's lifecycle to the object that is the source of the event . Destroying the source object does not impact the lifecycle of the listener object . A listener created with LISTENER must be destroyed independently of the source object . Calling delete ( el ) explicitly destroys the listener . Redefining or clearing the variable containing the listener can delete the listener if no other references to it exist . To tie the lifecycle of the listener to the lifecycle of the source object , use addlistener . See also ADDLISTENER , EVENT . LISTENER , NDR . FILE . FILEOBJ , NOTIFY , DELETE , META . PROPERTY , EVENTS Help for ndr . file . fileobj / listener is inherited from superclass handle Documentation for ndr . file . fileobj / listener doc handle / listener lt - < (LT) Less than relation for handles. H1 < H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise < result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = LT ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / NE Help for ndr . file . fileobj / lt is inherited from superclass handle ne - ~= (NE) Not equal relation for handles. Handles are equal if they are handles for the same object and are unequal otherwise . H1 ~= H2 performs element - wise comparisons between handle arrays H1 and H2 . H1 and H2 must be of the same dimensions unless one is a scalar . The result is a logical array of the same dimensions , where each element is an element - wise equality result . If one of H1 or H2 is scalar , scalar expansion is performed and the result will match the dimensions of the array that is not scalar . TF = NE ( H1 , H2 ) stores the result in a logical array of the same dimensions . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / EQ , NDR . FILE . FILEOBJ / GE , NDR . FILE . FILEOBJ / GT , NDR . FILE . FILEOBJ / LE , NDR . FILE . FILEOBJ / LT Help for ndr . file . fileobj / ne is inherited from superclass handle notify - NOTIFY Notify listeners of event. NOTIFY ( H , eventname ) notifies listeners added to the event named eventname for handle object array H that the event is taking place . eventname can be a string scalar or character vector . H is the array of handles to the event source objects , and ' eventname ' must be a character vector . NOTIFY ( H , eventname , ed ) provides a way of encapsulating information about an event which can then be accessed by each registered listener . ed must belong to the EVENT . EVENTDATA class . See also NDR . FILE . FILEOBJ , NDR . FILE . FILEOBJ / ADDLISTENER , NDR . FILE . FILEOBJ / LISTENER , EVENT . EVENTDATA , EVENTS Help for ndr . file . fileobj / notify is inherited from superclass handle Documentation for ndr . file . fileobj / notify doc handle / notify setproperties - set the properties of a FILEOBJ FILEOBJ_OBJ = SETPROPERTIES ( FILEOBJ_OBJ , 'PROPERTY1' , VALUE1 , ...) Sets the properties of a FILEOBJ with name / value pairs . Properties are : fullpathfilename ; % the full path file name of the file fid ; % The Matlab file identifier permission ; % The file permission machineformat % big-endian ( 'b' ), little-endian ( 'l' ), or native ( 'n' )","title":"Methods help"},{"location":"reference/%2Bndr/%2Bfile/textfile2char.m/","text":"ndr.file.textfile2char \u00b6 TEXTFILE2CHAR - Read a text file into a character string STR = TEXTFILE2CHAR(FILENAME) This function reads the entire contents of the file FILENAME into the character string STR.","title":"ndr.file.textfile2char"},{"location":"reference/%2Bndr/%2Bfile/textfile2char.m/#ndrfiletextfile2char","text":"TEXTFILE2CHAR - Read a text file into a character string STR = TEXTFILE2CHAR(FILENAME) This function reads the entire contents of the file FILENAME into the character string STR.","title":"ndr.file.textfile2char"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_datafile.m/","text":"ndr.format.ced.read_SOMSMR_datafile \u00b6 ndr . format . ced . read_SOMSMR_datafile Reads samples from a CED SOM / SMR file [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO , TIME ] = ndr . format . ced . read_SOMSMR_datafile ( FILENAME , HEADER , CHANNEL_NUMBER , T0 , T1 ); Inputs : Reads data from the Cambridge Electronic Design . SOM or . SMR file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_NUMBER is the the channel number for which to return data ( ranging from 1 to the number to return data ; it corresponds to the channel number in the Spike2 . SMR file ( that is , in the Sampling Configuration that was used on Spike2 ). T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0 . If T1 is INF , we will use the end time of the whole file . Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . BLOCKINFO - the output of SONGETBLOCKHEADERS that describes the file blocks TIME - a vector corresponding to the time of each sample read Note : at this time , we can only read single channels at a time . If CHANNEL_NUMBER is an array , there will be an error . If the user need this functionality , please submit an ISSUE on GitHub ( http :// github . com / VH-Lab / NDR-matlab ). See also : ndr . format . ced . read_SOMSMR_header , ndr . format . ced . read_SOMSMR_sampleinterval","title":"ndr.format.ced.read_SOMSMR_datafile"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_datafile.m/#ndrformatcedread_somsmr_datafile","text":"ndr . format . ced . read_SOMSMR_datafile Reads samples from a CED SOM / SMR file [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO , TIME ] = ndr . format . ced . read_SOMSMR_datafile ( FILENAME , HEADER , CHANNEL_NUMBER , T0 , T1 ); Inputs : Reads data from the Cambridge Electronic Design . SOM or . SMR file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_NUMBER is the the channel number for which to return data ( ranging from 1 to the number to return data ; it corresponds to the channel number in the Spike2 . SMR file ( that is , in the Sampling Configuration that was used on Spike2 ). T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0 . If T1 is INF , we will use the end time of the whole file . Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . BLOCKINFO - the output of SONGETBLOCKHEADERS that describes the file blocks TIME - a vector corresponding to the time of each sample read Note : at this time , we can only read single channels at a time . If CHANNEL_NUMBER is an array , there will be an error . If the user need this functionality , please submit an ISSUE on GitHub ( http :// github . com / VH-Lab / NDR-matlab ). See also : ndr . format . ced . read_SOMSMR_header , ndr . format . ced . read_SOMSMR_sampleinterval","title":"ndr.format.ced.read_SOMSMR_datafile"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_header.m/","text":"ndr.format.ced.read_SOMSMR_header \u00b6 ndr . format . intan . read_SOMSMR_header - Read header information from a CED SOM or SMR file HEADER = ndr . format . ced . read_SOMSMR_header ( FILENAME ) Returns a structure HEADER with all of the information fields that are stored in the CED SOM / SMR file FILENAME . CED stands for Cambridge Electronic Design , which makes the Spike2 data acquisition system . This function reads header files for the SOM / SMR file formats . This function depends on sigTOOL by Malcolm Lidierth ( http : // sigtool . sourceforge . net ) . sigTOOL is also included in the https : // github . com / VH - Lab / thirdparty bundle and can be installed with instructions at http : // code . vhlab . org . HEADER contains two substructures : -------------------------------------------------------------------- fileinfo | Information about the file and its version channelinfo | Information about the channels acquired in the file See also : ndr . format . ced . read_SOMSMR_datafile , ndr . format . ced . read_SOMSMR_sampleinterval , SONFILEHEADER ( documents HEADER . fileinfo ),","title":"ndr.format.ced.read_SOMSMR_header"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_header.m/#ndrformatcedread_somsmr_header","text":"ndr . format . intan . read_SOMSMR_header - Read header information from a CED SOM or SMR file HEADER = ndr . format . ced . read_SOMSMR_header ( FILENAME ) Returns a structure HEADER with all of the information fields that are stored in the CED SOM / SMR file FILENAME . CED stands for Cambridge Electronic Design , which makes the Spike2 data acquisition system . This function reads header files for the SOM / SMR file formats . This function depends on sigTOOL by Malcolm Lidierth ( http : // sigtool . sourceforge . net ) . sigTOOL is also included in the https : // github . com / VH - Lab / thirdparty bundle and can be installed with instructions at http : // code . vhlab . org . HEADER contains two substructures : -------------------------------------------------------------------- fileinfo | Information about the file and its version channelinfo | Information about the channels acquired in the file See also : ndr . format . ced . read_SOMSMR_datafile , ndr . format . ced . read_SOMSMR_sampleinterval , SONFILEHEADER ( documents HEADER . fileinfo ),","title":"ndr.format.ced.read_SOMSMR_header"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_sampleinterval.m/","text":"ndr.format.ced.read_SOMSMR_sampleinterval \u00b6 ndr . format . ced . read_SOMSMR_sampleinterval - Reads sample interval from a CED SOM / SMR file [ SAMPLEINTERVAL , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = ndr . format . ced . read_SOMSMR_sampleinterval ( FILENAME , ... HEADER , CHANNEL_NUMBER ) Inputs : Reads the sampleinterval ( in seconds ) for a given channel from the Cambridge Electronic Design . SOM or . SMR file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_NUMBER is the the channel number for which to return data ; it corresponds to the channel number in the Spike2 . SMR file ( that is , in the Sampling Configuration that was used on Spike2 ). Outputs : SAMPLE_INTERVAL - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . See also : ndr . format . ced . read_SOMSMR_datafile , ndr . format . ced . read_SOMSMR_header","title":"ndr.format.ced.read_SOMSMR_sampleinterval"},{"location":"reference/%2Bndr/%2Bformat/%2Bced/read_SOMSMR_sampleinterval.m/#ndrformatcedread_somsmr_sampleinterval","text":"ndr . format . ced . read_SOMSMR_sampleinterval - Reads sample interval from a CED SOM / SMR file [ SAMPLEINTERVAL , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = ndr . format . ced . read_SOMSMR_sampleinterval ( FILENAME , ... HEADER , CHANNEL_NUMBER ) Inputs : Reads the sampleinterval ( in seconds ) for a given channel from the Cambridge Electronic Design . SOM or . SMR file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_NUMBER is the the channel number for which to return data ; it corresponds to the channel number in the Spike2 . SMR file ( that is , in the Sampling Configuration that was used on Spike2 ). Outputs : SAMPLE_INTERVAL - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . See also : ndr . format . ced . read_SOMSMR_datafile , ndr . format . ced . read_SOMSMR_header","title":"ndr.format.ced.read_SOMSMR_sampleinterval"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/Intan_RHD2000_blockinfo.m/","text":"ndr.format.intan.Intan_RHD2000_blockinfo \u00b6 INTAN_RHD2000_BLOCKINFO - Block information for an Intan RHD2000 file [ BLOCK_INFO , BYTES_PER_BLOCK , BYTES_PRESENT , NUMDATABLOCKS ] = ... INTAN_RHD2000_BLOCKINFO ( FILENAME [, HEADER ]) Computes the parameters of each data block of an Intan_RHD_2000 file . The Intan 2000 RHD file type is organized into a header , and then data blocks of samples of the various channel types that the Intan demo board can sample . This file , along with the HEADER , computes the structure of these data blocks that are needed to interpret each data block . FILENAME should be the name of an RHD2000 file ( normally with extension '.rhd' ) . HEADER should be the header information structure that is returned by READ_INTAN_RHD2000_HEADER ; if it is left blank , it will be read from the file . BLOCK_INFO is a structure describing the parameters of each block . BYTES_PER_BLOCK is the number of bytes per data block BYTES_PRESENT is the number of non - header bytes in the file . NUMDATABLOCKS is the number of data blocks in the file . See also : READ_INTAN_RHD2000_HEADER , READ_INTAN_RHD2000_DATAFILE , CAT_INTAN_RHD2000_FILES","title":"ndr.format.intan.Intan_RHD2000_blockinfo"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/Intan_RHD2000_blockinfo.m/#ndrformatintanintan_rhd2000_blockinfo","text":"INTAN_RHD2000_BLOCKINFO - Block information for an Intan RHD2000 file [ BLOCK_INFO , BYTES_PER_BLOCK , BYTES_PRESENT , NUMDATABLOCKS ] = ... INTAN_RHD2000_BLOCKINFO ( FILENAME [, HEADER ]) Computes the parameters of each data block of an Intan_RHD_2000 file . The Intan 2000 RHD file type is organized into a header , and then data blocks of samples of the various channel types that the Intan demo board can sample . This file , along with the HEADER , computes the structure of these data blocks that are needed to interpret each data block . FILENAME should be the name of an RHD2000 file ( normally with extension '.rhd' ) . HEADER should be the header information structure that is returned by READ_INTAN_RHD2000_HEADER ; if it is left blank , it will be read from the file . BLOCK_INFO is a structure describing the parameters of each block . BYTES_PER_BLOCK is the number of bytes per data block BYTES_PRESENT is the number of non - header bytes in the file . NUMDATABLOCKS is the number of data blocks in the file . See also : READ_INTAN_RHD2000_HEADER , READ_INTAN_RHD2000_DATAFILE , CAT_INTAN_RHD2000_FILES","title":"ndr.format.intan.Intan_RHD2000_blockinfo"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/cat_Intan_RHD2000_files.m/","text":"ndr.format.intan.cat_Intan_RHD2000_files \u00b6 CAT_INTAN_RHD2000_FILES - Concatenate multiple RHD files together STATUS = CAT_INTAN_RHD2000_FILES ( FILENAME1 , FILENAME2 , ... ) Concatenate multiple RHD files together . Produces a large file named [ ' cat ' FILENAME1 ]. Note that the filename information in the header of [ ' cat ' FILENAME1 ] will still be FILENAME1 . STATUS should always return 0 if there was no error . See also : READ_INTAN_RHD2000_DATAFILE , READ_INTAN_RHD2000_HEADER","title":"ndr.format.intan.cat_Intan_RHD2000_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/cat_Intan_RHD2000_files.m/#ndrformatintancat_intan_rhd2000_files","text":"CAT_INTAN_RHD2000_FILES - Concatenate multiple RHD files together STATUS = CAT_INTAN_RHD2000_FILES ( FILENAME1 , FILENAME2 , ... ) Concatenate multiple RHD files together . Produces a large file named [ ' cat ' FILENAME1 ]. Note that the filename information in the header of [ ' cat ' FILENAME1 ] will still be FILENAME1 . STATUS should always return 0 if there was no error . See also : READ_INTAN_RHD2000_DATAFILE , READ_INTAN_RHD2000_HEADER","title":"ndr.format.intan.cat_Intan_RHD2000_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/concat_rhd_files.m/","text":"ndr.format.intan.concat_rhd_files \u00b6 CONCAT_RHD_FILES - Concatenate RHD files and rename the original files CONCAT_RHD_FILES ( DIRNAME ) Concatenates all of the * . rhd files in a directory into one larger file , and then renames the original * . rhd files so the extension is . rhd_original . See also : CAT_INTAN_RHD2000_FILES","title":"ndr.format.intan.concat_rhd_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/concat_rhd_files.m/#ndrformatintanconcat_rhd_files","text":"CONCAT_RHD_FILES - Concatenate RHD files and rename the original files CONCAT_RHD_FILES ( DIRNAME ) Concatenates all of the * . rhd files in a directory into one larger file , and then renames the original * . rhd files so the extension is . rhd_original . See also : CAT_INTAN_RHD2000_FILES","title":"ndr.format.intan.concat_rhd_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/copy_Intan_RHD2000_blocks.m/","text":"ndr.format.intan.copy_Intan_RHD2000_blocks \u00b6 COPY_INTAN_RHD2000_BLOCKS - Concatenate multiple RHD blocks together STATUS = COPY_INTAN_RHD2000_BLOCKS ( FILENAME_IN , B1 , B2 , FILENAME_OUT ) Copies data blocks from B1 to B2 from the RHD 2000 file FILENAME_IN and writes it to the file FILENAME_OUT . The first block is numbered 1. This is useful for trimming files down to certain blocks . Check out INTAN_RHD2000_BLOCKINFO to understand the relationship between data blocks and samples ( short version: data blocks are not samples , they are regular collections of samples ). STATUS should always return 0 if there was no error . See also: READ_INTAN_RHD2000_DATAFILE , READ_INTAN_RHD2000_HEADER , INTAN_RHD2000_BLOCKINFO","title":"ndr.format.intan.copy_Intan_RHD2000_blocks"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/copy_Intan_RHD2000_blocks.m/#ndrformatintancopy_intan_rhd2000_blocks","text":"COPY_INTAN_RHD2000_BLOCKS - Concatenate multiple RHD blocks together STATUS = COPY_INTAN_RHD2000_BLOCKS ( FILENAME_IN , B1 , B2 , FILENAME_OUT ) Copies data blocks from B1 to B2 from the RHD 2000 file FILENAME_IN and writes it to the file FILENAME_OUT . The first block is numbered 1. This is useful for trimming files down to certain blocks . Check out INTAN_RHD2000_BLOCKINFO to understand the relationship between data blocks and samples ( short version: data blocks are not samples , they are regular collections of samples ). STATUS should always return 0 if there was no error . See also: READ_INTAN_RHD2000_DATAFILE , READ_INTAN_RHD2000_HEADER , INTAN_RHD2000_BLOCKINFO","title":"ndr.format.intan.copy_Intan_RHD2000_blocks"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/fread_QString.m/","text":"ndr.format.intan.fread_QString \u00b6 a = read_QString ( fid ) Read Qt style QString . The first 32 - bit unsigned number indicates the length of the string ( in bytes ) . If this number equals 0 xFFFFFFFF , the string is null . From Intan Technologies","title":"ndr.format.intan.fread_QString"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/fread_QString.m/#ndrformatintanfread_qstring","text":"a = read_QString ( fid ) Read Qt style QString . The first 32 - bit unsigned number indicates the length of the string ( in bytes ) . If this number equals 0 xFFFFFFFF , the string is null . From Intan Technologies","title":"ndr.format.intan.fread_QString"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_datafile.m/","text":"ndr.format.intan.read_Intan_RHD2000_datafile \u00b6 READ_INTAN_RHD2000_DATAFILE - Read samples from an Intan data file [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = READ_INTAN_RHD2000_DATAFILE ( FILENAME , HEADER , CHANNEL_TYPE , CHANNEL_NUMBERS , T0 , T1 ); Inputs : Reads data from the Intan Technologies . rhd 2000 file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_TYPE is the type of channel to be read ( use table below ) . CHANNEL_NUMBERS are the the channel numbers for which to return data ( randing from 1 to the number of channels of that type sampled ) . CHANNEL_NUMBERS are from 1. .. N where N is the number of channels ENABLED in the recording . 1 is the first channel enabled , 2 is the 2 nd channel enabled , etc . One can examine the header file to see its correspondance with Intan bank and channel indexes ( e . g . , the first channel , 1 , may be 'amp-A-000' ) . T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0. If T1 is INF , we will use the end time of the whole file . CHANNEL_TYPE values : Value : | Meaning : -------------------------------------------------------------------------- 'time' , 'timestamps' , or 1 | read timestamps of samples 'amp' , 'amplifier' or 2 | read amplifier channels 'aux' , 'aux_in' , or 3 | read auxiliary input channels 'supply' , or 4 | read supply voltages 'temp' , or 5 | read temperature sensor 'adc' , or 6 | read analog to digital converter signals 'din' , 'digital_in' , or 7 | read digital input ( a single channel of 16 bit values ) 'dout' , 'digital_out' , or 8 | read digital output signal ( a single channel ) Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . Notes : ( 1 ) The Intan RHD2000 board has its own clock . Asking this function to read at time T0 = 0 will read the first sample in the file . This time might correspond to some other time on the Intan board . Reading the 'time' channel will indicate the time of the sample on the board 's clock. ( 2 ) This function performs no filtering . Even if the user had checked for the RHD2000 software to use a 60 Hz notch or a high - pass filter , this function returns the raw data . See also : READ_INTAN_RHD2000_HEADER 2014 - 12 - 08 SDV - wrote it and tested it","title":"ndr.format.intan.read_Intan_RHD2000_datafile"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_datafile.m/#ndrformatintanread_intan_rhd2000_datafile","text":"READ_INTAN_RHD2000_DATAFILE - Read samples from an Intan data file [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = READ_INTAN_RHD2000_DATAFILE ( FILENAME , HEADER , CHANNEL_TYPE , CHANNEL_NUMBERS , T0 , T1 ); Inputs : Reads data from the Intan Technologies . rhd 2000 file FILENAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_TYPE is the type of channel to be read ( use table below ) . CHANNEL_NUMBERS are the the channel numbers for which to return data ( randing from 1 to the number of channels of that type sampled ) . CHANNEL_NUMBERS are from 1. .. N where N is the number of channels ENABLED in the recording . 1 is the first channel enabled , 2 is the 2 nd channel enabled , etc . One can examine the header file to see its correspondance with Intan bank and channel indexes ( e . g . , the first channel , 1 , may be 'amp-A-000' ) . T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0. If T1 is INF , we will use the end time of the whole file . CHANNEL_TYPE values : Value : | Meaning : -------------------------------------------------------------------------- 'time' , 'timestamps' , or 1 | read timestamps of samples 'amp' , 'amplifier' or 2 | read amplifier channels 'aux' , 'aux_in' , or 3 | read auxiliary input channels 'supply' , or 4 | read supply voltages 'temp' , or 5 | read temperature sensor 'adc' , or 6 | read analog to digital converter signals 'din' , 'digital_in' , or 7 | read digital input ( a single channel of 16 bit values ) 'dout' , 'digital_out' , or 8 | read digital output signal ( a single channel ) Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . Notes : ( 1 ) The Intan RHD2000 board has its own clock . Asking this function to read at time T0 = 0 will read the first sample in the file . This time might correspond to some other time on the Intan board . Reading the 'time' channel will indicate the time of the sample on the board 's clock. ( 2 ) This function performs no filtering . Even if the user had checked for the RHD2000 software to use a 60 Hz notch or a high - pass filter , this function returns the raw data . See also : READ_INTAN_RHD2000_HEADER 2014 - 12 - 08 SDV - wrote it and tested it","title":"ndr.format.intan.read_Intan_RHD2000_datafile"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_directory.m/","text":"ndr.format.intan.read_Intan_RHD2000_directory \u00b6 READ_INTAN_RHD2000_DIRECTORY - Read samples from an Intan data directory ( 1 file per channel format ) [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = READ_INTAN_RHD2000_DIRECTORY ( DIRECTORYNAME , HEADER , CHANNEL_TYPE , CHANNEL_NUMBERS , T0 , T1 ); Inputs : Reads data from the Intan Technologies . rhd 2000 directory DIRECTORYNAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_TYPE is the type of channel to be read ( use table below ) . CHANNEL_NUMBERS are the the channel numbers for which to return data ( randing from 1 to the number of channels of that type sampled ) . CHANNEL_NUMBERS are from 1. .. N where N is the number of channels ENABLED in the recording . 1 is the first channel enabled , 2 is the 2 nd channel enabled , etc . One can examine the header file to see its correspondance with Intan bank and channel indexes ( e . g . , the first channel may be 'amp-A-000' ) . T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0. If T1 is INF , we will use the end time of the whole file . NOTE : It is assumed that the DIRECTORY is a directory / folder with files written in the Intan \"1 file per channel\" format . CHANNEL_TYPE values : Value : | Meaning : -------------------------------------------------------------------------- 'time' , 'timestamps' , or 1 | read timestamps of samples 'amp' , 'amplifier' or 2 | read amplifier channels 'aux' , 'aux_in' , or 3 | read auxiliary input channels 'supply' , or 4 | read supply voltages 'temp' , or 5 | read temperature sensor 'adc' , or 6 | read analog to digital converter signals 'din' , 'digital_in' , or 7 | read digital input ( a single channel of 16 bit values ) 'dout' , 'digital_out' , or 8 | read digital output signal ( a single channel ) Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . Notes : ( 1 ) The Intan RHD2000 board has its own clock . Asking this function to read at time T0 = 0 will read the first sample in the file . This time might correspond to some other time on the Intan board . Reading the 'time' channel will indicate the time of the sample on the board 's clock. ( 2 ) This function performs no filtering . Even if the user had checked for the RHD2000 software to use a 60 Hz notch or a high - pass filter , this function returns the raw data . See also : READ_INTAN_RHD2000_HEADER 2020 - 06 - 11 SDV - wrote it , checked time , amp , aux , supply , din could use more testing with different channel configurations and ADC and DOUT note : dout seems to write to disk even if it is not in the header file but this function will only examine channels that are listed in the header file","title":"ndr.format.intan.read_Intan_RHD2000_directory"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_directory.m/#ndrformatintanread_intan_rhd2000_directory","text":"READ_INTAN_RHD2000_DIRECTORY - Read samples from an Intan data directory ( 1 file per channel format ) [ DATA , TOTAL_SAMPLES , TOTAL_TIME , BLOCKINFO ] = READ_INTAN_RHD2000_DIRECTORY ( DIRECTORYNAME , HEADER , CHANNEL_TYPE , CHANNEL_NUMBERS , T0 , T1 ); Inputs : Reads data from the Intan Technologies . rhd 2000 directory DIRECTORYNAME . The file HEADER information can be provided in HEADER . If HEADER is empty , then it will be read from the file . CHANNEL_TYPE is the type of channel to be read ( use table below ) . CHANNEL_NUMBERS are the the channel numbers for which to return data ( randing from 1 to the number of channels of that type sampled ) . CHANNEL_NUMBERS are from 1. .. N where N is the number of channels ENABLED in the recording . 1 is the first channel enabled , 2 is the 2 nd channel enabled , etc . One can examine the header file to see its correspondance with Intan bank and channel indexes ( e . g . , the first channel may be 'amp-A-000' ) . T0 is the time to start reading ( the beginning of the recording is 0 ) and T1 is the time to stop reading . If T0 is negative , we will start with time 0. If T1 is INF , we will use the end time of the whole file . NOTE : It is assumed that the DIRECTORY is a directory / folder with files written in the Intan \"1 file per channel\" format . CHANNEL_TYPE values : Value : | Meaning : -------------------------------------------------------------------------- 'time' , 'timestamps' , or 1 | read timestamps of samples 'amp' , 'amplifier' or 2 | read amplifier channels 'aux' , 'aux_in' , or 3 | read auxiliary input channels 'supply' , or 4 | read supply voltages 'temp' , or 5 | read temperature sensor 'adc' , or 6 | read analog to digital converter signals 'din' , 'digital_in' , or 7 | read digital input ( a single channel of 16 bit values ) 'dout' , 'digital_out' , or 8 | read digital output signal ( a single channel ) Outputs : DATA - each column contains samples from an individual channel ; if more than one channel has been requested , DATA will have more than one column . TOTAL_SAMPLES - The total number of ( amplifier or digital ) samples estimated to be in the file . TOTAL_TIME - An estimate of the total duration of the time series data in the recorded file , in seconds . Notes : ( 1 ) The Intan RHD2000 board has its own clock . Asking this function to read at time T0 = 0 will read the first sample in the file . This time might correspond to some other time on the Intan board . Reading the 'time' channel will indicate the time of the sample on the board 's clock. ( 2 ) This function performs no filtering . Even if the user had checked for the RHD2000 software to use a 60 Hz notch or a high - pass filter , this function returns the raw data . See also : READ_INTAN_RHD2000_HEADER 2020 - 06 - 11 SDV - wrote it , checked time , amp , aux , supply , din could use more testing with different channel configurations and ADC and DOUT note : dout seems to write to disk even if it is not in the header file but this function will only examine channels that are listed in the header file","title":"ndr.format.intan.read_Intan_RHD2000_directory"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_header.m/","text":"ndr.format.intan.read_Intan_RHD2000_header \u00b6 READ_INTAN_RHD2000_HEADER - Read header information from an Intan data file HEADER = READ_INTAN_RHD2000_HEADER ( FILENAME ) Returns a structure HEADER with all of the information fields that are stored in the Intan RHD2000 file FILENAME . HEADER contains several substructures : -------------------------------------------------------------------- fileinfo | Information about the file and its version frequency_parameters | Information about sampling frequency spike_triggers | Information about spike triggers for each amplifier channel amplifier_channels | Information about amplifier channels aux_input_channels | Information about auxillary input channels supply_voltage_channels | Information about supply voltage channels board_adc_channels | Information about the board analog to digital converter channels board_dig_in_channels | Digital input channels board_dig_out_channels | Digital output channels num_temp_sensor_channels | Number of temperature sensor channels See also : READ_INTAN_RDH2000_DATAFILE","title":"ndr.format.intan.read_Intan_RHD2000_header"},{"location":"reference/%2Bndr/%2Bformat/%2Bintan/read_Intan_RHD2000_header.m/#ndrformatintanread_intan_rhd2000_header","text":"READ_INTAN_RHD2000_HEADER - Read header information from an Intan data file HEADER = READ_INTAN_RHD2000_HEADER ( FILENAME ) Returns a structure HEADER with all of the information fields that are stored in the Intan RHD2000 file FILENAME . HEADER contains several substructures : -------------------------------------------------------------------- fileinfo | Information about the file and its version frequency_parameters | Information about sampling frequency spike_triggers | Information about spike triggers for each amplifier channel amplifier_channels | Information about amplifier channels aux_input_channels | Information about auxillary input channels supply_voltage_channels | Information about supply voltage channels board_adc_channels | Information about the board analog to digital converter channels board_dig_in_channels | Digital input channels board_dig_out_channels | Digital output channels num_temp_sensor_channels | Number of temperature sensor channels See also : READ_INTAN_RDH2000_DATAFILE","title":"ndr.format.intan.read_Intan_RHD2000_header"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/copy_rec_files.m/","text":"ndr.format.spikegadgets.copy_rec_files \u00b6 COPY_SPIKEGADGETS_REC_FILES Shortens .rec files from sample to sample provided in arguments","title":"ndr.format.spikegadgets.copy_rec_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/copy_rec_files.m/#ndrformatspikegadgetscopy_rec_files","text":"COPY_SPIKEGADGETS_REC_FILES Shortens .rec files from sample to sample provided in arguments","title":"ndr.format.spikegadgets.copy_rec_files"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_analogChannels.m/","text":"ndr.format.spikegadgets.read_rec_analogChannels \u00b6 [recData, timestamps] = read_SpikeGadgets_analogChannels(filename,NumChannels, channels, samplingRate,headerSize, configExists) ) Imports digital channel data in matlab from the raw data file INPUTS filename-- a string containing the name of the .dat file (raw file from SD card) NumChannels-- the number of channels in the recording (i.e., 32,64,96...) channels-- the analog channels you want to extract, designated by the byte location (1-based), i.e., [3 5 7] samplingRate-- the sampling rate of the recording, i.e 30000 headerSize--the size, in int16's, of the header block of the data (contains DIO channels and aux analog channels). OUTPUTS timestamps--the system clock when each sample was taken recData-- an N by M matrix with N data points and M channels (M is equal to the number of channels in the input)","title":"ndr.format.spikegadgets.read_rec_analogChannels"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_analogChannels.m/#ndrformatspikegadgetsread_rec_analogchannels","text":"[recData, timestamps] = read_SpikeGadgets_analogChannels(filename,NumChannels, channels, samplingRate,headerSize, configExists) ) Imports digital channel data in matlab from the raw data file INPUTS filename-- a string containing the name of the .dat file (raw file from SD card) NumChannels-- the number of channels in the recording (i.e., 32,64,96...) channels-- the analog channels you want to extract, designated by the byte location (1-based), i.e., [3 5 7] samplingRate-- the sampling rate of the recording, i.e 30000 headerSize--the size, in int16's, of the header block of the data (contains DIO channels and aux analog channels). OUTPUTS timestamps--the system clock when each sample was taken recData-- an N by M matrix with N data points and M channels (M is equal to the number of channels in the input)","title":"ndr.format.spikegadgets.read_rec_analogChannels"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_config.m/","text":"ndr.format.spikegadgets.read_rec_config \u00b6 out = read_SpikeGadgets_config ( filename ) Reads the configuration section of a Trodes (. rec ) file xml header is parsed and read out is a 1 x1 struct with 12 fields configText - length ( configText ) is the number of characters in header filePath - <---> filePrefix - <---> realtimeMode - logical saveDisplayedChanOnly - logical systemTimeAtCreation - str with systemTimeAtCreation timestampAtCreation - str with timestampAtCreation numChannels - str of number of channels in nTrodes ( sum of all trodes channels ) samplingRate - str of sampling rate headerSize - str of sum of numBytes in devices / 2 nTrodes - struct that lists nTrodes with structs inside that describe each channel headerChannels - channels listed in AuxDisplayConfiguration","title":"ndr.format.spikegadgets.read_rec_config"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_config.m/#ndrformatspikegadgetsread_rec_config","text":"out = read_SpikeGadgets_config ( filename ) Reads the configuration section of a Trodes (. rec ) file xml header is parsed and read out is a 1 x1 struct with 12 fields configText - length ( configText ) is the number of characters in header filePath - <---> filePrefix - <---> realtimeMode - logical saveDisplayedChanOnly - logical systemTimeAtCreation - str with systemTimeAtCreation timestampAtCreation - str with timestampAtCreation numChannels - str of number of channels in nTrodes ( sum of all trodes channels ) samplingRate - str of sampling rate headerSize - str of sum of numBytes in devices / 2 nTrodes - struct that lists nTrodes with structs inside that describe each channel headerChannels - channels listed in AuxDisplayConfiguration","title":"ndr.format.spikegadgets.read_rec_config"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_digitalChannels.m/","text":"ndr.format.spikegadgets.read_rec_digitalChannels \u00b6 [recData, timestamps] = read_SpikeGadgets_digitalChannels(filename,NumChannels, channels, samplingRate,headerSize, configExists) ) Imports digital channel data in matlab from the raw data file INPUTS filename-- a string containing the name of the .dat file (raw file from SD card) NumChannels-- the number of channels in the recording (i.e., 32,64,96...) channels-- the digital channels you want to extract, designated as an N by 2 matrix [byte(1-based) bit(1-based)] samplingRate-- the sampling rate of the recording, i.e 30000 headerSize--the size, in int16's, of the header block of the data (contains DIO channels and aux analog channels). OUTPUTS timestamps--the system clock when each sample was taken recData-- a structure continaing the digital state of the channels","title":"ndr.format.spikegadgets.read_rec_digitalChannels"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_digitalChannels.m/#ndrformatspikegadgetsread_rec_digitalchannels","text":"[recData, timestamps] = read_SpikeGadgets_digitalChannels(filename,NumChannels, channels, samplingRate,headerSize, configExists) ) Imports digital channel data in matlab from the raw data file INPUTS filename-- a string containing the name of the .dat file (raw file from SD card) NumChannels-- the number of channels in the recording (i.e., 32,64,96...) channels-- the digital channels you want to extract, designated as an N by 2 matrix [byte(1-based) bit(1-based)] samplingRate-- the sampling rate of the recording, i.e 30000 headerSize--the size, in int16's, of the header block of the data (contains DIO channels and aux analog channels). OUTPUTS timestamps--the system clock when each sample was taken recData-- a structure continaing the digital state of the channels","title":"ndr.format.spikegadgets.read_rec_digitalChannels"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_trodeChannels.m/","text":"ndr.format.spikegadgets.read_rec_trodeChannels \u00b6 [ recData , timestamps ] = read_SpikeGadgets_trodeChannels ( filename , NumChannels , channels , samplingRate , headerSize , s0 , s1 ) ) Imports channel data in matlab from the raw data file INPUTS filename -- a string containing the name of the . dat file ( raw file from SD card ) NumChannels -- the number of channels in the recording ( i . e . , 32 , 64 , 96. .. ) channels -- the channels you want to extract ( extracting all channels at once may overload memory ) numbers 1 - 120 which belong to each 4 of the 30 tetrodes samplingRate -- the sampling rate of the recording , i . e 30000 headerSize -- the size , in int16 's, of the header block of the data ( contains DIO channels and aux analog channels ) . calculated from ( MCUnumbytes + ECUnumbytes + 1 ) / 2 = 17 s0 - the first sample number to read s1 - the last sample number to read OUTPUTS timestamps -- the system clock when each sample was taken recData -- an N by M matrix with N data points and M channels ( M is equal to the number of channels in the input )","title":"ndr.format.spikegadgets.read_rec_trodeChannels"},{"location":"reference/%2Bndr/%2Bformat/%2Bspikegadgets/read_rec_trodeChannels.m/#ndrformatspikegadgetsread_rec_trodechannels","text":"[ recData , timestamps ] = read_SpikeGadgets_trodeChannels ( filename , NumChannels , channels , samplingRate , headerSize , s0 , s1 ) ) Imports channel data in matlab from the raw data file INPUTS filename -- a string containing the name of the . dat file ( raw file from SD card ) NumChannels -- the number of channels in the recording ( i . e . , 32 , 64 , 96. .. ) channels -- the channels you want to extract ( extracting all channels at once may overload memory ) numbers 1 - 120 which belong to each 4 of the 30 tetrodes samplingRate -- the sampling rate of the recording , i . e 30000 headerSize -- the size , in int16 's, of the header block of the data ( contains DIO channels and aux analog channels ) . calculated from ( MCUnumbytes + ECUnumbytes + 1 ) / 2 = 17 s0 - the first sample number to read s1 - the last sample number to read OUTPUTS timestamps -- the system clock when each sample was taken recData -- an N by M matrix with N data points and M channels ( M is equal to the number of channels in the input )","title":"ndr.format.spikegadgets.read_rec_trodeChannels"},{"location":"reference/%2Bndr/%2Bfun/ndrpath.m/","text":"ndr.fun.ndrpath \u00b6 ndr . fun . ndrpath - return the path to NDR , the Neuroscience Data Reader library in Matlab P = ndr . fun . ndrpath () Returns the full path to the ndr package in Matlab .","title":"ndr.fun.ndrpath"},{"location":"reference/%2Bndr/%2Bfun/ndrpath.m/#ndrfunndrpath","text":"ndr . fun . ndrpath - return the path to NDR , the Neuroscience Data Reader library in Matlab P = ndr . fun . ndrpath () Returns the full path to the ndr package in Matlab .","title":"ndr.fun.ndrpath"},{"location":"reference/%2Bndr/%2Bfun/ndrresource.m/","text":"ndr.fun.ndrresource \u00b6 NDRRESOURCE - read an NDR resource file J = ndr.fun.ndrresource(RESOURCENAME) Reads the JSON resource file RESOURCENAME from the NDR resource directory. Returns a Matlab structure that is output by JSONDECODE. See also: ndr.fun.ndrpath, JSONDECODE","title":"ndr.fun.ndrresource"},{"location":"reference/%2Bndr/%2Bfun/ndrresource.m/#ndrfunndrresource","text":"NDRRESOURCE - read an NDR resource file J = ndr.fun.ndrresource(RESOURCENAME) Reads the JSON resource file RESOURCENAME from the NDR resource directory. Returns a Matlab structure that is output by JSONDECODE. See also: ndr.fun.ndrpath, JSONDECODE","title":"ndr.fun.ndrresource"},{"location":"reference/%2Bndr/%2Breader/base.m/","text":"CLASS ndr.reader.base \u00b6 READER - create a new Neuroscience Data Reader Base object READER_OBJ = ndr.reader.base() Creates an Neuroscence Data Reader object of the indicated type. Superclasses \u00b6 none Properties \u00b6 none Methods \u00b6 Method Description base create a new Neuroscience Data Reader Base object canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch Methods help \u00b6 base - create a new Neuroscience Data Reader Base object READER_OBJ = ndr . reader . base () Creates an Neuroscence Data Reader object of the indicated type . Documentation for ndr . reader . base / base doc ndr . reader . base canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ abstract class returns empty epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH(NDR_READER_BASE_OBJ, EPOCHSTREAMS, EPOCH_SELECT) Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields: ------------------------------------------------------- 'name' | The name of the channel (e.g., 'ai1') 'type' | The type of data stored in the channel | (e.g., 'analogin', 'digitalin', 'image', 'timestamp') mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS(MYDEV, CHANNELTYPE, CHANNEL, EPOCH ,S0, S1) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read, beginning from 1 EPOCH is the epoch number to read from. DATA will have one column per channel. readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL SR = SAMPLERATE ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . The abstract class always returns {[ NaN NaN ]}. See also : ndr . time . clocktype , ndr . reader . base / epochclock","title":"ndr.reader.base"},{"location":"reference/%2Bndr/%2Breader/base.m/#class-ndrreaderbase","text":"READER - create a new Neuroscience Data Reader Base object READER_OBJ = ndr.reader.base() Creates an Neuroscence Data Reader object of the indicated type.","title":"CLASS ndr.reader.base"},{"location":"reference/%2Bndr/%2Breader/base.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/%2Bndr/%2Breader/base.m/#properties","text":"none","title":"Properties"},{"location":"reference/%2Bndr/%2Breader/base.m/#methods","text":"Method Description base create a new Neuroscience Data Reader Base object canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch","title":"Methods"},{"location":"reference/%2Bndr/%2Breader/base.m/#methods-help","text":"base - create a new Neuroscience Data Reader Base object READER_OBJ = ndr . reader . base () Creates an Neuroscence Data Reader object of the indicated type . Documentation for ndr . reader . base / base doc ndr . reader . base canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ abstract class returns empty epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH(NDR_READER_BASE_OBJ, EPOCHSTREAMS, EPOCH_SELECT) Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields: ------------------------------------------------------- 'name' | The name of the channel (e.g., 'ai1') 'type' | The type of data stored in the channel | (e.g., 'analogin', 'digitalin', 'image', 'timestamp') mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS(MYDEV, CHANNELTYPE, CHANNEL, EPOCH ,S0, S1) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read, beginning from 1 EPOCH is the epoch number to read from. DATA will have one column per channel. readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL SR = SAMPLERATE ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . The abstract class always returns {[ NaN NaN ]}. See also : ndr . time . clocktype , ndr . reader . base / epochclock","title":"Methods help"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/","text":"CLASS ndr.reader.ced_smr \u00b6 CED_SMR - reader class for Cambridge Electronic Design ( CED ) SMR files This class reads data from CED Spike2 . SMR or . SON file formats . It depends on sigTOOL by Malcolm Lidierth ( http : // sigtool . sourceforge . net ) . sigTOOL is also included in the https : // github . com / VH - Lab / vhlab - thirdparty - matlab bundle and can be installed with instructions at http : // code . vhlab . org . Superclasses \u00b6 ndr.reader.base Properties \u00b6 none Methods \u00b6 Method Description canbereadtogether can the channels in a channel struct be read in a single function call? ced_smr Create a new NDR_NDR_READER_CEDSMR object cedsmrfile Identify the .SMR file out of a file list cedsmrheader2readerchanneltype Convert between Intan headers and the ndr.ndr.reader channel types daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch Methods help \u00b6 canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . ced_smr / canbereadtogether is inherited from superclass ndr . reader . base ced_smr - Create a new NDR_NDR_READER_CEDSMR object N = ndr . reader . ced_smr ( NAME , THEFILENAVIGATOR ) Creates a new object for reading Cambridge Electronic Design SMR files . Documentation for ndr . reader . ced_smr / ced_smr doc ndr . reader . ced_smr cedsmrfile - Identify the .SMR file out of a file list FILENAME = CEDSMRFILE(FILELIST) Given a cell array of strings FILELIST with full-path file names, this function identifies the first file with an extension '.smr' (case insensitive) and returns the result in FILENAME (full-path file name). cedsmrheader2readerchanneltype - Convert between Intan headers and the ndr.ndr.reader channel types CHANNELTYPE = CEDSMRHEADER2READERCHANNELTYPE(CEDSMRCHANNELTYPE) Given an Intan header file type, returns the standard ndr.ndr.reader channel type daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_CEDSMR_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . | ------------------------------------------------------------------------------ epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . ced_smr / epochclock is inherited from superclass ndr . reader . base getchannelsepoch - List the channels that are available on this device CHANNELS = GETCHANNELS(THEDEV, EPOCHFILES, EPOCHSELECT) Returns the channel list of acquired channels in this session CHANNELS is a structure list of all channels with fields: ------------------------------------------------------- 'name' | The name of the channel (e.g., 'ai1') 'type' | The type of data stored in the channel | (e.g., 'analogin', 'digitalin', 'image', 'timestamp') mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . ced_smr . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . ced_smr . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . ced_smr . mfdaq_type is inherited from superclass ndr . reader . base readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCHFILES , S0 , S1 ) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read , beginning from 1 EPOCHFILES is the cell array of full path filenames for this epoch DATA is the channel data ( each column contains data from an indvidual channel ) readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_CEDSMR_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( ' event ' , ' marker ' , ' text ' ) CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the set of epoch files DATA is a multiple - column vector ; the first column has the time of the event . The remaining columns indicate the marker code . In the case of ' events ' , this is just 1 . If more than one channel is requested , DATA is returned as a cell array , one entry per channel . samplerate - GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL SR = SAMPLERATE(DEV, EPOCHFILES, CHANNELTYPE, CHANNEL) SR is the list of sample rate from specified channels t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_NDR_READER_CEDSMR_OBJ , EPOCHFILES , EPOCHSELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the EPOCHFILES that define this epoch in the same units as the ndi . time . clocktype objects returned by EPOCHCLOCK . See also : ndi . time . clocktype , EPOCHCLOCK","title":"ndr.reader.ced_smr"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/#class-ndrreaderced_smr","text":"CED_SMR - reader class for Cambridge Electronic Design ( CED ) SMR files This class reads data from CED Spike2 . SMR or . SON file formats . It depends on sigTOOL by Malcolm Lidierth ( http : // sigtool . sourceforge . net ) . sigTOOL is also included in the https : // github . com / VH - Lab / vhlab - thirdparty - matlab bundle and can be installed with instructions at http : // code . vhlab . org .","title":"CLASS ndr.reader.ced_smr"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/#superclasses","text":"ndr.reader.base","title":"Superclasses"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/#properties","text":"none","title":"Properties"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/#methods","text":"Method Description canbereadtogether can the channels in a channel struct be read in a single function call? ced_smr Create a new NDR_NDR_READER_CEDSMR object cedsmrfile Identify the .SMR file out of a file list cedsmrheader2readerchanneltype Convert between Intan headers and the ndr.ndr.reader channel types daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch","title":"Methods"},{"location":"reference/%2Bndr/%2Breader/ced_smr.m/#methods-help","text":"canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . ced_smr / canbereadtogether is inherited from superclass ndr . reader . base ced_smr - Create a new NDR_NDR_READER_CEDSMR object N = ndr . reader . ced_smr ( NAME , THEFILENAVIGATOR ) Creates a new object for reading Cambridge Electronic Design SMR files . Documentation for ndr . reader . ced_smr / ced_smr doc ndr . reader . ced_smr cedsmrfile - Identify the .SMR file out of a file list FILENAME = CEDSMRFILE(FILELIST) Given a cell array of strings FILELIST with full-path file names, this function identifies the first file with an extension '.smr' (case insensitive) and returns the result in FILENAME (full-path file name). cedsmrheader2readerchanneltype - Convert between Intan headers and the ndr.ndr.reader channel types CHANNELTYPE = CEDSMRHEADER2READERCHANNELTYPE(CEDSMRCHANNELTYPE) Given an Intan header file type, returns the standard ndr.ndr.reader channel type daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_CEDSMR_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . | ------------------------------------------------------------------------------ epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . ced_smr / epochclock is inherited from superclass ndr . reader . base getchannelsepoch - List the channels that are available on this device CHANNELS = GETCHANNELS(THEDEV, EPOCHFILES, EPOCHSELECT) Returns the channel list of acquired channels in this session CHANNELS is a structure list of all channels with fields: ------------------------------------------------------- 'name' | The name of the channel (e.g., 'ai1') 'type' | The type of data stored in the channel | (e.g., 'analogin', 'digitalin', 'image', 'timestamp') mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . ced_smr . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . ced_smr . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . ced_smr . mfdaq_type is inherited from superclass ndr . reader . base readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCHFILES , S0 , S1 ) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read , beginning from 1 EPOCHFILES is the cell array of full path filenames for this epoch DATA is the channel data ( each column contains data from an indvidual channel ) readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ TIMESTAMPS , DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_CEDSMR_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( ' event ' , ' marker ' , ' text ' ) CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the set of epoch files DATA is a multiple - column vector ; the first column has the time of the event . The remaining columns indicate the marker code . In the case of ' events ' , this is just 1 . If more than one channel is requested , DATA is returned as a cell array , one entry per channel . samplerate - GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL SR = SAMPLERATE(DEV, EPOCHFILES, CHANNELTYPE, CHANNEL) SR is the list of sample rate from specified channels t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_NDR_READER_CEDSMR_OBJ , EPOCHFILES , EPOCHSELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the EPOCHFILES that define this epoch in the same units as the ndi . time . clocktype objects returned by EPOCHCLOCK . See also : ndi . time . clocktype , EPOCHCLOCK","title":"Methods help"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/","text":"CLASS ndr.reader.intan_rhd \u00b6 NDR_READER_INTAN_RHD - Reader class for Intan Technologies . RHD file This class reads data from Intan Technologies . RHD file format . Intan Technologies : http : // intantech . com Superclasses \u00b6 ndr.reader.base Properties \u00b6 none Methods \u00b6 Method Description canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels Convert a set of DAQ channel epochclock return the ndr.time.clocktype objects for an epoch filenamefromepochfiles Return the file name that corresponds to the .RHD file, or directory in case of directory getchannelsepoch List the channels that are available on this Intan intan_rhd Create a new Neuroscience Data Reader object intananychannelname2intanchanneltype Converts a channel bank from Intan native format or relative format to the appropriate Intan channel type intanchanneltype2mfdaqchanneltype Convert the channel type to generic format of multifuncdaqchannel intanheadertype2mfdaqchanneltype Convert between Intan headers and the ndr.ndr.reader.mfdaq channel types intanname2mfdaqname Converts a channel name from Intan native format to ndr.ndr.reader.mfdaq format mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type mfdaqchanneltype2intanchanneltype Convert the channel type from generic format of multifuncdaqchannel mfdaqchanneltype2intanfreqheader Return header name with frequency information for channel type mfdaqchanneltype2intanheadertype Convert between the ndr.ndr.reader.mfdaq channel types and Intan headers readchannels_epochsamples Read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate Get the sample rate for specific channel t0_t1 Return the beginning and end epoch times for an Methods help \u00b6 canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . intan_rhd / canbereadtogether is inherited from superclass ndr . reader . base daqchannels2internalchannels - Convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( INTAN_RHD_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data . EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than epoch contained . For most devices , EPOCH_SELECT is always 1. Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | |-----------------------------|----------------------------------------------| | internal_type | Internal channel type ; the type of channel as| | | it is known to the device . This is the type | | | that readepoch_samples takes | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the| | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . | ------------------------------------------------------------------------------ Examples for Intan . Channels can be specified by either absolute reference ( for example , A - 000 means the first channel in bank A ) or in relative reference ( for example , ai1 means the first channel that was turned on ; the one that appears first in the header file ). Example : % absolute reference channelstruct_1 = daqchannels2internalchannels ( intan_rhd_obj , 'A' , 0 , epochstreams , epoch_select ) % channelstruct_1.internal_type = 'ai'; % channelstruct_1.internal_number = 1; % assuming A-000 is the first channel acquired % channelstruct_1.internal_channelname = 'A-000'; % channelstruct_1.ndr_type = 'ai'; % analog input % channelstruct_1.samplerate = 20000; % relative reference channelstruct_2 = daqchannels2internalchannels ( intan_rhd_obj , 'ai' , 1 , epochstreams , epoch_select ) % channelstruct_2.internal_type = 'ai'; % channelstruct_2.internal_number = 1; % we asked for the first internal/relative channel % channelstruct_2.internal_channelname = 'A-000'; % assuming A-000 is the first channel acquired % channelstruct_2.ndr_type = 'ai'; % analog input % channelstruct_2.samplerate = 20000; epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . intan_rhd / epochclock is inherited from superclass ndr . reader . base filenamefromepochfiles - Return the file name that corresponds to the .RHD file, or directory in case of directory [ FILENAME , PARENTDIR , ISDIRECTORY ] = FILENAMEFROMEPOCHFILES ( NDR_NDRREADER_INTANREADER_OBJ , FILENAME_ARRAY ) Examines the list of filenames in FILENAME_ARRAY ( cell array of full path file strings ) and determines which one is an . RHD data file . If the 1 - file - per - channel mode is used , then PARENTDIR is the name of the directory that holds the data files and ISDIRECTORY is 1 . getchannelsepoch - List the channels that are available on this Intan device for a given set of files CHANNELS = GETCHANNELSEPOCH ( INTANREADER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch . CHANNELS is a structure list of all channels with fields : --------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data store in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) intan_rhd - Create a new Neuroscience Data Reader object INTAN_RHD_OBJ = INTAN_RHD () Creates a Neuroscience Data Reader object of the Intan Technologies . RHD file format . Documentation for ndr . reader . intan_rhd / intan_rhd doc ndr . reader . intan_rhd intananychannelname2intanchanneltype - Converts a channel bank from Intan native format or relative format to the appropriate Intan channel type [ INTANCHANNELTYPE , ABSOLUTE ] = INTANANYCHANNELNAME2INTANCHANNELTYPE ( INTANANYCHANNELNAME ) Converts any channel name into the type needed to call ndr . format . intan . readfile . If the channel was specified as an absolute reference ( that is , ' A ' , ' B ' , etc ) , then ABSOLUTE is 1 . Otherwise , if the reference is relative , then ABSOLUTE is 0 . Examples : intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' ai ' ) % returns ' amp ' , 0 intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' A ' ) % returns ' amp ' , 1 intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' DIN ' ) % returns ' din ' , 0 intanchanneltype2mfdaqchanneltype - Convert the channel type to generic format of multifuncdaqchannel from the specific Intan channel type INTANCHANNELTYPE = MFDAQCHANNELTYPE2INTANCHANNELTYPE ( CHANNELTYPE ) The intanchanneltype is a string of the specific channel type for Intan . intanheadertype2mfdaqchanneltype - Convert between Intan headers and the ndr.ndr.reader.mfdaq channel types CHANNELTYPE = INTANHEADERTYPE2MFDAQCHANNELTYPE(INTANCHANNELTYPE) Given an Intan header file type, returns the standard ndi.ndr.reader.mfdaq channel type. intanname2mfdaqname - Converts a channel name from Intan native format to ndr.ndr.reader.mfdaq format [ CHANNAME ] = INTANNAME2MFDAQNAME ( NDR_NDRREADER_INTANREADER_OBJ , TYPE , NAME ) Given an Intan native channel name ( e . g ., 'A-000' ) in NAME and an ndr . ndr . reader . mfdaq channel type string ( see NDI_DEVICE_MFDAQ ), this function produces an ndr . ndr . reader . mfdaq channel name ( e . g ., 'ai1' ). mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . intan_rhd . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . intan_rhd . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . intan_rhd . mfdaq_type is inherited from superclass ndr . reader . base mfdaqchanneltype2intanchanneltype - Convert the channel type from generic format of multifuncdaqchannel to the specific Intan channel type INTANCHANNELTYPE = MFDAQCHANNELTYPE2INTANCHANNELTYPE ( CHANNELTYPE ) The intanchanneltype is a string of the specific channel type for Intan . mfdaqchanneltype2intanfreqheader - Return header name with frequency information for channel type HEADERNAME = MFDAQCHANNELTYPE2INTANFREQHEADER(CHANNELTYPE) Given an ndr.ndr.mfdaq channel type string, this function returns the associated fieldname. mfdaqchanneltype2intanheadertype - Convert between the ndr.ndr.reader.mfdaq channel types and Intan headers INTANCHANHEADERTYPE = MFDAQCHANNELTYPE2INTANHEADERTYPE(CHANNELTYPE) Given a standard ndr.ndr.reader.mfdaq channel type, returns the name of the type as indicated in Intan header files. readchannels_epochsamples - Read the data based on specified channels DATA = READCHANNELS_EPOCHSAMPLES(INTANREADER_OBJ, CHANNELTYPE, CHANNEL, EPOCH, S0, S1) CHANNELTYPE is the type of channel to read (single text string, such as 'ai','analog_input','time') CHANNEL is a vector of the channel numbers to read, beginning from 1. EPOCH is the epoch number to read from. DATA will have one column per channel. readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . intan_rhd / readevents_epochsamples_native is inherited from superclass ndr . reader . base samplerate - Get the sample rate for specific channel SR = SAMPLERATE ( INTANREADER_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels . CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . t0_t1 - Return the beginning and end epoch times for an epoch T0T1 = T0_T1 ( INTAN_RHD_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch EPOCH_NUMBER in the same units as the ndr . time . clocktype objects returned by EPOCH_NUMBER . The abstract class always return {[ NaN NaN ]}. See also : ndr . time . clocktype , EPOCHCLOCK","title":"ndr.reader.intan_rhd"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/#class-ndrreaderintan_rhd","text":"NDR_READER_INTAN_RHD - Reader class for Intan Technologies . RHD file This class reads data from Intan Technologies . RHD file format . Intan Technologies : http : // intantech . com","title":"CLASS ndr.reader.intan_rhd"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/#superclasses","text":"ndr.reader.base","title":"Superclasses"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/#properties","text":"none","title":"Properties"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/#methods","text":"Method Description canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels Convert a set of DAQ channel epochclock return the ndr.time.clocktype objects for an epoch filenamefromepochfiles Return the file name that corresponds to the .RHD file, or directory in case of directory getchannelsepoch List the channels that are available on this Intan intan_rhd Create a new Neuroscience Data Reader object intananychannelname2intanchanneltype Converts a channel bank from Intan native format or relative format to the appropriate Intan channel type intanchanneltype2mfdaqchanneltype Convert the channel type to generic format of multifuncdaqchannel intanheadertype2mfdaqchanneltype Convert between Intan headers and the ndr.ndr.reader.mfdaq channel types intanname2mfdaqname Converts a channel name from Intan native format to ndr.ndr.reader.mfdaq format mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type mfdaqchanneltype2intanchanneltype Convert the channel type from generic format of multifuncdaqchannel mfdaqchanneltype2intanfreqheader Return header name with frequency information for channel type mfdaqchanneltype2intanheadertype Convert between the ndr.ndr.reader.mfdaq channel types and Intan headers readchannels_epochsamples Read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate Get the sample rate for specific channel t0_t1 Return the beginning and end epoch times for an","title":"Methods"},{"location":"reference/%2Bndr/%2Breader/intan_rhd.m/#methods-help","text":"canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . intan_rhd / canbereadtogether is inherited from superclass ndr . reader . base daqchannels2internalchannels - Convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( INTAN_RHD_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data . EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than epoch contained . For most devices , EPOCH_SELECT is always 1. Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | |-----------------------------|----------------------------------------------| | internal_type | Internal channel type ; the type of channel as| | | it is known to the device . This is the type | | | that readepoch_samples takes | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the| | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . | ------------------------------------------------------------------------------ Examples for Intan . Channels can be specified by either absolute reference ( for example , A - 000 means the first channel in bank A ) or in relative reference ( for example , ai1 means the first channel that was turned on ; the one that appears first in the header file ). Example : % absolute reference channelstruct_1 = daqchannels2internalchannels ( intan_rhd_obj , 'A' , 0 , epochstreams , epoch_select ) % channelstruct_1.internal_type = 'ai'; % channelstruct_1.internal_number = 1; % assuming A-000 is the first channel acquired % channelstruct_1.internal_channelname = 'A-000'; % channelstruct_1.ndr_type = 'ai'; % analog input % channelstruct_1.samplerate = 20000; % relative reference channelstruct_2 = daqchannels2internalchannels ( intan_rhd_obj , 'ai' , 1 , epochstreams , epoch_select ) % channelstruct_2.internal_type = 'ai'; % channelstruct_2.internal_number = 1; % we asked for the first internal/relative channel % channelstruct_2.internal_channelname = 'A-000'; % assuming A-000 is the first channel acquired % channelstruct_2.ndr_type = 'ai'; % analog input % channelstruct_2.samplerate = 20000; epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . intan_rhd / epochclock is inherited from superclass ndr . reader . base filenamefromepochfiles - Return the file name that corresponds to the .RHD file, or directory in case of directory [ FILENAME , PARENTDIR , ISDIRECTORY ] = FILENAMEFROMEPOCHFILES ( NDR_NDRREADER_INTANREADER_OBJ , FILENAME_ARRAY ) Examines the list of filenames in FILENAME_ARRAY ( cell array of full path file strings ) and determines which one is an . RHD data file . If the 1 - file - per - channel mode is used , then PARENTDIR is the name of the directory that holds the data files and ISDIRECTORY is 1 . getchannelsepoch - List the channels that are available on this Intan device for a given set of files CHANNELS = GETCHANNELSEPOCH ( INTANREADER_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch . CHANNELS is a structure list of all channels with fields : --------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data store in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) intan_rhd - Create a new Neuroscience Data Reader object INTAN_RHD_OBJ = INTAN_RHD () Creates a Neuroscience Data Reader object of the Intan Technologies . RHD file format . Documentation for ndr . reader . intan_rhd / intan_rhd doc ndr . reader . intan_rhd intananychannelname2intanchanneltype - Converts a channel bank from Intan native format or relative format to the appropriate Intan channel type [ INTANCHANNELTYPE , ABSOLUTE ] = INTANANYCHANNELNAME2INTANCHANNELTYPE ( INTANANYCHANNELNAME ) Converts any channel name into the type needed to call ndr . format . intan . readfile . If the channel was specified as an absolute reference ( that is , ' A ' , ' B ' , etc ) , then ABSOLUTE is 1 . Otherwise , if the reference is relative , then ABSOLUTE is 0 . Examples : intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' ai ' ) % returns ' amp ' , 0 intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' A ' ) % returns ' amp ' , 1 intanchanneltype = ndr . reader . intan_rhd . intananychannelname2intanchanneltype ( ' DIN ' ) % returns ' din ' , 0 intanchanneltype2mfdaqchanneltype - Convert the channel type to generic format of multifuncdaqchannel from the specific Intan channel type INTANCHANNELTYPE = MFDAQCHANNELTYPE2INTANCHANNELTYPE ( CHANNELTYPE ) The intanchanneltype is a string of the specific channel type for Intan . intanheadertype2mfdaqchanneltype - Convert between Intan headers and the ndr.ndr.reader.mfdaq channel types CHANNELTYPE = INTANHEADERTYPE2MFDAQCHANNELTYPE(INTANCHANNELTYPE) Given an Intan header file type, returns the standard ndi.ndr.reader.mfdaq channel type. intanname2mfdaqname - Converts a channel name from Intan native format to ndr.ndr.reader.mfdaq format [ CHANNAME ] = INTANNAME2MFDAQNAME ( NDR_NDRREADER_INTANREADER_OBJ , TYPE , NAME ) Given an Intan native channel name ( e . g ., 'A-000' ) in NAME and an ndr . ndr . reader . mfdaq channel type string ( see NDI_DEVICE_MFDAQ ), this function produces an ndr . ndr . reader . mfdaq channel name ( e . g ., 'ai1' ). mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . intan_rhd . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . intan_rhd . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . intan_rhd . mfdaq_type is inherited from superclass ndr . reader . base mfdaqchanneltype2intanchanneltype - Convert the channel type from generic format of multifuncdaqchannel to the specific Intan channel type INTANCHANNELTYPE = MFDAQCHANNELTYPE2INTANCHANNELTYPE ( CHANNELTYPE ) The intanchanneltype is a string of the specific channel type for Intan . mfdaqchanneltype2intanfreqheader - Return header name with frequency information for channel type HEADERNAME = MFDAQCHANNELTYPE2INTANFREQHEADER(CHANNELTYPE) Given an ndr.ndr.mfdaq channel type string, this function returns the associated fieldname. mfdaqchanneltype2intanheadertype - Convert between the ndr.ndr.reader.mfdaq channel types and Intan headers INTANCHANHEADERTYPE = MFDAQCHANNELTYPE2INTANHEADERTYPE(CHANNELTYPE) Given a standard ndr.ndr.reader.mfdaq channel type, returns the name of the type as indicated in Intan header files. readchannels_epochsamples - Read the data based on specified channels DATA = READCHANNELS_EPOCHSAMPLES(INTANREADER_OBJ, CHANNELTYPE, CHANNEL, EPOCH, S0, S1) CHANNELTYPE is the type of channel to read (single text string, such as 'ai','analog_input','time') CHANNEL is a vector of the channel numbers to read, beginning from 1. EPOCH is the epoch number to read from. DATA will have one column per channel. readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . intan_rhd / readevents_epochsamples_native is inherited from superclass ndr . reader . base samplerate - Get the sample rate for specific channel SR = SAMPLERATE ( INTANREADER_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels . CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . t0_t1 - Return the beginning and end epoch times for an epoch T0T1 = T0_T1 ( INTAN_RHD_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch EPOCH_NUMBER in the same units as the ndr . time . clocktype objects returned by EPOCH_NUMBER . The abstract class always return {[ NaN NaN ]}. See also : ndr . time . clocktype , EPOCHCLOCK","title":"Methods help"},{"location":"reference/%2Bndr/%2Breader/neo.m/","text":"CLASS ndr.reader.neo \u00b6 ndr . reader . neo is a class . self = ndr . reader . neo ( varargin ) Superclasses \u00b6 ndr.reader.base Properties \u00b6 none Methods \u00b6 Method Description canbereadtogether Formatting objects from matlab to python daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch insert_python_path ndr.reader.neo.insert_python_path is a function. mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type neo ndr.reader.neo/neo is a constructor. readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch reload_python ndr.reader.neo.reload_python is a function. samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch Methods help \u00b6 canbereadtogether - Formatting objects from matlab to python daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ abstract class returns empty Help for ndr . reader . neo / daqchannels2internalchannels is inherited from superclass ndr . reader . base epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . neo / epochclock is inherited from superclass ndr . reader . base getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) Help for ndr . reader . neo / getchannelsepoch is inherited from superclass ndr . reader . base insert_python_path - ndr.reader.neo.insert_python_path is a function. mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . neo . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . neo . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . neo . mfdaq_type is inherited from superclass ndr . reader . base neo - ndr.reader.neo/neo is a constructor. self = neo ( varargin ) Documentation for ndr . reader . neo / neo doc ndr . reader . neo readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCH , S0 , S1 ) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read , beginning from 1 EPOCH is the epoch number to read from . DATA will have one column per channel . Help for ndr . reader . neo / readchannels_epochsamples is inherited from superclass ndr . reader . base readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . neo / readevents_epochsamples_native is inherited from superclass ndr . reader . base reload_python - ndr.reader.neo.reload_python is a function. samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL SR = SAMPLERATE ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . Help for ndr . reader . neo / samplerate is inherited from superclass ndr . reader . base t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . The abstract class always returns {[ NaN NaN ]}. See also : ndr . time . clocktype , ndr . reader . neo / epochclock Help for ndr . reader . neo / t0_t1 is inherited from superclass ndr . reader . base","title":"ndr.reader.neo"},{"location":"reference/%2Bndr/%2Breader/neo.m/#class-ndrreaderneo","text":"ndr . reader . neo is a class . self = ndr . reader . neo ( varargin )","title":"CLASS ndr.reader.neo"},{"location":"reference/%2Bndr/%2Breader/neo.m/#superclasses","text":"ndr.reader.base","title":"Superclasses"},{"location":"reference/%2Bndr/%2Breader/neo.m/#properties","text":"none","title":"Properties"},{"location":"reference/%2Bndr/%2Breader/neo.m/#methods","text":"Method Description canbereadtogether Formatting objects from matlab to python daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch getchannelsepoch List the channels that are available on this device for a given epoch insert_python_path ndr.reader.neo.insert_python_path is a function. mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type neo ndr.reader.neo/neo is a constructor. readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch reload_python ndr.reader.neo.reload_python is a function. samplerate GET THE SAMPLE RATE FOR SPECIFIC CHANNEL t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch","title":"Methods"},{"location":"reference/%2Bndr/%2Breader/neo.m/#methods-help","text":"canbereadtogether - Formatting objects from matlab to python daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHSTREAMS , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ abstract class returns empty Help for ndr . reader . neo / daqchannels2internalchannels is inherited from superclass ndr . reader . base epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . neo / epochclock is inherited from superclass ndr . reader . base getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELSEPOCH ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) Help for ndr . reader . neo / getchannelsepoch is inherited from superclass ndr . reader . base insert_python_path - ndr.reader.neo.insert_python_path is a function. mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . neo . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . neo . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . neo . mfdaq_type is inherited from superclass ndr . reader . base neo - ndr.reader.neo/neo is a constructor. self = neo ( varargin ) Documentation for ndr . reader . neo / neo doc ndr . reader . neo readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCH , S0 , S1 ) CHANNELTYPE is the type of channel to read CHANNEL is a vector of the channel numbers to read , beginning from 1 EPOCH is the epoch number to read from . DATA will have one column per channel . Help for ndr . reader . neo / readchannels_epochsamples is inherited from superclass ndr . reader . base readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . neo / readevents_epochsamples_native is inherited from superclass ndr . reader . base reload_python - ndr.reader.neo.reload_python is a function. samplerate - GET THE SAMPLE RATE FOR SPECIFIC CHANNEL SR = SAMPLERATE ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT , CHANNELTYPE , CHANNEL ) SR is an array of sample rates from the specified channels CHANNELTYPE can be either a string or a cell array of strings the same length as the vector CHANNEL . If CHANNELTYPE is a single string , then it is assumed that that CHANNELTYPE applies to every entry of CHANNEL . Help for ndr . reader . neo / samplerate is inherited from superclass ndr . reader . base t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the beginning ( t0 ) and end ( t1 ) times of the epoch defined by EPOCHSTREAMS and EPOCH_SELECT . The abstract class always returns {[ NaN NaN ]}. See also : ndr . time . clocktype , ndr . reader . neo / epochclock Help for ndr . reader . neo / t0_t1 is inherited from superclass ndr . reader . base","title":"Methods help"},{"location":"reference/%2Bndr/%2Breader/somecompany_someformat.m/","text":"ndr.reader.somecompany_someformat \u00b6 SOMECOMPANY_SOMEFORMAT - create a new NDR reader base object that reads a particular company or group ' s format NDR_OBJ = SOMECOMPANY_SOMEFORMAT () This is a template file for making ndr . reader . base objects that interpret and read data from a particular company or group SOMECOMPANY in SOMEFORMAT . Documentation for ndr . reader . somecompany_someformat doc ndr . reader . somecompany_someformat","title":"ndr.reader.somecompany_someformat"},{"location":"reference/%2Bndr/%2Breader/somecompany_someformat.m/#ndrreadersomecompany_someformat","text":"SOMECOMPANY_SOMEFORMAT - create a new NDR reader base object that reads a particular company or group ' s format NDR_OBJ = SOMECOMPANY_SOMEFORMAT () This is a template file for making ndr . reader . base objects that interpret and read data from a particular company or group SOMECOMPANY in SOMEFORMAT . Documentation for ndr . reader . somecompany_someformat doc ndr . reader . somecompany_someformat","title":"ndr.reader.somecompany_someformat"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/","text":"CLASS ndr.reader.spikegadgets_rec \u00b6 path --> epoch start & end Superclasses \u00b6 ndr.reader.base Properties \u00b6 none Methods \u00b6 Method Description canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch filenamefromepochfiles ndr.reader.spikegadgets_rec/filenamefromepochfiles is a function. getchannelsepoch List the channels that are available on this device for a given epoch getepochprobemap GETEPOCHPROBEMAP returns struct with probe information mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL spikegadgets_rec create a new Neuroscience Data Reader object t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch test test reading using NDR reader Methods help \u00b6 canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . spikegadgets_rec / canbereadtogether is inherited from superclass ndr . reader . base daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHFILES , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | Rate of sampling | ------------------------------------------------------------------------------ abstract class returns empty epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . spikegadgets_rec / epochclock is inherited from superclass ndr . reader . base filenamefromepochfiles - ndr.reader.spikegadgets_rec/filenamefromepochfiles is a function. filename = filenamefromepochfiles(ndr_reader_base_spikegadgets_obj, filename) getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELS ( THEDEV , EPOCHFILES ) EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) getepochprobemap - GETEPOCHPROBEMAP returns struct with probe information name , reference , n - trode , channels EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . spikegadgets_rec . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . spikegadgets_rec . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . spikegadgets_rec . mfdaq_type is inherited from superclass ndr . reader . base readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCHFILES , S0 , S1 ) CHANNELTYPE is the type of channel to read ' digital_in ' , ' digital_out ' , ' analog_in ' , ' analog_out ' or ' auxiliary ' CHANNEL is a vector of the channel numbers to read beginning from 1 if ' etrodeftrode ' is channeltype , if channeltype is ' analog_in ' channel is an array with the string names of analog channels ' Ain1 ' through 8 EPOCH is set of files in the epoch DATA is the channel data ( each column contains data from an indvidual channel ) readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . spikegadgets_rec / readevents_epochsamples_native is inherited from superclass ndr . reader . base samplerate - GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL SR = SAMPLERATE ( DEV , EPOCHFILES , CHANNELTYPE , CHANNEL ) SR is the list of sample rate from specified channels EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . CHANNELTYPE and CHANNEL not used in this case since it is the same for all channels in this device spikegadgets_rec - create a new Neuroscience Data Reader object READER_OBJ = ndr . ndr . reader () Creates an Neuroscence Data Reader object of SpikeGadgets . Documentation for ndr . reader . spikegadgets_rec / spikegadgets_rec doc ndr . reader . spikegadgets_rec t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDI_EPOCHSET_OBJ , EPOCHFILES ) EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1. Return the beginning ( t0 ) and end ( t1 ) times of the epoch EPOCH_NUMBER in the same units as the ndi . time . clocktype objects returned by EPOCHCLOCK . The abstract class always returns {[ NaN NaN ]}. See also : ndi . time . clocktype , EPOCHCLOCK test - test reading using NDR reader","title":"ndr.reader.spikegadgets_rec"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/#class-ndrreaderspikegadgets_rec","text":"path --> epoch start & end","title":"CLASS ndr.reader.spikegadgets_rec"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/#superclasses","text":"ndr.reader.base","title":"Superclasses"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/#properties","text":"none","title":"Properties"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/#methods","text":"Method Description canbereadtogether can the channels in a channel struct be read in a single function call? daqchannels2internalchannels convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions epochclock return the ndr.time.clocktype objects for an epoch filenamefromepochfiles ndr.reader.spikegadgets_rec/filenamefromepochfiles is a function. getchannelsepoch List the channels that are available on this device for a given epoch getepochprobemap GETEPOCHPROBEMAP returns struct with probe information mfdaq_channeltypes channel types for ndi.daq.system.mfdaq objects mfdaq_prefix Give the channel prefix for a channel type mfdaq_type Give the preferred long channel type for a channel type readchannels_epochsamples read the data based on specified channels readevents_epochsamples_native read events or markers of specified channels for a specified epoch samplerate GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL spikegadgets_rec create a new Neuroscience Data Reader object t0_t1 return the t0_t1 (beginning and end) epoch times for an epoch test test reading using NDR reader","title":"Methods"},{"location":"reference/%2Bndr/%2Breader/spikegadgets_rec.m/#methods-help","text":"canbereadtogether - can the channels in a channel struct be read in a single function call? [ B , ERRORMSG ] = CANBEREADTOGETHER ( NDR_READER_BASE_OBJ , CHANNELSTRUCT ) Returns 1 if the NDR_READER_BASE_OBJ can read all of the channels in CHANNELSTRUCT with a single function call . If they cannot be read together , a description is provided in ERRORMSG . In the abstract class , this returns 1 if all of the samplerate values are the same and none are NaNs . CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | The sampling rate of this channel , or NaN if | | | not applicable . ------------------------------------------------------------------------------ in the abstract class , this returns 1 if all the samplerates are the same and none are NaNs Help for ndr . reader . spikegadgets_rec / canbereadtogether is inherited from superclass ndr . reader . base daqchannels2internalchannels - convert a set of DAQ channel prefixes and channel numbers to an internal structure to pass to internal reading functions CHANNELSTRUCT = DAQCHANNELS2INTERNALCHANNELS ( NDR_READER_BASE_OBJ , ... CHANNELPREFIX , CHANNELNUMBERS , EPOCHFILES , EPOCH_SELECT ) Inputs : For a set of CHANNELPREFIX ( cell array of channel prefixes that describe channels for this device ) and CHANNELNUMBER ( array of channel numbers , 1 for each entry in CHANNELPREFIX ), and for a given recording epoch ( specified by EPOCHSTREAMS and EPOCH_SELECT ), this function returns a structure CHANNELSTRUCT describing the channel information that should be passed to READCHANNELS_EPOCHSAMPLES or READEVENTS_EPOCHSAMPLES . EPOCHSTREAMS is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Output : CHANNELSTRUCT is a structure with the following fields : ------------------------------------------------------------------------------ | Parameter | Description | | ----------------------------- | ---------------------------------------------- | | internal_type | Internal channel type ; the type of channel as | | | it is known to the device . | | internal_number | Internal channel number , as known to device | | internal_channelname | Internal channel name , as known to the device | | ndr_type | The NDR type of channel ; should be one of the | | | types returned by | | | ndr . reader . base . mfdaq_type | | samplerate | Rate of sampling | ------------------------------------------------------------------------------ abstract class returns empty epochclock - return the ndr.time.clocktype objects for an epoch EC = EPOCHCLOCK ( NDR_READER_BASE_OBJ , EPOCHSTREAMS , EPOCH_SELECT ) Return the clock types available for this epoch as a cell array of ndr . time . clocktype objects ( or sub - class members ) . For the generic ndr . reader . base , this returns a single clock type ' dev_local ' time ' ; See also : ndr . time . clocktype Help for ndr . reader . spikegadgets_rec / epochclock is inherited from superclass ndr . reader . base filenamefromepochfiles - ndr.reader.spikegadgets_rec/filenamefromepochfiles is a function. filename = filenamefromepochfiles(ndr_reader_base_spikegadgets_obj, filename) getchannelsepoch - List the channels that are available on this device for a given epoch CHANNELS = GETCHANNELS ( THEDEV , EPOCHFILES ) EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . Returns the channel list of acquired channels in this epoch CHANNELS is a structure list of all channels with fields : ------------------------------------------------------- ' name ' | The name of the channel ( e . g ., ' ai1 ' ) ' type ' | The type of data stored in the channel | ( e . g ., ' analogin ' , ' digitalin ' , ' image ' , ' timestamp ' ) getepochprobemap - GETEPOCHPROBEMAP returns struct with probe information name , reference , n - trode , channels EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . mfdaq_channeltypes - channel types for ndi.daq.system.mfdaq objects CT = MFDAQ_CHANNELTYPES - channel types for ndi . daq . system . mfdaq objects Returns a cell array of strings of supported channels of the ndi . daq . system . mfdaq class . These are the following : Channel type : | Description : ------------------------------------------------------------- analog_in | Analog input channel aux_in | Auxiliary input analog_out | Analog output channel digital_in | Digital input channel digital_out | Digital output channel marker | See also : ndi . daq . system . mfdaq / MFDAQ_TYPE Help for ndr . reader . spikegadgets_rec . mfdaq_channeltypes is inherited from superclass ndr . reader . base mfdaq_prefix - Give the channel prefix for a channel type PREFIX = MFDAQ_PREFIX ( CHANNELTYPE ) Produces the channel name prefix for a given CHANNELTYPE . Channel type : | MFDAQ_PREFIX : --------------------------------------------------------- 'analog_in' , 'ai' | 'ai' 'analog_out' , 'ao' | 'ao' 'digital_in' , 'di' | 'di' 'digital_out' , 'do' | 'do' 'time' , 'timestamp' , 't' | 't' 'auxiliary' , 'aux' , 'ax' , | 'ax' 'auxiliary_in' | 'mark' , 'marker' , or 'mk' | 'mk' 'text' | 'text' 'event' or 'e' | 'e' 'metadata' or 'md' | 'md' 'digital_in_event' , 'de' , | 'dep' 'digital_in_event_pos' , 'dep' | 'digital_in_event_neg' , 'den' | 'den' 'digital_in_mark' , 'dimp' , | 'dimp' 'digital_in_mark_pos' , 'dim' | 'digital_in_mark_neg' , 'dimn' | 'dimn' See also : ndi . daq . system . mfdaq/MFDAQ_TYPE Help for ndr . reader . spikegadgets_rec . mfdaq_prefix is inherited from superclass ndr . reader . base mfdaq_type - Give the preferred long channel type for a channel type TYPE = MFDAQ_TYPE ( CHANNELTYPE ) Produces the preferred long channel type name for a given CHANNELTYPE . Channel type : | MFDAQ_TYPE : --------------------------------------------------------- ' analog_in ' , ' ai ' | ' analog_in ' ' analog_out ' , ' ao ' | ' analog_out ' ' digital_in ' , ' di ' | ' digital_in ' ' digital_out ' , ' do ' | ' digital_out ' ' time ' , ' timestamp ' , ' t ' | ' time ' ' auxiliary ' , ' aux ' , ' ax ' , | ' auxiliary ' ' auxiliary_in ' | ' mark ' , ' marker ' , or ' mk ' | ' mark ' ' event ' or ' e ' | ' event ' See also : ndi . daq . system . mfdaq / MFDAQ_PREFIX Help for ndr . reader . spikegadgets_rec . mfdaq_type is inherited from superclass ndr . reader . base readchannels_epochsamples - read the data based on specified channels DATA = READ_CHANNELS ( MYDEV , CHANNELTYPE , CHANNEL , EPOCHFILES , S0 , S1 ) CHANNELTYPE is the type of channel to read ' digital_in ' , ' digital_out ' , ' analog_in ' , ' analog_out ' or ' auxiliary ' CHANNEL is a vector of the channel numbers to read beginning from 1 if ' etrodeftrode ' is channeltype , if channeltype is ' analog_in ' channel is an array with the string names of analog channels ' Ain1 ' through 8 EPOCH is set of files in the epoch DATA is the channel data ( each column contains data from an indvidual channel ) readevents_epochsamples_native - read events or markers of specified channels for a specified epoch [ DATA ] = READEVENTS_EPOCHSAMPLES_NATIVE ( NDR_READER_BASE_OBJ , CHANNELTYPE , CHANNEL , EPOCHFILES , T0 , T1 ) CHANNELTYPE is the type of channel to read ( 'event' , 'marker' , etc ). It must be a string ( not a cell array of strings ). CHANNEL is a vector with the identity of the channel ( s ) to be read . EPOCH is the epoch number or epochID DATA is a two - column vector ; the first column has the time of the event . The second column indicates the marker code . In the case of 'events' , this is just 1. If more than one channel is requested , DATA is returned as a cell array , one entry per channel . TIMEREF is an ndi . time . timereference with the NDI_CLOCK of the device , referring to epoch N at time 0 as the reference . Help for ndr . reader . spikegadgets_rec / readevents_epochsamples_native is inherited from superclass ndr . reader . base samplerate - GET THE SAMPLE RATE FOR SPECIFIC EPOCH AND CHANNEL SR = SAMPLERATE ( DEV , EPOCHFILES , CHANNELTYPE , CHANNEL ) SR is the list of sample rate from specified channels EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1 . CHANNELTYPE and CHANNEL not used in this case since it is the same for all channels in this device spikegadgets_rec - create a new Neuroscience Data Reader object READER_OBJ = ndr . ndr . reader () Creates an Neuroscence Data Reader object of SpikeGadgets . Documentation for ndr . reader . spikegadgets_rec / spikegadgets_rec doc ndr . reader . spikegadgets_rec t0_t1 - return the t0_t1 (beginning and end) epoch times for an epoch T0T1 = T0_T1 ( NDI_EPOCHSET_OBJ , EPOCHFILES ) EPOCHFILES is a cell array of full path file names or remote access streams that comprise the epoch of data EPOCH_SELECT allows one to choose which epoch in the file one wants to access , if the file ( s ) has more than one epoch contained . For most devices , EPOCH_SELECT is always 1. Return the beginning ( t0 ) and end ( t1 ) times of the epoch EPOCH_NUMBER in the same units as the ndi . time . clocktype objects returned by EPOCHCLOCK . The abstract class always returns {[ NaN NaN ]}. See also : ndi . time . clocktype , EPOCHCLOCK test - test reading using NDR reader","title":"Methods help"},{"location":"reference/%2Bndr/%2Bstring/channelstring2channels.m/","text":"ndr.string.channelstring2channels \u00b6 ndr . string . channelstring2channels - convert a channel string to an array of channel prefiex and numbers [ CHANNELNAMEPREFIX , CHANNELNUMBER ] = ... ndr . string . channelstring2channels ( CHANNELSTRING ) Given a CHANNELSTRING , returns a cell array of channel prefixes and an array of channel numbers that correspond to the CHANNELSTRING . A CHANNELSTRING is a means of specifying channels that have prefixes and numbers . It includes a sequence of letters , followed by numbers to specify the channels . One can indicate a sequential range of channels by using a dash ( '-' ) and one can enumerate individual channels with a comma ( ',' ) . Different channel prefixes can be specified by placing a plus ( '+' ) between sets of channels . Examples : [ cp , cn ] = ndr . string . channelstring2channels ( 'a1,3-5,2' ) % cp == { 'a' , 'a' , 'a' , 'a' , 'a' } ' % cn == [ 1 3 4 5 2 ] ' [ cp , cn ] = ndr . string . channelstring2channels ( 'ai1-3+b2-4' ) % cp == { 'ai' , 'ai' , 'ai' , 'b' , 'b' , 'b' } ' % cn == [ 1 2 3 2 3 4 ] '","title":"ndr.string.channelstring2channels"},{"location":"reference/%2Bndr/%2Bstring/channelstring2channels.m/#ndrstringchannelstring2channels","text":"ndr . string . channelstring2channels - convert a channel string to an array of channel prefiex and numbers [ CHANNELNAMEPREFIX , CHANNELNUMBER ] = ... ndr . string . channelstring2channels ( CHANNELSTRING ) Given a CHANNELSTRING , returns a cell array of channel prefixes and an array of channel numbers that correspond to the CHANNELSTRING . A CHANNELSTRING is a means of specifying channels that have prefixes and numbers . It includes a sequence of letters , followed by numbers to specify the channels . One can indicate a sequential range of channels by using a dash ( '-' ) and one can enumerate individual channels with a comma ( ',' ) . Different channel prefixes can be specified by placing a plus ( '+' ) between sets of channels . Examples : [ cp , cn ] = ndr . string . channelstring2channels ( 'a1,3-5,2' ) % cp == { 'a' , 'a' , 'a' , 'a' , 'a' } ' % cn == [ 1 3 4 5 2 ] ' [ cp , cn ] = ndr . string . channelstring2channels ( 'ai1-3+b2-4' ) % cp == { 'ai' , 'ai' , 'ai' , 'b' , 'b' , 'b' } ' % cn == [ 1 2 3 2 3 4 ] '","title":"ndr.string.channelstring2channels"},{"location":"reference/%2Bndr/%2Bstring/intseq2str.m/","text":"ndr.string.intseq2str \u00b6 INTSEQ2STR - Convert an array of integers to a compact string , maintaining sequence STR = ndr . string . intseq2str ( A ) Converts the sequence of integers in array A to a compact , human - readable sequence with '-' indicating inclusion of a series of numbers and commas separating discontinuous numbers . The function can also take extra parameters as name / value pairs : Parameter ( default value ) | Description ---------------------------------------------------------------- sep ( ',' ) | The separator between the numbers seq ( '-' ) | The character that indicates a sequential run of numbers Example : A = [ 1 2 3 7 10 ] str = ndr . string . intseq2str ( A ) % str == '1-3,7,10' See also : INT2STR , ndr . string . str2intseq","title":"ndr.string.intseq2str"},{"location":"reference/%2Bndr/%2Bstring/intseq2str.m/#ndrstringintseq2str","text":"INTSEQ2STR - Convert an array of integers to a compact string , maintaining sequence STR = ndr . string . intseq2str ( A ) Converts the sequence of integers in array A to a compact , human - readable sequence with '-' indicating inclusion of a series of numbers and commas separating discontinuous numbers . The function can also take extra parameters as name / value pairs : Parameter ( default value ) | Description ---------------------------------------------------------------- sep ( ',' ) | The separator between the numbers seq ( '-' ) | The character that indicates a sequential run of numbers Example : A = [ 1 2 3 7 10 ] str = ndr . string . intseq2str ( A ) % str == '1-3,7,10' See also : INT2STR , ndr . string . str2intseq","title":"ndr.string.intseq2str"},{"location":"reference/%2Bndr/%2Bstring/str2intseq.m/","text":"ndr.string.str2intseq \u00b6 STR2INTSEQ - Recover a sequence of integers from a string A = ndr . string . str2intseq ( STR ) Given a string that specifies a list of integers , with a dash ( '-' ) indicating a run of sequential integers in order , and a comma ( ',' ) indicating integers that are not ( necessarily ) sequential . The function can also take extra parameters as name / value pairs : Parameter ( default value ) | Description ---------------------------------------------------------------- sep ( ',' ) | The separator between the numbers seq ( '-' ) | The character that indicates a sequential run of numbers Example : str = '1-3,7,10,12' ; a = ndr . string . str2intseq ( str ); % a == [1 2 3 7 10 12]","title":"ndr.string.str2intseq"},{"location":"reference/%2Bndr/%2Bstring/str2intseq.m/#ndrstringstr2intseq","text":"STR2INTSEQ - Recover a sequence of integers from a string A = ndr . string . str2intseq ( STR ) Given a string that specifies a list of integers , with a dash ( '-' ) indicating a run of sequential integers in order , and a comma ( ',' ) indicating integers that are not ( necessarily ) sequential . The function can also take extra parameters as name / value pairs : Parameter ( default value ) | Description ---------------------------------------------------------------- sep ( ',' ) | The separator between the numbers seq ( '-' ) | The character that indicates a sequential run of numbers Example : str = '1-3,7,10,12' ; a = ndr . string . str2intseq ( str ); % a == [1 2 3 7 10 12]","title":"ndr.string.str2intseq"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bced/test.m/","text":"ndr.test.format.ced.test \u00b6 ndr.test.format.ced.test- test reading from CED format","title":"ndr.test.format.ced.test"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bced/test.m/#ndrtestformatcedtest","text":"ndr.test.format.ced.test- test reading from CED format","title":"ndr.test.format.ced.test"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bintan_rhd/test.m/","text":"ndr.test.format.intan_rhd.test \u00b6 ndr.test.format.intan_rhd.test - test reading from Intan RHD format","title":"ndr.test.format.intan_rhd.test"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bintan_rhd/test.m/#ndrtestformatintan_rhdtest","text":"ndr.test.format.intan_rhd.test - test reading from Intan RHD format","title":"ndr.test.format.intan_rhd.test"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bspikegadgets/test.m/","text":"ndr.test.format.spikegadgets.test \u00b6 ndr.test.format.spikegadgets.test - test reading from SpikeGadgets format","title":"ndr.test.format.spikegadgets.test"},{"location":"reference/%2Bndr/%2Btest/%2Bformat/%2Bspikegadgets/test.m/#ndrtestformatspikegadgetstest","text":"ndr.test.format.spikegadgets.test - test reading from SpikeGadgets format","title":"ndr.test.format.spikegadgets.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/automatedTest.m/","text":"ndr.test.reader.ced_smr.automatedTest \u00b6 ndr.test.reader.ced_smr.automatedTest is a function. tests = ndr.test.reader.ced_smr.automatedTest","title":"ndr.test.reader.ced_smr.automatedTest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/automatedTest.m/#ndrtestreaderced_smrautomatedtest","text":"ndr.test.reader.ced_smr.automatedTest is a function. tests = ndr.test.reader.ced_smr.automatedTest","title":"ndr.test.reader.ced_smr.automatedTest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/readertest.m/","text":"ndr.test.reader.ced_smr.readertest \u00b6 READERTEST - test the functionality of the CED ndr.reader.read function","title":"ndr.test.reader.ced_smr.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/readertest.m/#ndrtestreaderced_smrreadertest","text":"READERTEST - test the functionality of the CED ndr.reader.read function","title":"ndr.test.reader.ced_smr.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/test.m/","text":"ndr.test.reader.ced_smr.test \u00b6 ndr.test.reader.ced_smr.test- test reading using NDR reader with CED SOMSMR format","title":"ndr.test.reader.ced_smr.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bced_smr/test.m/#ndrtestreaderced_smrtest","text":"ndr.test.reader.ced_smr.test- test reading using NDR reader with CED SOMSMR format","title":"ndr.test.reader.ced_smr.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bintan_rhd/readertest.m/","text":"ndr.test.reader.intan_rhd.readertest \u00b6 READERTEST - Test the functionality of the Intan ndr.reader.read function Setup as before","title":"ndr.test.reader.intan_rhd.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bintan_rhd/readertest.m/#ndrtestreaderintan_rhdreadertest","text":"READERTEST - Test the functionality of the Intan ndr.reader.read function Setup as before","title":"ndr.test.reader.intan_rhd.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bintan_rhd/test.m/","text":"ndr.test.reader.intan_rhd.test \u00b6 ndr.test.reader.intan_rhd.test - Test reading using Neuroscience Data Reader with Intan Technologies .RHD file format See also: ndr.reader.intan_rhd","title":"ndr.test.reader.intan_rhd.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bintan_rhd/test.m/#ndrtestreaderintan_rhdtest","text":"ndr.test.reader.intan_rhd.test - Test reading using Neuroscience Data Reader with Intan Technologies .RHD file format See also: ndr.reader.intan_rhd","title":"ndr.test.reader.intan_rhd.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bneo/automatedTest.m/","text":"ndr.test.reader.neo.automatedTest \u00b6 ndr.test.reader.neo.automatedTest is a function. tests = ndr.test.reader.neo.automatedTest","title":"ndr.test.reader.neo.automatedTest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bneo/automatedTest.m/#ndrtestreaderneoautomatedtest","text":"ndr.test.reader.neo.automatedTest is a function. tests = ndr.test.reader.neo.automatedTest","title":"ndr.test.reader.neo.automatedTest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bspikegadgets_rec/readertest.m/","text":"ndr.test.reader.spikegadgets_rec.readertest \u00b6 ndr.test.reader.spikegadgets_rec.readertest - test reading using NDR reader","title":"ndr.test.reader.spikegadgets_rec.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bspikegadgets_rec/readertest.m/#ndrtestreaderspikegadgets_recreadertest","text":"ndr.test.reader.spikegadgets_rec.readertest - test reading using NDR reader","title":"ndr.test.reader.spikegadgets_rec.readertest"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bspikegadgets_rec/test.m/","text":"ndr.test.reader.spikegadgets_rec.test \u00b6 ndr.test.reader.spikegadgets_rec.test- test reading using NDR reader with spikegadgets_rec format","title":"ndr.test.reader.spikegadgets_rec.test"},{"location":"reference/%2Bndr/%2Btest/%2Breader/%2Bspikegadgets_rec/test.m/#ndrtestreaderspikegadgets_rectest","text":"ndr.test.reader.spikegadgets_rec.test- test reading using NDR reader with spikegadgets_rec format","title":"ndr.test.reader.spikegadgets_rec.test"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/","text":"CLASS ndr.time.clocktype \u00b6 CLOCKTYPE - a class for specifying a clock type in the NDR framework Superclasses \u00b6 none Properties \u00b6 Property Description type the ndr_clock type; in this class, acceptable values are 'UTC', 'exp_global_time', and 'no_time' Methods \u00b6 Method Description clocktype Creates a new ndr.time.clocktype object eq are two ndr.time.clocktype objects equal? ndr_clocktype2char produce the NDR_CLOCKTOP's type as a string ne are two ndr.time.clocktype objects not equal? needsepoch does this clocktype need an epoch for full description? setclocktype Set the type of an ndr.time.clocktype Methods help \u00b6 clocktype - Creates a new ndr.time.clocktype object OBJ = ndr . time . clocktype ( TYPE ) Creates a new ndr . time . clocktype object . TYPE can be any of the following strings ( with description ) : TYPE string | Description ------------------------------------------------------------------------------ ' utc ' | Universal coordinated time ( within 0 . 1 ms ) ' approx_utc ' | Universal coordinated time ( within 5 seconds ) ' exp_global_time ' | Experiment global time ( within 0 . 1 ms ) ' approx_exp_global_time ' | Experiment global time ( within 5 s ) ' dev_global_time ' | A device keeps its own global time ( within 0 . 1 ms ) | ( that is , it knows its own clock across recording epochs ) ' approx_dev_global_time ' | A device keeps its own global time ( within 5 s ) | ( that is , it knows its own clock across recording epochs ) ' dev_local_time ' | A device keeps its own local time only within epochs ' no_time ' | No timing information ' inherited ' | The timing information is inherited from another device . Documentation for ndr . time . clocktype / clocktype doc ndr . time . clocktype eq - are two ndr.time.clocktype objects equal? B = EQ ( NDS_CLOCK_OBJ_A , NDR_CLOCKTYPE_OBJ_B ) Compares two NDR_CLOCKTYPE_objects and returns 1 if they refer to the same clock type . ndr_clocktype2char - produce the NDR_CLOCKTOP's type as a string STR = NDR_CLOCKTYPE2CHAR ( NDR_CLOCKTYPE_OBJ ) Return a string STR equal to the ndr . time . clocktype object ' s type parameter. ne - are two ndr.time.clocktype objects not equal? B = EQ ( NDS_CLOCK_OBJ_A , NDR_CLOCKTYPE_OBJ_B ) Compares two NDR_CLOCKTYPE_objects and returns 0 if they refer to the same clock type . needsepoch - does this clocktype need an epoch for full description? B = NEEDSEPOCH ( NDR_CLOCKTYPE_OBJ ) Does this ndr . time . clocktype object need an epoch in order to specify time ? Returns 1 for ' dev_local_time ' , 0 otherwise . setclocktype - Set the type of an ndr.time.clocktype NDR_CLOCKTYPE_OBJ = SETCLOCKTYPE ( NDR_CLOCKTYPE_OBJ , TYPE ) Sets the TYPE property of an ndr . time . clocktype object NDR_CLOCKTYPE_OBJ . Valid values for the TYPE string are as follows : TYPE string | Description ------------------------------------------------------------------------------ ' utc ' | Universal coordinated time ( within 0 . 1 ms ) ' approx_utc ' | Universal coordinated time ( within 5 seconds ) ' exp_global_time ' | Experiment global time ( within 0 . 1 ms ) ' approx_exp_global_time ' | Experiment global time ( within 5 s ) ' dev_global_time ' | A device keeps its own global time ( within 0 . 1 ms ) | ( that is , it knows its own clock across recording epochs ) ' approx_dev_global_time ' | A device keeps its own global time ( within 5 s ) | ( that is , it knows its own clock across recording epochs ) ' dev_local_time ' | A device keeps its own local time only within epochs ' no_time ' | No timing information ' inherited ' | The timing information is inherited from another device .","title":"ndr.time.clocktype"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/#class-ndrtimeclocktype","text":"CLOCKTYPE - a class for specifying a clock type in the NDR framework","title":"CLASS ndr.time.clocktype"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/#properties","text":"Property Description type the ndr_clock type; in this class, acceptable values are 'UTC', 'exp_global_time', and 'no_time'","title":"Properties"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/#methods","text":"Method Description clocktype Creates a new ndr.time.clocktype object eq are two ndr.time.clocktype objects equal? ndr_clocktype2char produce the NDR_CLOCKTOP's type as a string ne are two ndr.time.clocktype objects not equal? needsepoch does this clocktype need an epoch for full description? setclocktype Set the type of an ndr.time.clocktype","title":"Methods"},{"location":"reference/%2Bndr/%2Btime/clocktype.m/#methods-help","text":"clocktype - Creates a new ndr.time.clocktype object OBJ = ndr . time . clocktype ( TYPE ) Creates a new ndr . time . clocktype object . TYPE can be any of the following strings ( with description ) : TYPE string | Description ------------------------------------------------------------------------------ ' utc ' | Universal coordinated time ( within 0 . 1 ms ) ' approx_utc ' | Universal coordinated time ( within 5 seconds ) ' exp_global_time ' | Experiment global time ( within 0 . 1 ms ) ' approx_exp_global_time ' | Experiment global time ( within 5 s ) ' dev_global_time ' | A device keeps its own global time ( within 0 . 1 ms ) | ( that is , it knows its own clock across recording epochs ) ' approx_dev_global_time ' | A device keeps its own global time ( within 5 s ) | ( that is , it knows its own clock across recording epochs ) ' dev_local_time ' | A device keeps its own local time only within epochs ' no_time ' | No timing information ' inherited ' | The timing information is inherited from another device . Documentation for ndr . time . clocktype / clocktype doc ndr . time . clocktype eq - are two ndr.time.clocktype objects equal? B = EQ ( NDS_CLOCK_OBJ_A , NDR_CLOCKTYPE_OBJ_B ) Compares two NDR_CLOCKTYPE_objects and returns 1 if they refer to the same clock type . ndr_clocktype2char - produce the NDR_CLOCKTOP's type as a string STR = NDR_CLOCKTYPE2CHAR ( NDR_CLOCKTYPE_OBJ ) Return a string STR equal to the ndr . time . clocktype object ' s type parameter. ne - are two ndr.time.clocktype objects not equal? B = EQ ( NDS_CLOCK_OBJ_A , NDR_CLOCKTYPE_OBJ_B ) Compares two NDR_CLOCKTYPE_objects and returns 0 if they refer to the same clock type . needsepoch - does this clocktype need an epoch for full description? B = NEEDSEPOCH ( NDR_CLOCKTYPE_OBJ ) Does this ndr . time . clocktype object need an epoch in order to specify time ? Returns 1 for ' dev_local_time ' , 0 otherwise . setclocktype - Set the type of an ndr.time.clocktype NDR_CLOCKTYPE_OBJ = SETCLOCKTYPE ( NDR_CLOCKTYPE_OBJ , TYPE ) Sets the TYPE property of an ndr . time . clocktype object NDR_CLOCKTYPE_OBJ . Valid values for the TYPE string are as follows : TYPE string | Description ------------------------------------------------------------------------------ ' utc ' | Universal coordinated time ( within 0 . 1 ms ) ' approx_utc ' | Universal coordinated time ( within 5 seconds ) ' exp_global_time ' | Experiment global time ( within 0 . 1 ms ) ' approx_exp_global_time ' | Experiment global time ( within 5 s ) ' dev_global_time ' | A device keeps its own global time ( within 0 . 1 ms ) | ( that is , it knows its own clock across recording epochs ) ' approx_dev_global_time ' | A device keeps its own global time ( within 5 s ) | ( that is , it knows its own clock across recording epochs ) ' dev_local_time ' | A device keeps its own local time only within epochs ' no_time ' | No timing information ' inherited ' | The timing information is inherited from another device .","title":"Methods help"},{"location":"reference/%2Bndr/%2Btime/timereference.m/","text":"CLASS ndr.time.timereference \u00b6 NDR . TIME . TIMEREFERENCE - a class for specifying time relative to an NDR_CLOCK Superclasses \u00b6 none Properties \u00b6 Property Description referent the ndr.system, ndr.probe.*,... that is referred to (must be a subclass of ndr.epoch.epochset) clocktype the ndr.time.clocktype: can be 'utc', 'exp_global_time', 'dev_global_time', or 'dev_local_time' epoch the epoch that may be referred to (required if the time type is 'dev_local_time') time the time of the referent that is referred to session_ID the ID of the session that contains the time Methods \u00b6 Method Description ndr_timereference_struct return a structure that describes an ndr.time.timereference object that lacks Matlab objects timereference creates a new time reference object Methods help \u00b6 ndr_timereference_struct - return a structure that describes an ndr.time.timereference object that lacks Matlab objects A = NDR_TIMEREFERENCE_STRUCT(NDI_TIMEREF_OBJ) Returns a structure with the following fields: Fieldname | Description -------------------------------------------------------------------------------- referent_epochsetname | The epochsetname() of the referent referent_classname | The classname of the referent clocktypestring | The value of the clocktype epoch | The epoch (either a string or a number) session_ID | The session ID of the session that contains the epoch time | The time timereference - creates a new time reference object OBJ = NDR . TIME . TIMEREFERENCE ( REFERENT , CLOCKTYPE , EPOCH , TIME ) Creates a new ndr . time . timereference object . The REFERENT , EPOCH , and TIME must specify a unique time . REFERENT is any subclass of ndi . epoch . epochset object that has a ' session ' property ( e . g ., ndr . system , ndr . element , etc ... ) . TYPE is the time type , can be ' utc ' , ' exp_global_time ' , or ' dev_global_time ' or ' dev_local_time ' If TYPE is ' dev_local_time ' , then the EPOCH identifier is necessary . Otherwise , it can be empty . If EPOCH is specified , then TIME is taken to be relative to the EPOCH number of the device associated with CLOCK , even if the device keeps universal or time . An alternative creator is available : OBJ = ndr . time . timereference ( NDR_SESSION_OBJ , NDR_TIMEREF_STRUCT ) where NDR_SESSION_OBJ is an ndr . session and NDR_TIMEREF_STRUCT is a structure returned by ndr . time . timereference / NDR_TIMEREFERENCE_STRUCT . The NDR_SESSION_OBJ fields will be searched to find the live REFERENT to create OBJ . Documentation for ndr . time . timereference / timereference doc ndr . time . timereference","title":"ndr.time.timereference"},{"location":"reference/%2Bndr/%2Btime/timereference.m/#class-ndrtimetimereference","text":"NDR . TIME . TIMEREFERENCE - a class for specifying time relative to an NDR_CLOCK","title":"CLASS ndr.time.timereference"},{"location":"reference/%2Bndr/%2Btime/timereference.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/%2Bndr/%2Btime/timereference.m/#properties","text":"Property Description referent the ndr.system, ndr.probe.*,... that is referred to (must be a subclass of ndr.epoch.epochset) clocktype the ndr.time.clocktype: can be 'utc', 'exp_global_time', 'dev_global_time', or 'dev_local_time' epoch the epoch that may be referred to (required if the time type is 'dev_local_time') time the time of the referent that is referred to session_ID the ID of the session that contains the time","title":"Properties"},{"location":"reference/%2Bndr/%2Btime/timereference.m/#methods","text":"Method Description ndr_timereference_struct return a structure that describes an ndr.time.timereference object that lacks Matlab objects timereference creates a new time reference object","title":"Methods"},{"location":"reference/%2Bndr/%2Btime/timereference.m/#methods-help","text":"ndr_timereference_struct - return a structure that describes an ndr.time.timereference object that lacks Matlab objects A = NDR_TIMEREFERENCE_STRUCT(NDI_TIMEREF_OBJ) Returns a structure with the following fields: Fieldname | Description -------------------------------------------------------------------------------- referent_epochsetname | The epochsetname() of the referent referent_classname | The classname of the referent clocktypestring | The value of the clocktype epoch | The epoch (either a string or a number) session_ID | The session ID of the session that contains the epoch time | The time timereference - creates a new time reference object OBJ = NDR . TIME . TIMEREFERENCE ( REFERENT , CLOCKTYPE , EPOCH , TIME ) Creates a new ndr . time . timereference object . The REFERENT , EPOCH , and TIME must specify a unique time . REFERENT is any subclass of ndi . epoch . epochset object that has a ' session ' property ( e . g ., ndr . system , ndr . element , etc ... ) . TYPE is the time type , can be ' utc ' , ' exp_global_time ' , or ' dev_global_time ' or ' dev_local_time ' If TYPE is ' dev_local_time ' , then the EPOCH identifier is necessary . Otherwise , it can be empty . If EPOCH is specified , then TIME is taken to be relative to the EPOCH number of the device associated with CLOCK , even if the device keeps universal or time . An alternative creator is available : OBJ = ndr . time . timereference ( NDR_SESSION_OBJ , NDR_TIMEREF_STRUCT ) where NDR_SESSION_OBJ is an ndr . session and NDR_TIMEREF_STRUCT is a structure returned by ndr . time . timereference / NDR_TIMEREFERENCE_STRUCT . The NDR_SESSION_OBJ fields will be searched to find the live REFERENT to create OBJ . Documentation for ndr . time . timereference / timereference doc ndr . time . timereference","title":"Methods help"},{"location":"reference/lib/NPMK/NPMKverChecker.m/","text":"NPMKverChecker \u00b6 NPMKverChecker Checks to see if there is a newer version of NPMK is available for download . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use NPMKverChecker %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : September 13 , 2017 - Initial release . 1.0 . 1.0 : September 13 , 2017 - Fixed a crash in case there is no Internet connection . 1.0 . 2.0 : January 10 , 2018 - Added a clickable URL to the prompt . 1.1 . 0.0 : January 27 , 2020 - Only checks for a new version once a week instead of every time .","title":"NPMKverChecker"},{"location":"reference/lib/NPMK/NPMKverChecker.m/#npmkverchecker","text":"NPMKverChecker Checks to see if there is a newer version of NPMK is available for download . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use NPMKverChecker %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : September 13 , 2017 - Initial release . 1.0 . 1.0 : September 13 , 2017 - Fixed a crash in case there is no Internet connection . 1.0 . 2.0 : January 10 , 2018 - Added a clickable URL to the prompt . 1.1 . 0.0 : January 27 , 2020 - Only checks for a new version once a week instead of every time .","title":"NPMKverChecker"},{"location":"reference/lib/NPMK/installNPMK.m/","text":"installNPMK \u00b6 This function installs Blackrock Microsystems Neural Processing MATLAB Kit in MATLAB . Run \"help FUNCTIONAME\" to get more information about each function . Kian Torab kian @blackrockmicro . com Blackrock Microsystems Version 1.0.0.0","title":"installNPMK"},{"location":"reference/lib/NPMK/installNPMK.m/#installnpmk","text":"This function installs Blackrock Microsystems Neural Processing MATLAB Kit in MATLAB . Run \"help FUNCTIONAME\" to get more information about each function . Kian Torab kian @blackrockmicro . com Blackrock Microsystems Version 1.0.0.0","title":"installNPMK"},{"location":"reference/lib/NPMK/openNEV.m/","text":"openNEV \u00b6 openNEV Opens an . nev file for reading , returns all file information in a NEV structure . Works with File Spec 2.1 & 2.2 & 2.3 & 3.0 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = openNEV ( fname , 'noread' , 'report' , 'noparse' , 'nowarning' , 'nosave' , 'nomat' , 'uV' , 'overwrite' , 'direct' ) . NOTE : All input arguments are optional . Input arguments may be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file using an open file user interface . DEFAULT : Will open Open File UI . 'noread' : Will not read the spike waveforms if user passes this argument . DEFAULT : will read spike waveform . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'parse' : The code will not parse the experimental parameters in digital I / O . See below for guidelines on how to format your parameters . DEFAULT : will not parse the parameters . 'nowarning' : The code will not give a warning if there is an error in parsing . DEFAULT : will give warning message . 'nosave' : The code will not save a copy of the NEV structure as a MAT file . By default the code will save a copy in the same folder as the NEV file for easy future access . DEFAULT : will save the MAT file . 'nomat' : Will not look for a MAT file . This option will force openNEV to open a NEV file instead of any available MAT files . DEFAULT : will load the MAT file if available . 'uV' : Will read the spike waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the waveforms type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read waveform information in raw . '8bits' : Indicates that 8 bits on the digital IO port was used instead of 16 bits . DEFAULT : will assumes that 16 bits of digital IO were used . 't:' : Indicats the time window of the NEV file to be read . For example , if t : is set to 2 ( i . e . 't:0.6' ) then only the first 2 seconds of the file is to be read . If set to 2 - 50 ( i . e . 't:2:50) then the time between 2 seconds and 50 seconds will be read . DEFAULT : the entire file will be read if 't:xx:xx' is not passed to the function . 'overwrite' : If MATLAB loads a NEV file using 'nomat' and a MAT file already exists , by default it will prompt the user to allow for overwriting the old MAT . Passing the 'overwrite' flag will automatically overwrite the newly opened NEV file ont the old MAT file . DEFAULT : will ask the user whether to overwrite the old MAT . 'direct' : Use this if you are using a CerePlex Direct system without the typical strobe mode . This will treat the 16 th bit of the digital input as a strobe signal and report the remaining 15 bits as the digital input value . OUTPUT : Contains the NEV structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( 'report' , 'read' ); In the example above , the file dialogue will prompt for a file . A report of the file contents will be shown . The digital data will not be parsed . The data needs to be in the proper format ( refer below ) . The spike waveforms are in raw units and not in uV . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DIGITAL PARAMETERS / MARKERS FORMAT : In order for this function to parse your experimental parameters they need to be in the following format : * ParamLabel : Parameter1 = value1 ; Parameter2 = value2 ; Parameter3 = value3 ; # TWO EXAMPLES : * ExpParameter : Intensity = 1.02 ; Duration = 400 ; Trials = 1 ; PageSegment = 14 ; # * Stimulation : StimCount = 5 ; Duration = 10 ; # In the first example , the parameter is of type \"ExpParameter\" . The parameters are , \"Intensity, Duration, Trials, and PageSement.\" The values of those parameters are , \"1.02, 400, 1, and 14,\" respectively . The second example is of type \"Stimulation\" . The name of the parameters are \"StimCount\" and \"Duration\" and the values are \"5\" and \"10\" respectively . ----------------------------------------------------------------------- It can also read single value markers that follow the following format . * MarkerName = Value ; # EXAMPLES : * WaitSeconds = 10 ; # OR *JuiceStatus=ON;# The above line is a \"Marker\" . The marker value is 10 in the first and it 's ON in the second example. ----------------------------------------------------------------------- Moreover , the marker could be a single value : * MarkerValue # EXAMPLES : * JuiceOff # OR *HandsOnSwitches# ----------------------------------------------------------------------- The label , parameter name , and values are flexible and can be anything . The only required formatting is that the user needs to have a label followed by a colon ':' , followed by a field name 'MarkerVal' , followed by an equal sign '=' , followed by the parameter value '10' , and end with a semi - colon ';' . NOTE : Every line requires a pound - sign '#' at the very end . Every line requires a star sign '*' at the very beginning . If you use LabVIEW SendtoCerebus . vi by Kian Torab then there is no need for a '*' in the beginning . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 4.4 . 0.0 : - Major performance boost in reading NEV files when tracking data is stored in the file . 4.4 . 0.2 : - Updated documentation . 4.4 . 0.3 : 5 January 2014 - Fixed the way DayOfWeek is read in MetaTags . - Fixed 'noread' argument , so when passed , openNEV will not read the spike waveforms . 4.4 . 1.0 : 25 January 2014 - Fixed a bug that resulted from passing 'read' to openNEV . 4.4 . 2.0 : 28 February 2014 - Fixed bug related to loading data with t : XX : XX argument . 4.4 . 3.0 : 12 June 2014 - Fixed a typo in the help . 4.4 . 3.1 : 13 June 2014 - Updated the version numbers in the help and in the function itself . 5.0 . 0.0 : 02 December 2014 - Fixed a bug where Application name wasn 't being read properly. - Warnings now don 't show up in more places when \"nowarning\" is used. - Added field FileExt to MetaTags . - Added 512 synchronized reading capability . - Fixed the date in NSx . MetaTags . DateTime . 5.1 . 0.0 : 28 March 2015 - Added the ability to read from networked drives in Windows . - Fixed the DateTime variable in MetaTags . - Fixed the date in NSx . MetaTags . DateTime ( again ) . - Fixed a bug related to > 512 - ch data loading . 5.1 . 1.0 : 1 April 2015 - Fixed a bug with NeuroMotive when spike window is changed from the original length . 5.1 . 2.0 : June 30 2015 - Fixed a bug regarding the number of packages when 'no read' is used . 5.1 . 3.0 : July 10 2015 - Fixed a bug with NeuroMotive data reading when both objects and markers were being recorded . 5.2 . 0.0 : June 11 2016 - Added support for CerePlex Direct strobe mode on digital input . - Fixed a bug with reading NeuroMotive data that resulted in a crash . 5.3 . 0.0 : June 13 2016 - Fixed a bug with reading NeuroMotive data that resulted in a crash . - Improved and more detailed parsing of NeuroMotive events . - Added parsing of comment start time and comment committ time ( time that a comment is entered . 5.3 . 1.0 : September 1 , 2017 - Fixed a bug with file path and whent this was passed to the function . 5.4 . 0.0 : September 13 , 2017 - Checks to see if there 's a newer version of NPMK is available. - Properly reads the comment colors . 5.4 . 0.1 : January 10 , 2018 - Fixed a NeuroMotive bug when AllMarkers was being recorded . 5.4 . 1.0 : April 25 , 2018 - Now all comments open in order . - Fixed a bug with path of file if both NEV and MAT were moved to a new location . 6.0 . 0.0 : January 27 , 2020 - Added support for 64 - bit timestamps in NEV and NSx . - Removed dependency on MATLAB R2016b by removing function 'contains' . 6.1 . 0.0 : April 16 , 2020 - Some bug fixes . ( David Kluger ) 6.2 . 0.0 : April 29 , 2020 - Added ability to read all types of recording event types . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNEV"},{"location":"reference/lib/NPMK/openNEV.m/#opennev","text":"openNEV Opens an . nev file for reading , returns all file information in a NEV structure . Works with File Spec 2.1 & 2.2 & 2.3 & 3.0 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = openNEV ( fname , 'noread' , 'report' , 'noparse' , 'nowarning' , 'nosave' , 'nomat' , 'uV' , 'overwrite' , 'direct' ) . NOTE : All input arguments are optional . Input arguments may be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file using an open file user interface . DEFAULT : Will open Open File UI . 'noread' : Will not read the spike waveforms if user passes this argument . DEFAULT : will read spike waveform . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'parse' : The code will not parse the experimental parameters in digital I / O . See below for guidelines on how to format your parameters . DEFAULT : will not parse the parameters . 'nowarning' : The code will not give a warning if there is an error in parsing . DEFAULT : will give warning message . 'nosave' : The code will not save a copy of the NEV structure as a MAT file . By default the code will save a copy in the same folder as the NEV file for easy future access . DEFAULT : will save the MAT file . 'nomat' : Will not look for a MAT file . This option will force openNEV to open a NEV file instead of any available MAT files . DEFAULT : will load the MAT file if available . 'uV' : Will read the spike waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the waveforms type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read waveform information in raw . '8bits' : Indicates that 8 bits on the digital IO port was used instead of 16 bits . DEFAULT : will assumes that 16 bits of digital IO were used . 't:' : Indicats the time window of the NEV file to be read . For example , if t : is set to 2 ( i . e . 't:0.6' ) then only the first 2 seconds of the file is to be read . If set to 2 - 50 ( i . e . 't:2:50) then the time between 2 seconds and 50 seconds will be read . DEFAULT : the entire file will be read if 't:xx:xx' is not passed to the function . 'overwrite' : If MATLAB loads a NEV file using 'nomat' and a MAT file already exists , by default it will prompt the user to allow for overwriting the old MAT . Passing the 'overwrite' flag will automatically overwrite the newly opened NEV file ont the old MAT file . DEFAULT : will ask the user whether to overwrite the old MAT . 'direct' : Use this if you are using a CerePlex Direct system without the typical strobe mode . This will treat the 16 th bit of the digital input as a strobe signal and report the remaining 15 bits as the digital input value . OUTPUT : Contains the NEV structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( 'report' , 'read' ); In the example above , the file dialogue will prompt for a file . A report of the file contents will be shown . The digital data will not be parsed . The data needs to be in the proper format ( refer below ) . The spike waveforms are in raw units and not in uV . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DIGITAL PARAMETERS / MARKERS FORMAT : In order for this function to parse your experimental parameters they need to be in the following format : * ParamLabel : Parameter1 = value1 ; Parameter2 = value2 ; Parameter3 = value3 ; # TWO EXAMPLES : * ExpParameter : Intensity = 1.02 ; Duration = 400 ; Trials = 1 ; PageSegment = 14 ; # * Stimulation : StimCount = 5 ; Duration = 10 ; # In the first example , the parameter is of type \"ExpParameter\" . The parameters are , \"Intensity, Duration, Trials, and PageSement.\" The values of those parameters are , \"1.02, 400, 1, and 14,\" respectively . The second example is of type \"Stimulation\" . The name of the parameters are \"StimCount\" and \"Duration\" and the values are \"5\" and \"10\" respectively . ----------------------------------------------------------------------- It can also read single value markers that follow the following format . * MarkerName = Value ; # EXAMPLES : * WaitSeconds = 10 ; # OR *JuiceStatus=ON;# The above line is a \"Marker\" . The marker value is 10 in the first and it 's ON in the second example. ----------------------------------------------------------------------- Moreover , the marker could be a single value : * MarkerValue # EXAMPLES : * JuiceOff # OR *HandsOnSwitches# ----------------------------------------------------------------------- The label , parameter name , and values are flexible and can be anything . The only required formatting is that the user needs to have a label followed by a colon ':' , followed by a field name 'MarkerVal' , followed by an equal sign '=' , followed by the parameter value '10' , and end with a semi - colon ';' . NOTE : Every line requires a pound - sign '#' at the very end . Every line requires a star sign '*' at the very beginning . If you use LabVIEW SendtoCerebus . vi by Kian Torab then there is no need for a '*' in the beginning . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 4.4 . 0.0 : - Major performance boost in reading NEV files when tracking data is stored in the file . 4.4 . 0.2 : - Updated documentation . 4.4 . 0.3 : 5 January 2014 - Fixed the way DayOfWeek is read in MetaTags . - Fixed 'noread' argument , so when passed , openNEV will not read the spike waveforms . 4.4 . 1.0 : 25 January 2014 - Fixed a bug that resulted from passing 'read' to openNEV . 4.4 . 2.0 : 28 February 2014 - Fixed bug related to loading data with t : XX : XX argument . 4.4 . 3.0 : 12 June 2014 - Fixed a typo in the help . 4.4 . 3.1 : 13 June 2014 - Updated the version numbers in the help and in the function itself . 5.0 . 0.0 : 02 December 2014 - Fixed a bug where Application name wasn 't being read properly. - Warnings now don 't show up in more places when \"nowarning\" is used. - Added field FileExt to MetaTags . - Added 512 synchronized reading capability . - Fixed the date in NSx . MetaTags . DateTime . 5.1 . 0.0 : 28 March 2015 - Added the ability to read from networked drives in Windows . - Fixed the DateTime variable in MetaTags . - Fixed the date in NSx . MetaTags . DateTime ( again ) . - Fixed a bug related to > 512 - ch data loading . 5.1 . 1.0 : 1 April 2015 - Fixed a bug with NeuroMotive when spike window is changed from the original length . 5.1 . 2.0 : June 30 2015 - Fixed a bug regarding the number of packages when 'no read' is used . 5.1 . 3.0 : July 10 2015 - Fixed a bug with NeuroMotive data reading when both objects and markers were being recorded . 5.2 . 0.0 : June 11 2016 - Added support for CerePlex Direct strobe mode on digital input . - Fixed a bug with reading NeuroMotive data that resulted in a crash . 5.3 . 0.0 : June 13 2016 - Fixed a bug with reading NeuroMotive data that resulted in a crash . - Improved and more detailed parsing of NeuroMotive events . - Added parsing of comment start time and comment committ time ( time that a comment is entered . 5.3 . 1.0 : September 1 , 2017 - Fixed a bug with file path and whent this was passed to the function . 5.4 . 0.0 : September 13 , 2017 - Checks to see if there 's a newer version of NPMK is available. - Properly reads the comment colors . 5.4 . 0.1 : January 10 , 2018 - Fixed a NeuroMotive bug when AllMarkers was being recorded . 5.4 . 1.0 : April 25 , 2018 - Now all comments open in order . - Fixed a bug with path of file if both NEV and MAT were moved to a new location . 6.0 . 0.0 : January 27 , 2020 - Added support for 64 - bit timestamps in NEV and NSx . - Removed dependency on MATLAB R2016b by removing function 'contains' . 6.1 . 0.0 : April 16 , 2020 - Some bug fixes . ( David Kluger ) 6.2 . 0.0 : April 29 , 2020 - Added ability to read all types of recording event types . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNEV"},{"location":"reference/lib/NPMK/openNSx.m/","text":"openNSx \u00b6 openNSx Opens and reads an NSx file then returns all file information in a NSx structure . Works with File Spec 2.1 , 2.2 , 2.3 , and 3.0 . Use OUTPUT = openNSx ( fname , 'read' , 'report' , 'e:xx:xx' , 'c:xx:xx' , 't:xx:xx' , 'mode' , 'precision' , 'skipfactor' , 'nozeropad' ) . All input arguments are optional . Input arguments can be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . 'read' : Will read the data in addition to the header information if user passes this argument . DEFAULT : will read the entire file . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'e:XX:YY' : User can specify which electrodes need to be read . The number of electrodes can be greater than or equal to 1 and less than or equal to 256. The electrodes can be selected either by specifying a range ( e . g . 20 : 45 ) or by indicating individual electrodes ( e . g . 3 , 6 , 7 , 90 ) or both . Note that , when individual channels are to be read , all channels in between will also be read . The prorgam will then remove the unwanted channels . This may result in a large memory footprint . If memory issues arrise please consider placing openNSx in a for loop and reading individual channels . This field needs to be preceded by the prefix 'e:' . See example for more details . If this option is selected the user will be promped for a CMP mapfile ( see : KTUEAMapFile ) provided by Blackrock Microsystems . This feature required KTUEAMapFile to be present in path . DEFAULT : will read all existing electrodes . 'c:XX:YY' : User can specify which channels need to be read . The number of channels can be greater than or equal to 1 and less than or equal to 272. The channels can be selected either by specifying a range ( e . g . 20 : 45 ) or by indicating individual channels ( e . g . 3 , 6 , 7 , 90 ) or both . Note that , when individual channels are to be read , all channels in between will also be read . The prorgam will then remove the unwanted channels . This may result in a large memory footprint . If memory issues arrise please consider placing openNSx in a for loop and reading individual channels . This field needs to be preceded by the prefix 'c:' . See example for more details . DEFAULT : will read all existing analog channels . 't:XX:YY' : User can specify the beginning and end of the data segment to be read . If the start time is greater than the length of data the program will exit with an errorNS message . If the end time is greater than the length of data the end packet will be selected for end of data . The user can specify the start and end values by comma ( e . g . [ 20 , 50 ]) or by a colon ( e . g . [ 20 : 50 ]) . To use this argument the user must specify the [ electrodes ] or the interval will be used for [ electrodes ] automatically . This field needs to be preceded by the prefix 't:' . Note that if 'mode' is 'sample' the start duration cannot be less than 1. The duration is inclusive . See example for more details . DEFAULT : will read the entire file . 'mode' : The user can specify the mode of duration in [ duration ], such as 'sec' , 'min' , 'hour' , or 'sample' . If 'sec' is specified the numbers in [ duration ] will correspond to the number of seconds . The same is true for 'min' , 'hour' and 'sample' . DEFAULT : reads 'sample' . 'uV' : Will read the recording waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the data type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read recording information in raw . 'precision' : This will specify the precision for NSx file . If set to 'double' the NSx data will be read as 'double' and if set to 'short' , the NSx data will be read as 'int16' data type . While reading the file as 'short' may have a much smaller memory footprint and a faster read time , some post data analysis such as multiplying the signal by a factor that will make the data larger than ( - 32 , 768 to 32 , 767 -- refer to MATLAB documentation for more information ) may result in unexpected behavior . Always use caution when using short . If you are not sure of what to use then do not specify this option . DEFAULT : will read data in 'int16' . 'skipfactor' : This option will allow the user to read a decimated version of the data . The skipfactor will determine how many samples to skip . For example , if skipfactor is 2 then every other sample is read . If skipfactor is 5 then every fifth sample is read . This is useful to briefly looking at the data in a large datafile when reading the entire dataset would overflow the memory . DEFAULT : is set to 1 , so every sample will be read . 'ver' : If this argument is passed to the function it will return the version number of the function without reading any data files . 'nozeropad' : It will not zeropad the data to compensate foro the non - zero start time . DEFAULT : zeropads the loaded data . OUTPUT : Contains the NSx structure . Example 1 : openNSx ( 'report' , 'read' , 'c:\\data\\sample.ns5' , 'e:15:30' , 't:3:10' , 'min' , 'p:short' , 's:5' ); or equivalently openNSx ( 'report' , 'read' , 'c:\\data\\sample.ns5' , 'electrodes' , 15 : 30 , 'duration' , 3 : 10 , 'min' , 'precision' , 'short' , 'skipfactor' , 5 ); In the example above , the file c : \\ data \\ sample . ns5 will be used . A report of the file contents will be shown . The data will be read from electrodes 15 through 50 in the 3 - 10 minute time interval . A decimated version of the datafile will be read , where only every 5 th sample is read . If any of the arguments above are omitted the default values will be used . Example 2 : openNSx ( 'read' , 'c:15:30' ); In the example above , the file user will be prompted for the file . The file will be read using 'int16' precision as default . All time points of Only channels 15 through 30 will be read . If any of the arguments above are omitted the default values will be used . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSx"},{"location":"reference/lib/NPMK/openNSx.m/#opennsx","text":"openNSx Opens and reads an NSx file then returns all file information in a NSx structure . Works with File Spec 2.1 , 2.2 , 2.3 , and 3.0 . Use OUTPUT = openNSx ( fname , 'read' , 'report' , 'e:xx:xx' , 'c:xx:xx' , 't:xx:xx' , 'mode' , 'precision' , 'skipfactor' , 'nozeropad' ) . All input arguments are optional . Input arguments can be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . 'read' : Will read the data in addition to the header information if user passes this argument . DEFAULT : will read the entire file . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'e:XX:YY' : User can specify which electrodes need to be read . The number of electrodes can be greater than or equal to 1 and less than or equal to 256. The electrodes can be selected either by specifying a range ( e . g . 20 : 45 ) or by indicating individual electrodes ( e . g . 3 , 6 , 7 , 90 ) or both . Note that , when individual channels are to be read , all channels in between will also be read . The prorgam will then remove the unwanted channels . This may result in a large memory footprint . If memory issues arrise please consider placing openNSx in a for loop and reading individual channels . This field needs to be preceded by the prefix 'e:' . See example for more details . If this option is selected the user will be promped for a CMP mapfile ( see : KTUEAMapFile ) provided by Blackrock Microsystems . This feature required KTUEAMapFile to be present in path . DEFAULT : will read all existing electrodes . 'c:XX:YY' : User can specify which channels need to be read . The number of channels can be greater than or equal to 1 and less than or equal to 272. The channels can be selected either by specifying a range ( e . g . 20 : 45 ) or by indicating individual channels ( e . g . 3 , 6 , 7 , 90 ) or both . Note that , when individual channels are to be read , all channels in between will also be read . The prorgam will then remove the unwanted channels . This may result in a large memory footprint . If memory issues arrise please consider placing openNSx in a for loop and reading individual channels . This field needs to be preceded by the prefix 'c:' . See example for more details . DEFAULT : will read all existing analog channels . 't:XX:YY' : User can specify the beginning and end of the data segment to be read . If the start time is greater than the length of data the program will exit with an errorNS message . If the end time is greater than the length of data the end packet will be selected for end of data . The user can specify the start and end values by comma ( e . g . [ 20 , 50 ]) or by a colon ( e . g . [ 20 : 50 ]) . To use this argument the user must specify the [ electrodes ] or the interval will be used for [ electrodes ] automatically . This field needs to be preceded by the prefix 't:' . Note that if 'mode' is 'sample' the start duration cannot be less than 1. The duration is inclusive . See example for more details . DEFAULT : will read the entire file . 'mode' : The user can specify the mode of duration in [ duration ], such as 'sec' , 'min' , 'hour' , or 'sample' . If 'sec' is specified the numbers in [ duration ] will correspond to the number of seconds . The same is true for 'min' , 'hour' and 'sample' . DEFAULT : reads 'sample' . 'uV' : Will read the recording waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the data type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read recording information in raw . 'precision' : This will specify the precision for NSx file . If set to 'double' the NSx data will be read as 'double' and if set to 'short' , the NSx data will be read as 'int16' data type . While reading the file as 'short' may have a much smaller memory footprint and a faster read time , some post data analysis such as multiplying the signal by a factor that will make the data larger than ( - 32 , 768 to 32 , 767 -- refer to MATLAB documentation for more information ) may result in unexpected behavior . Always use caution when using short . If you are not sure of what to use then do not specify this option . DEFAULT : will read data in 'int16' . 'skipfactor' : This option will allow the user to read a decimated version of the data . The skipfactor will determine how many samples to skip . For example , if skipfactor is 2 then every other sample is read . If skipfactor is 5 then every fifth sample is read . This is useful to briefly looking at the data in a large datafile when reading the entire dataset would overflow the memory . DEFAULT : is set to 1 , so every sample will be read . 'ver' : If this argument is passed to the function it will return the version number of the function without reading any data files . 'nozeropad' : It will not zeropad the data to compensate foro the non - zero start time . DEFAULT : zeropads the loaded data . OUTPUT : Contains the NSx structure . Example 1 : openNSx ( 'report' , 'read' , 'c:\\data\\sample.ns5' , 'e:15:30' , 't:3:10' , 'min' , 'p:short' , 's:5' ); or equivalently openNSx ( 'report' , 'read' , 'c:\\data\\sample.ns5' , 'electrodes' , 15 : 30 , 'duration' , 3 : 10 , 'min' , 'precision' , 'short' , 'skipfactor' , 5 ); In the example above , the file c : \\ data \\ sample . ns5 will be used . A report of the file contents will be shown . The data will be read from electrodes 15 through 50 in the 3 - 10 minute time interval . A decimated version of the datafile will be read , where only every 5 th sample is read . If any of the arguments above are omitted the default values will be used . Example 2 : openNSx ( 'read' , 'c:15:30' ); In the example above , the file user will be prompted for the file . The file will be read using 'int16' precision as default . All time points of Only channels 15 through 30 will be read . If any of the arguments above are omitted the default values will be used . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSx"},{"location":"reference/lib/NPMK/openNSxSync.m/","text":"openNSxSync \u00b6 openNSxSync Opens a synced NSx file and removed the extra bit of data from the file. INPUT filename : The name of the file to be opened . DEFAULT : The program will prompt the user to select a file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kianblackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : June 13 , 2014 - Added the ability to open a file by passing on the file name . 1.1 . 1.0 : December 3 , 2014 - Fixed a minor bug . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSxSync"},{"location":"reference/lib/NPMK/openNSxSync.m/#opennsxsync","text":"openNSxSync Opens a synced NSx file and removed the extra bit of data from the file. INPUT filename : The name of the file to be opened . DEFAULT : The program will prompt the user to select a file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kianblackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : June 13 , 2014 - Added the ability to open a file by passing on the file name . 1.1 . 1.0 : December 3 , 2014 - Fixed a minor bug . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSxSync"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/","text":"CLASS KTFigure \u00b6 KTFigure is a class. obj = KTFigure Superclasses \u00b6 none Properties \u00b6 none Methods \u00b6 Method Description CloseFigure KTFigure/CloseFigure is a function. EnlargeFigure KTFigure/EnlargeFigure is a function. EnlargeFigureWide KTFigure/EnlargeFigureWide is a function. HideFigure KTFigure/HideFigure is a function. MakeBackgroundBlack KTFigure/MakeBackgroundBlack is a function. MakeBackgroundGray KTFigure/MakeBackgroundGray is a function. MakeBackgroundWhite KTFigure/MakeBackgroundWhite is a function. SetActive KTFigure/SetActive is a function. ShowFigure KTFigure/ShowFigure is a function. getHandle KTFigure/getHandle is a function. Methods help \u00b6 CloseFigure - KTFigure/CloseFigure is a function. CloseFigure(obj) EnlargeFigure - KTFigure/EnlargeFigure is a function. EnlargeFigure(obj) EnlargeFigureWide - KTFigure/EnlargeFigureWide is a function. EnlargeFigureWide(obj) HideFigure - KTFigure/HideFigure is a function. HideFigure(obj) MakeBackgroundBlack - KTFigure/MakeBackgroundBlack is a function. MakeBackgroundBlack(obj) MakeBackgroundGray - KTFigure/MakeBackgroundGray is a function. MakeBackgroundGray(obj) MakeBackgroundWhite - KTFigure/MakeBackgroundWhite is a function. MakeBackgroundWhite(obj) SetActive - KTFigure/SetActive is a function. SetActive(obj) ShowFigure - KTFigure/ShowFigure is a function. ShowFigure(obj) getHandle - KTFigure/getHandle is a function. handle = getHandle(obj)","title":"KTFigure"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/#class-ktfigure","text":"KTFigure is a class. obj = KTFigure","title":"CLASS KTFigure"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/#properties","text":"none","title":"Properties"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/#methods","text":"Method Description CloseFigure KTFigure/CloseFigure is a function. EnlargeFigure KTFigure/EnlargeFigure is a function. EnlargeFigureWide KTFigure/EnlargeFigureWide is a function. HideFigure KTFigure/HideFigure is a function. MakeBackgroundBlack KTFigure/MakeBackgroundBlack is a function. MakeBackgroundGray KTFigure/MakeBackgroundGray is a function. MakeBackgroundWhite KTFigure/MakeBackgroundWhite is a function. SetActive KTFigure/SetActive is a function. ShowFigure KTFigure/ShowFigure is a function. getHandle KTFigure/getHandle is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTFigure/KTFigure.m/#methods-help","text":"CloseFigure - KTFigure/CloseFigure is a function. CloseFigure(obj) EnlargeFigure - KTFigure/EnlargeFigure is a function. EnlargeFigure(obj) EnlargeFigureWide - KTFigure/EnlargeFigureWide is a function. EnlargeFigureWide(obj) HideFigure - KTFigure/HideFigure is a function. HideFigure(obj) MakeBackgroundBlack - KTFigure/MakeBackgroundBlack is a function. MakeBackgroundBlack(obj) MakeBackgroundGray - KTFigure/MakeBackgroundGray is a function. MakeBackgroundGray(obj) MakeBackgroundWhite - KTFigure/MakeBackgroundWhite is a function. MakeBackgroundWhite(obj) SetActive - KTFigure/SetActive is a function. SetActive(obj) ShowFigure - KTFigure/ShowFigure is a function. ShowFigure(obj) getHandle - KTFigure/getHandle is a function. handle = getHandle(obj)","title":"Methods help"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/","text":"CLASS KTFigureAxis \u00b6 KTFigureAxis is a class. obj = KTFigureAxis(lowerLimitX, upperLimitX, lowerLimitY, upperLimitY, axisHandle) Superclasses \u00b6 none Properties \u00b6 Property Description linSpaceX linSpaceY lowerLimitX lowerLimitY upperLimitX upperLimitY axisHandle Methods \u00b6 Method Description setXLabels KTFigureAxis/setXLabels is a function. setYLabels KTFigureAxis/setYLabels is a function. Methods help \u00b6 setXLabels - KTFigureAxis/setXLabels is a function. setXLabels(obj) setYLabels - KTFigureAxis/setYLabels is a function. setYLabels(obj)","title":"KTFigureAxis"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/#class-ktfigureaxis","text":"KTFigureAxis is a class. obj = KTFigureAxis(lowerLimitX, upperLimitX, lowerLimitY, upperLimitY, axisHandle)","title":"CLASS KTFigureAxis"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/#properties","text":"Property Description linSpaceX linSpaceY lowerLimitX lowerLimitY upperLimitX upperLimitY axisHandle","title":"Properties"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/#methods","text":"Method Description setXLabels KTFigureAxis/setXLabels is a function. setYLabels KTFigureAxis/setYLabels is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTFigureAxis/KTFigureAxis.m/#methods-help","text":"setXLabels - KTFigureAxis/setXLabels is a function. setXLabels(obj) setYLabels - KTFigureAxis/setYLabels is a function. setYLabels(obj)","title":"Methods help"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/","text":"CLASS KTNEVComments \u00b6 KTNEVComments This is a class that deals with comments saved in a NEV file . The user can read the comments , get their timestamp information and even add comments to the NEV file and then save it as a new file . addComment : Allows the user to add a new comment to the file at a given timestamp . displayComments : Displays all the comments in the NEV with their corresponding timestamps . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . getCommentText : Displays the text of comments . getCommentTimestamps : Displays the timestamp of comments , in samples . getCommentTimestampsSec : Displays the timestamp of comments , in seconds . EXAMPLE : To run , use \"myVariable = KTNEVComments;\" . Then use \"myVariable.METHODNAME\" to call the various differnet methods . Type \"myVariable.\" and then hit enter to see the available methods . myComments = KTNEVComments ; myComments . DisplayComments ; Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 1.0 Superclasses \u00b6 none Properties \u00b6 none Methods \u00b6 Method Description addComment KTNEVComments/addComment is a function. displayComments KTNEVComments/displayComments is a function. getCommentText KTNEVComments/getCommentText is a function. getCommentTimestamps KTNEVComments/getCommentTimestamps is a function. getCommentTimestampsSec KTNEVComments/getCommentTimestampsSec is a function. Methods help \u00b6 addComment - KTNEVComments/addComment is a function. addComment(obj) displayComments - KTNEVComments/displayComments is a function. displayComments(obj) getCommentText - KTNEVComments/getCommentText is a function. output = getCommentText(obj) getCommentTimestamps - KTNEVComments/getCommentTimestamps is a function. output = getCommentTimestamps(obj) getCommentTimestampsSec - KTNEVComments/getCommentTimestampsSec is a function. output = getCommentTimestampsSec(obj)","title":"KTNEVComments"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/#class-ktnevcomments","text":"KTNEVComments This is a class that deals with comments saved in a NEV file . The user can read the comments , get their timestamp information and even add comments to the NEV file and then save it as a new file . addComment : Allows the user to add a new comment to the file at a given timestamp . displayComments : Displays all the comments in the NEV with their corresponding timestamps . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . getCommentText : Displays the text of comments . getCommentTimestamps : Displays the timestamp of comments , in samples . getCommentTimestampsSec : Displays the timestamp of comments , in seconds . EXAMPLE : To run , use \"myVariable = KTNEVComments;\" . Then use \"myVariable.METHODNAME\" to call the various differnet methods . Type \"myVariable.\" and then hit enter to see the available methods . myComments = KTNEVComments ; myComments . DisplayComments ; Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 1.0","title":"CLASS KTNEVComments"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/#properties","text":"none","title":"Properties"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/#methods","text":"Method Description addComment KTNEVComments/addComment is a function. displayComments KTNEVComments/displayComments is a function. getCommentText KTNEVComments/getCommentText is a function. getCommentTimestamps KTNEVComments/getCommentTimestamps is a function. getCommentTimestampsSec KTNEVComments/getCommentTimestampsSec is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTNEVComments/KTNEVComments.m/#methods-help","text":"addComment - KTNEVComments/addComment is a function. addComment(obj) displayComments - KTNEVComments/displayComments is a function. displayComments(obj) getCommentText - KTNEVComments/getCommentText is a function. output = getCommentText(obj) getCommentTimestamps - KTNEVComments/getCommentTimestamps is a function. output = getCommentTimestamps(obj) getCommentTimestampsSec - KTNEVComments/getCommentTimestampsSec is a function. output = getCommentTimestampsSec(obj)","title":"Methods help"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/","text":"CLASS KTNSPOnline \u00b6 UEAMAPFILE -- Defines a class that contains information on a UEA electrode array using CMP files provided by Blackrock Microsystems . To load a CMP file type 'MapName = UEAMapFile' where MapName is the name of the variable that will be created and will contain the map class . Example : myArrayMap = UEAMapFile ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% METHODS : There are several available methods for mapfiles . Here 's a list and a description of what they perform . Electrode2Channel ( Electrode ): Will return the Channel number corresponding to a passed Electrode . Channel2Electrode ( Channel ): Will return the Electrode number corresponding to a passed Channel . GetChannelBankID ( Channel ): Returns the BankID for a passed Channel . GetChannelPin ( Channel ): Returns the Pin for a passed Channel . GetChannelLabel ( Channel ): Returns the Label for a passed Channel . GenerateChannelSubplot ( Channel ): Returns a subplot handle for the passed Channel to be used in plotting UEA - like maps . GenerateChannelSubplotNames ( Channel ): Plots the names of channels and electrodes on the subplot corresponding to the passed Channel . GetChannelColumnRow ( Channel ): Returns the Column and Row positions of the passed number that is used to plot UEA - like maps . PlotCMP : Will plot a map of the CMP Map with all the electrode and channel names . Kian Torab ktorab @ blackrockmicro . com Version 1.1 . 0.0 Superclasses \u00b6 none Properties \u00b6 none Methods \u00b6 Method Description closeConnection KTNSPOnline/closeConnection is a function. dataCollectionReadBuffer KTNSPOnline/dataCollectionReadBuffer is a function. dataCollectionStart if ~BA.dataCollectionIsActive dataCollectionStop if obj.dataCollectionIsActive detectChannelUnitFiredAll KTNSPOnline/detectChannelUnitFiredAll is a function. detectChannelUnitFiredAny KTNSPOnline/detectChannelUnitFiredAny is a function. detectChannelsFired KTNSPOnline/detectChannelsFired is a function. detectDigInBinary KTNSPOnline/detectDigInBinary is a function. detectDigInWord KTNSPOnline/detectDigInWord is a function. detectWhenChannelUnitFiredAny KTNSPOnline/detectWhenChannelUnitFiredAny is a function. detectWhenDigInBit KTNSPOnline/detectWhenDigInBit is a function. detectWhenDigInWord KTNSPOnline/detectWhenDigInWord is a function. getAllChannelLabels KTNSPOnline/getAllChannelLabels is a function. getAmplitudeRejectionRange KTNSPOnline/getAmplitudeRejectionRange is a function. getChannelLabel KTNSPOnline/getChannelLabel is a function. getDigitalReferenceChannel KTNSPOnline/getDigitalReferenceChannel is a function. getNSPTimeSamples KTNSPOnline/getNSPTimeSamples is a function. getNSPTimeSeconds KTNSPOnline/getNSPTimeSeconds is a function. getSpikeThresholdValue KTNSPOnline/getSpikeThresholdValue is a function. isChannelSpikeExtractionEnabled KTNSPOnline/isChannelSpikeExtractionEnabled is a function. isChannelUnitEnabled KTNSPOnline/isChannelUnitEnabled is a function. onlineSpectogram KTNSPOnline/onlineSpectogram is a function. openConnection KTNSPOnline/openConnection is a function. recordingStart KTNSPOnline/recordingStart is a function. recordingStop KTNSPOnline/recordingStop is a function. sendNSPComment KTNSPOnline/sendNSPComment is a function. sendNSPMarker KTNSPOnline/sendNSPMarker is a function. setAmplitudeRejectionRange KTNSPOnline/setAmplitudeRejectionRange is a function. setAnaOutPulse KTNSPOnline/setAnaOutPulse is a function. setDigOutPulse KTNSPOnline/setDigOutPulse is a function. setDigOutTTLHigh KTNSPOnline/setDigOutTTLHigh is a function. setDigOutTTLLow KTNSPOnline/setDigOutTTLLow is a function. setDigitalReferenceChannel KTNSPOnline/setDigitalReferenceChannel is a function. setSpikeThresholdValue KTNSPOnline/setSpikeThresholdValue is a function. Methods help \u00b6 closeConnection - KTNSPOnline/closeConnection is a function. closeConnection(obj) dataCollectionReadBuffer - KTNSPOnline/dataCollectionReadBuffer is a function. [spikeData, startTime, LFPData] = dataCollectionReadBuffer(obj) dataCollectionStart - if ~BA.dataCollectionIsActive dataCollectionStop - if obj.dataCollectionIsActive detectChannelUnitFiredAll - KTNSPOnline/detectChannelUnitFiredAll is a function. fireFlag = detectChannelUnitFiredAll(obj, channels, units) detectChannelUnitFiredAny - KTNSPOnline/detectChannelUnitFiredAny is a function. fireFlag = detectChannelUnitFiredAny(obj, channels, units) detectChannelsFired - KTNSPOnline/detectChannelsFired is a function. spikedChannels = detectChannelsFired(obj, units) detectDigInBinary - KTNSPOnline/detectDigInBinary is a function. [bitValues, bitTimestamps] = detectDigInBinary(obj) detectDigInWord - KTNSPOnline/detectDigInWord is a function. [bitValues, bitTimestamps] = detectDigInWord(obj) detectWhenChannelUnitFiredAny - KTNSPOnline/detectWhenChannelUnitFiredAny is a function. fireFlag = detectWhenChannelUnitFiredAny(obj, channels, units, timeWindow) detectWhenDigInBit - KTNSPOnline/detectWhenDigInBit is a function. fireFlag = detectWhenDigInBit(obj, bitsValue, timeWindow) detectWhenDigInWord - KTNSPOnline/detectWhenDigInWord is a function. fireFlag = detectWhenDigInWord(obj, wordValue, timeWindow) getAllChannelLabels - KTNSPOnline/getAllChannelLabels is a function. configValue = getAllChannelLabels(obj) getAmplitudeRejectionRange - KTNSPOnline/getAmplitudeRejectionRange is a function. ampRejRange = getAmplitudeRejectionRange(obj, channel) getChannelLabel - KTNSPOnline/getChannelLabel is a function. configValue = getChannelLabel(obj, channel) getDigitalReferenceChannel - KTNSPOnline/getDigitalReferenceChannel is a function. refChan = getDigitalReferenceChannel(obj, channel) getNSPTimeSamples - KTNSPOnline/getNSPTimeSamples is a function. NSPTime = getNSPTimeSamples(obj) getNSPTimeSeconds - KTNSPOnline/getNSPTimeSeconds is a function. NSPTime = getNSPTimeSeconds(obj) getSpikeThresholdValue - KTNSPOnline/getSpikeThresholdValue is a function. spikeThresh = getSpikeThresholdValue(obj, channel) isChannelSpikeExtractionEnabled - KTNSPOnline/isChannelSpikeExtractionEnabled is a function. isFlag = isChannelSpikeExtractionEnabled(obj, channel) isChannelUnitEnabled - KTNSPOnline/isChannelUnitEnabled is a function. isFlag = isChannelUnitEnabled(obj, channel, unit) onlineSpectogram - KTNSPOnline/onlineSpectogram is a function. onlineSpectogram(obj, frequencyRange) openConnection - KTNSPOnline/openConnection is a function. openConnection(obj) recordingStart - KTNSPOnline/recordingStart is a function. recordingStart(obj, fileName, userComment) recordingStop - KTNSPOnline/recordingStop is a function. recordingStop(obj) sendNSPComment - KTNSPOnline/sendNSPComment is a function. sendNSPComment(obj, comment) sendNSPMarker - KTNSPOnline/sendNSPMarker is a function. sendNSPMarker(obj, markerValue) setAmplitudeRejectionRange - KTNSPOnline/setAmplitudeRejectionRange is a function. setAmplitudeRejectionRange(obj, channel, newValue) setAnaOutPulse - KTNSPOnline/setAnaOutPulse is a function. setAnaOutPulse(obj, anaOutPortNum, pulseCount, frequency, pulseWidth) setDigOutPulse - KTNSPOnline/setDigOutPulse is a function. setDigOutPulse(obj, digOutPortNum, pulseCount, frequency, pulseWidth) setDigOutTTLHigh - KTNSPOnline/setDigOutTTLHigh is a function. setDigOutTTLHigh(obj, digOutPortNum) setDigOutTTLLow - KTNSPOnline/setDigOutTTLLow is a function. setDigOutTTLLow(obj, digOutPortNum) setDigitalReferenceChannel - KTNSPOnline/setDigitalReferenceChannel is a function. refChan = setDigitalReferenceChannel(obj, channel, newValue) setSpikeThresholdValue - KTNSPOnline/setSpikeThresholdValue is a function. setSpikeThresholdValue(obj, channel, newValue)","title":"KTNSPOnline"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/#class-ktnsponline","text":"UEAMAPFILE -- Defines a class that contains information on a UEA electrode array using CMP files provided by Blackrock Microsystems . To load a CMP file type 'MapName = UEAMapFile' where MapName is the name of the variable that will be created and will contain the map class . Example : myArrayMap = UEAMapFile ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% METHODS : There are several available methods for mapfiles . Here 's a list and a description of what they perform . Electrode2Channel ( Electrode ): Will return the Channel number corresponding to a passed Electrode . Channel2Electrode ( Channel ): Will return the Electrode number corresponding to a passed Channel . GetChannelBankID ( Channel ): Returns the BankID for a passed Channel . GetChannelPin ( Channel ): Returns the Pin for a passed Channel . GetChannelLabel ( Channel ): Returns the Label for a passed Channel . GenerateChannelSubplot ( Channel ): Returns a subplot handle for the passed Channel to be used in plotting UEA - like maps . GenerateChannelSubplotNames ( Channel ): Plots the names of channels and electrodes on the subplot corresponding to the passed Channel . GetChannelColumnRow ( Channel ): Returns the Column and Row positions of the passed number that is used to plot UEA - like maps . PlotCMP : Will plot a map of the CMP Map with all the electrode and channel names . Kian Torab ktorab @ blackrockmicro . com Version 1.1 . 0.0","title":"CLASS KTNSPOnline"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/#properties","text":"none","title":"Properties"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/#methods","text":"Method Description closeConnection KTNSPOnline/closeConnection is a function. dataCollectionReadBuffer KTNSPOnline/dataCollectionReadBuffer is a function. dataCollectionStart if ~BA.dataCollectionIsActive dataCollectionStop if obj.dataCollectionIsActive detectChannelUnitFiredAll KTNSPOnline/detectChannelUnitFiredAll is a function. detectChannelUnitFiredAny KTNSPOnline/detectChannelUnitFiredAny is a function. detectChannelsFired KTNSPOnline/detectChannelsFired is a function. detectDigInBinary KTNSPOnline/detectDigInBinary is a function. detectDigInWord KTNSPOnline/detectDigInWord is a function. detectWhenChannelUnitFiredAny KTNSPOnline/detectWhenChannelUnitFiredAny is a function. detectWhenDigInBit KTNSPOnline/detectWhenDigInBit is a function. detectWhenDigInWord KTNSPOnline/detectWhenDigInWord is a function. getAllChannelLabels KTNSPOnline/getAllChannelLabels is a function. getAmplitudeRejectionRange KTNSPOnline/getAmplitudeRejectionRange is a function. getChannelLabel KTNSPOnline/getChannelLabel is a function. getDigitalReferenceChannel KTNSPOnline/getDigitalReferenceChannel is a function. getNSPTimeSamples KTNSPOnline/getNSPTimeSamples is a function. getNSPTimeSeconds KTNSPOnline/getNSPTimeSeconds is a function. getSpikeThresholdValue KTNSPOnline/getSpikeThresholdValue is a function. isChannelSpikeExtractionEnabled KTNSPOnline/isChannelSpikeExtractionEnabled is a function. isChannelUnitEnabled KTNSPOnline/isChannelUnitEnabled is a function. onlineSpectogram KTNSPOnline/onlineSpectogram is a function. openConnection KTNSPOnline/openConnection is a function. recordingStart KTNSPOnline/recordingStart is a function. recordingStop KTNSPOnline/recordingStop is a function. sendNSPComment KTNSPOnline/sendNSPComment is a function. sendNSPMarker KTNSPOnline/sendNSPMarker is a function. setAmplitudeRejectionRange KTNSPOnline/setAmplitudeRejectionRange is a function. setAnaOutPulse KTNSPOnline/setAnaOutPulse is a function. setDigOutPulse KTNSPOnline/setDigOutPulse is a function. setDigOutTTLHigh KTNSPOnline/setDigOutTTLHigh is a function. setDigOutTTLLow KTNSPOnline/setDigOutTTLLow is a function. setDigitalReferenceChannel KTNSPOnline/setDigitalReferenceChannel is a function. setSpikeThresholdValue KTNSPOnline/setSpikeThresholdValue is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTNSPOnline/KTNSPOnline.m/#methods-help","text":"closeConnection - KTNSPOnline/closeConnection is a function. closeConnection(obj) dataCollectionReadBuffer - KTNSPOnline/dataCollectionReadBuffer is a function. [spikeData, startTime, LFPData] = dataCollectionReadBuffer(obj) dataCollectionStart - if ~BA.dataCollectionIsActive dataCollectionStop - if obj.dataCollectionIsActive detectChannelUnitFiredAll - KTNSPOnline/detectChannelUnitFiredAll is a function. fireFlag = detectChannelUnitFiredAll(obj, channels, units) detectChannelUnitFiredAny - KTNSPOnline/detectChannelUnitFiredAny is a function. fireFlag = detectChannelUnitFiredAny(obj, channels, units) detectChannelsFired - KTNSPOnline/detectChannelsFired is a function. spikedChannels = detectChannelsFired(obj, units) detectDigInBinary - KTNSPOnline/detectDigInBinary is a function. [bitValues, bitTimestamps] = detectDigInBinary(obj) detectDigInWord - KTNSPOnline/detectDigInWord is a function. [bitValues, bitTimestamps] = detectDigInWord(obj) detectWhenChannelUnitFiredAny - KTNSPOnline/detectWhenChannelUnitFiredAny is a function. fireFlag = detectWhenChannelUnitFiredAny(obj, channels, units, timeWindow) detectWhenDigInBit - KTNSPOnline/detectWhenDigInBit is a function. fireFlag = detectWhenDigInBit(obj, bitsValue, timeWindow) detectWhenDigInWord - KTNSPOnline/detectWhenDigInWord is a function. fireFlag = detectWhenDigInWord(obj, wordValue, timeWindow) getAllChannelLabels - KTNSPOnline/getAllChannelLabels is a function. configValue = getAllChannelLabels(obj) getAmplitudeRejectionRange - KTNSPOnline/getAmplitudeRejectionRange is a function. ampRejRange = getAmplitudeRejectionRange(obj, channel) getChannelLabel - KTNSPOnline/getChannelLabel is a function. configValue = getChannelLabel(obj, channel) getDigitalReferenceChannel - KTNSPOnline/getDigitalReferenceChannel is a function. refChan = getDigitalReferenceChannel(obj, channel) getNSPTimeSamples - KTNSPOnline/getNSPTimeSamples is a function. NSPTime = getNSPTimeSamples(obj) getNSPTimeSeconds - KTNSPOnline/getNSPTimeSeconds is a function. NSPTime = getNSPTimeSeconds(obj) getSpikeThresholdValue - KTNSPOnline/getSpikeThresholdValue is a function. spikeThresh = getSpikeThresholdValue(obj, channel) isChannelSpikeExtractionEnabled - KTNSPOnline/isChannelSpikeExtractionEnabled is a function. isFlag = isChannelSpikeExtractionEnabled(obj, channel) isChannelUnitEnabled - KTNSPOnline/isChannelUnitEnabled is a function. isFlag = isChannelUnitEnabled(obj, channel, unit) onlineSpectogram - KTNSPOnline/onlineSpectogram is a function. onlineSpectogram(obj, frequencyRange) openConnection - KTNSPOnline/openConnection is a function. openConnection(obj) recordingStart - KTNSPOnline/recordingStart is a function. recordingStart(obj, fileName, userComment) recordingStop - KTNSPOnline/recordingStop is a function. recordingStop(obj) sendNSPComment - KTNSPOnline/sendNSPComment is a function. sendNSPComment(obj, comment) sendNSPMarker - KTNSPOnline/sendNSPMarker is a function. sendNSPMarker(obj, markerValue) setAmplitudeRejectionRange - KTNSPOnline/setAmplitudeRejectionRange is a function. setAmplitudeRejectionRange(obj, channel, newValue) setAnaOutPulse - KTNSPOnline/setAnaOutPulse is a function. setAnaOutPulse(obj, anaOutPortNum, pulseCount, frequency, pulseWidth) setDigOutPulse - KTNSPOnline/setDigOutPulse is a function. setDigOutPulse(obj, digOutPortNum, pulseCount, frequency, pulseWidth) setDigOutTTLHigh - KTNSPOnline/setDigOutTTLHigh is a function. setDigOutTTLHigh(obj, digOutPortNum) setDigOutTTLLow - KTNSPOnline/setDigOutTTLLow is a function. setDigOutTTLLow(obj, digOutPortNum) setDigitalReferenceChannel - KTNSPOnline/setDigitalReferenceChannel is a function. refChan = setDigitalReferenceChannel(obj, channel, newValue) setSpikeThresholdValue - KTNSPOnline/setSpikeThresholdValue is a function. setSpikeThresholdValue(obj, channel, newValue)","title":"Methods help"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/","text":"CLASS KTUEAImpedanceFile \u00b6 Plots a graphical representation of the impedance data collected by Cerebus and saved in a text file . Usage : plotImpedances ( mapfile ) WHERE : mapfile : Is the mapfile structure obtained with mapfileLoader function that maps the electrodes to channel numbers . If mapfile is not provided then a default map will be used . To see a list of methods type methods ( plotImpedances ). Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.1.0 Ideas borrowed from Sergey Stavisky , The BrainGate Project Superclasses \u00b6 none Properties \u00b6 none Methods \u00b6 Method Description Filename KTUEAImpedanceFile/Filename is a function. PathName KTUEAImpedanceFile/PathName is a function. getChannelImpedance KTUEAImpedanceFile/getChannelImpedance is a function. getImpedance250Perc KTUEAImpedanceFile/getImpedance250Perc is a function. getImpedance25Perc KTUEAImpedanceFile/getImpedance25Perc is a function. getImpedance750Perc KTUEAImpedanceFile/getImpedance750Perc is a function. getImpedance975Perc KTUEAImpedanceFile/getImpedance975Perc is a function. getImpedanceMax KTUEAImpedanceFile/getImpedanceMax is a function. getImpedanceMean KTUEAImpedanceFile/getImpedanceMean is a function. getImpedanceMedian KTUEAImpedanceFile/getImpedanceMedian is a function. getImpedanceMin KTUEAImpedanceFile/getImpedanceMin is a function. getImpedanceRange KTUEAImpedanceFile/getImpedanceRange is a function. getImpedanceSTD KTUEAImpedanceFile/getImpedanceSTD is a function. getImpedances KTUEAImpedanceFile/getImpedances is a function. isValid KTUEAImpedanceFile/isValid is a function. plotBoxPlot KTUEAImpedanceFile/plotBoxPlot is a function. plotHistogram KTUEAImpedanceFile/plotHistogram is a function. plotImpedances KTUEAImpedanceFile/plotImpedances is a function. plotImpedancesColorBackground KTUEAImpedanceFile/plotImpedancesColorBackground is a function. plotImpedancesComparison KTUEAImpedanceFile/plotImpedancesComparison is a function. plotStatistics KTUEAImpedanceFile/plotStatistics is a function. Methods help \u00b6 Filename - KTUEAImpedanceFile/Filename is a function. FileName = Filename(obj) PathName - KTUEAImpedanceFile/PathName is a function. FilePath = PathName(obj) getChannelImpedance - KTUEAImpedanceFile/getChannelImpedance is a function. impedanceDataValue = getChannelImpedance(obj, chanNum) getImpedance250Perc - KTUEAImpedanceFile/getImpedance250Perc is a function. analyzedStat = getImpedance250Perc(obj) getImpedance25Perc - KTUEAImpedanceFile/getImpedance25Perc is a function. analyzedStat = getImpedance25Perc(obj) getImpedance750Perc - KTUEAImpedanceFile/getImpedance750Perc is a function. analyzedStat = getImpedance750Perc(obj) getImpedance975Perc - KTUEAImpedanceFile/getImpedance975Perc is a function. analyzedStat = getImpedance975Perc(obj) getImpedanceMax - KTUEAImpedanceFile/getImpedanceMax is a function. analyzedStat = getImpedanceMax(obj) getImpedanceMean - KTUEAImpedanceFile/getImpedanceMean is a function. analyzedStat = getImpedanceMean(obj) getImpedanceMedian - KTUEAImpedanceFile/getImpedanceMedian is a function. analyzedStat = getImpedanceMedian(obj) getImpedanceMin - KTUEAImpedanceFile/getImpedanceMin is a function. analyzedStat = getImpedanceMin(obj) getImpedanceRange - KTUEAImpedanceFile/getImpedanceRange is a function. analyzedStat = getImpedanceRange(obj) getImpedanceSTD - KTUEAImpedanceFile/getImpedanceSTD is a function. analyzedStat = getImpedanceSTD(obj) getImpedances - KTUEAImpedanceFile/getImpedances is a function. impedanceDataValues = getImpedances(obj) isValid - KTUEAImpedanceFile/isValid is a function. validFlag = isValid(obj) plotBoxPlot - KTUEAImpedanceFile/plotBoxPlot is a function. plotBoxPlot(obj, boxStyle) plotHistogram - KTUEAImpedanceFile/plotHistogram is a function. plotHistogram(obj, binCount, maxRange) plotImpedances - KTUEAImpedanceFile/plotImpedances is a function. plotImpedances(obj, yelThreshold, redThreshold) plotImpedancesColorBackground - KTUEAImpedanceFile/plotImpedancesColorBackground is a function. plotImpedancesColorBackground(obj) plotImpedancesComparison - KTUEAImpedanceFile/plotImpedancesComparison is a function. plotImpedancesComparison(obj) plotStatistics - KTUEAImpedanceFile/plotStatistics is a function. plotStatistics(obj)","title":"KTUEAImpedanceFile"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/#class-ktueaimpedancefile","text":"Plots a graphical representation of the impedance data collected by Cerebus and saved in a text file . Usage : plotImpedances ( mapfile ) WHERE : mapfile : Is the mapfile structure obtained with mapfileLoader function that maps the electrodes to channel numbers . If mapfile is not provided then a default map will be used . To see a list of methods type methods ( plotImpedances ). Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.1.0 Ideas borrowed from Sergey Stavisky , The BrainGate Project","title":"CLASS KTUEAImpedanceFile"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/#properties","text":"none","title":"Properties"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/#methods","text":"Method Description Filename KTUEAImpedanceFile/Filename is a function. PathName KTUEAImpedanceFile/PathName is a function. getChannelImpedance KTUEAImpedanceFile/getChannelImpedance is a function. getImpedance250Perc KTUEAImpedanceFile/getImpedance250Perc is a function. getImpedance25Perc KTUEAImpedanceFile/getImpedance25Perc is a function. getImpedance750Perc KTUEAImpedanceFile/getImpedance750Perc is a function. getImpedance975Perc KTUEAImpedanceFile/getImpedance975Perc is a function. getImpedanceMax KTUEAImpedanceFile/getImpedanceMax is a function. getImpedanceMean KTUEAImpedanceFile/getImpedanceMean is a function. getImpedanceMedian KTUEAImpedanceFile/getImpedanceMedian is a function. getImpedanceMin KTUEAImpedanceFile/getImpedanceMin is a function. getImpedanceRange KTUEAImpedanceFile/getImpedanceRange is a function. getImpedanceSTD KTUEAImpedanceFile/getImpedanceSTD is a function. getImpedances KTUEAImpedanceFile/getImpedances is a function. isValid KTUEAImpedanceFile/isValid is a function. plotBoxPlot KTUEAImpedanceFile/plotBoxPlot is a function. plotHistogram KTUEAImpedanceFile/plotHistogram is a function. plotImpedances KTUEAImpedanceFile/plotImpedances is a function. plotImpedancesColorBackground KTUEAImpedanceFile/plotImpedancesColorBackground is a function. plotImpedancesComparison KTUEAImpedanceFile/plotImpedancesComparison is a function. plotStatistics KTUEAImpedanceFile/plotStatistics is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTUEAImpedanceFile/KTUEAImpedanceFile.m/#methods-help","text":"Filename - KTUEAImpedanceFile/Filename is a function. FileName = Filename(obj) PathName - KTUEAImpedanceFile/PathName is a function. FilePath = PathName(obj) getChannelImpedance - KTUEAImpedanceFile/getChannelImpedance is a function. impedanceDataValue = getChannelImpedance(obj, chanNum) getImpedance250Perc - KTUEAImpedanceFile/getImpedance250Perc is a function. analyzedStat = getImpedance250Perc(obj) getImpedance25Perc - KTUEAImpedanceFile/getImpedance25Perc is a function. analyzedStat = getImpedance25Perc(obj) getImpedance750Perc - KTUEAImpedanceFile/getImpedance750Perc is a function. analyzedStat = getImpedance750Perc(obj) getImpedance975Perc - KTUEAImpedanceFile/getImpedance975Perc is a function. analyzedStat = getImpedance975Perc(obj) getImpedanceMax - KTUEAImpedanceFile/getImpedanceMax is a function. analyzedStat = getImpedanceMax(obj) getImpedanceMean - KTUEAImpedanceFile/getImpedanceMean is a function. analyzedStat = getImpedanceMean(obj) getImpedanceMedian - KTUEAImpedanceFile/getImpedanceMedian is a function. analyzedStat = getImpedanceMedian(obj) getImpedanceMin - KTUEAImpedanceFile/getImpedanceMin is a function. analyzedStat = getImpedanceMin(obj) getImpedanceRange - KTUEAImpedanceFile/getImpedanceRange is a function. analyzedStat = getImpedanceRange(obj) getImpedanceSTD - KTUEAImpedanceFile/getImpedanceSTD is a function. analyzedStat = getImpedanceSTD(obj) getImpedances - KTUEAImpedanceFile/getImpedances is a function. impedanceDataValues = getImpedances(obj) isValid - KTUEAImpedanceFile/isValid is a function. validFlag = isValid(obj) plotBoxPlot - KTUEAImpedanceFile/plotBoxPlot is a function. plotBoxPlot(obj, boxStyle) plotHistogram - KTUEAImpedanceFile/plotHistogram is a function. plotHistogram(obj, binCount, maxRange) plotImpedances - KTUEAImpedanceFile/plotImpedances is a function. plotImpedances(obj, yelThreshold, redThreshold) plotImpedancesColorBackground - KTUEAImpedanceFile/plotImpedancesColorBackground is a function. plotImpedancesColorBackground(obj) plotImpedancesComparison - KTUEAImpedanceFile/plotImpedancesComparison is a function. plotImpedancesComparison(obj) plotStatistics - KTUEAImpedanceFile/plotStatistics is a function. plotStatistics(obj)","title":"Methods help"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/","text":"CLASS KTUEAMapFile \u00b6 UEAMAPFILE -- Defines a class that contains information on a UEA electrode array using CMP files provided by Blackrock Microsystems . To load a CMP file type 'MapName = UEAMapFile' where MapName is the name of the variable that will be created and will contain the map class . Example : myArrayMap = UEAMapFile ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% METHODS : There are several available methods for mapfiles . Here 's a list and a description of what they perform . Electrode2Channel ( Electrode ): Will return the Channel number corresponding to a passed Electrode . Channel2Electrode ( Channel ): Will return the Electrode number corresponding to a passed Channel . GetChannelBankID ( Channel ): Returns the BankID for a passed Channel . GetChannelPin ( Channel ): Returns the Pin for a passed Channel . GetChannelLabel ( Channel ): Returns the Label for a passed Channel . GenerateChannelSubplot ( Channel ): Returns a subplot handle for the passed Channel to be used in plotting UEA - like maps . GenerateChannelSubplotNames ( Channel ): Plots the names of channels and electrodes on the subplot corresponding to the passed Channel . GetChannelColumnRow ( Channel ): Returns the Column and Row positions of the passed number that is used to plot UEA - like maps . PlotCMP : Will plot a map of the CMP Map with all the electrode and channel names . Kian Torab Blackrock Microsystems ktorab @ blackrockmicro . com Version 1.6 . 1.0 Superclasses \u00b6 none Properties \u00b6 Property Description ElecNum ChanNum Column Row Bank Pin Label pathHandle fileHandle Methods \u00b6 Method Description Channel2Electrode KTUEAMapFile/Channel2Electrode is a function. Electrode2Channel KTUEAMapFile/Electrode2Channel is a function. GenerateChannelSubplot KTUEAMapFile/GenerateChannelSubplot is a function. GenerateChannelSubplotNames KTUEAMapFile/GenerateChannelSubplotNames is a function. PlotCMP KTUEAMapFile/PlotCMP is a function. getChannelBankID KTUEAMapFile/getChannelBankID is a function. getChannelColumnRow KTUEAMapFile/getChannelColumnRow is a function. getChannelLabel KTUEAMapFile/getChannelLabel is a function. getChannelPin KTUEAMapFile/getChannelPin is a function. getFilename KTUEAMapFile/getFilename is a function. getPathName KTUEAMapFile/getPathName is a function. isValid KTUEAMapFile/isValid is a function. setAxesColor KTUEAMapFile/setAxesColor is a function. setAxisBackgroundColor KTUEAMapFile/setAxisBackgroundColor is a function. setXAxisColor KTUEAMapFile/setXAxisColor is a function. setYAxisColor KTUEAMapFile/setYAxisColor is a function. Methods help \u00b6 Channel2Electrode - KTUEAMapFile/Channel2Electrode is a function. Electrode = Channel2Electrode(obj, Channel) Electrode2Channel - KTUEAMapFile/Electrode2Channel is a function. Channel = Electrode2Channel(obj, Electrode) GenerateChannelSubplot - KTUEAMapFile/GenerateChannelSubplot is a function. spHandle = GenerateChannelSubplot(obj, Channel) GenerateChannelSubplotNames - KTUEAMapFile/GenerateChannelSubplotNames is a function. GenerateChannelSubplotNames(obj, Channel, fColor) PlotCMP - KTUEAMapFile/PlotCMP is a function. PlotCMP(obj) getChannelBankID - KTUEAMapFile/getChannelBankID is a function. BankID = getChannelBankID(obj, Channel) getChannelColumnRow - KTUEAMapFile/getChannelColumnRow is a function. [x, y] = getChannelColumnRow(obj, Channel) getChannelLabel - KTUEAMapFile/getChannelLabel is a function. Label = getChannelLabel(obj, Channel) getChannelPin - KTUEAMapFile/getChannelPin is a function. Pin = getChannelPin(obj, Channel) getFilename - KTUEAMapFile/getFilename is a function. FileName = getFilename(obj) getPathName - KTUEAMapFile/getPathName is a function. FilePath = getPathName(obj) isValid - KTUEAMapFile/isValid is a function. validFlag = isValid(obj) setAxesColor - KTUEAMapFile/setAxesColor is a function. setAxesColor(~, curColor) setAxisBackgroundColor - KTUEAMapFile/setAxisBackgroundColor is a function. setAxisBackgroundColor(~, curColor) setXAxisColor - KTUEAMapFile/setXAxisColor is a function. setXAxisColor(~, curColor) setYAxisColor - KTUEAMapFile/setYAxisColor is a function. setYAxisColor(~, curColor)","title":"KTUEAMapFile"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/#class-ktueamapfile","text":"UEAMAPFILE -- Defines a class that contains information on a UEA electrode array using CMP files provided by Blackrock Microsystems . To load a CMP file type 'MapName = UEAMapFile' where MapName is the name of the variable that will be created and will contain the map class . Example : myArrayMap = UEAMapFile ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% METHODS : There are several available methods for mapfiles . Here 's a list and a description of what they perform . Electrode2Channel ( Electrode ): Will return the Channel number corresponding to a passed Electrode . Channel2Electrode ( Channel ): Will return the Electrode number corresponding to a passed Channel . GetChannelBankID ( Channel ): Returns the BankID for a passed Channel . GetChannelPin ( Channel ): Returns the Pin for a passed Channel . GetChannelLabel ( Channel ): Returns the Label for a passed Channel . GenerateChannelSubplot ( Channel ): Returns a subplot handle for the passed Channel to be used in plotting UEA - like maps . GenerateChannelSubplotNames ( Channel ): Plots the names of channels and electrodes on the subplot corresponding to the passed Channel . GetChannelColumnRow ( Channel ): Returns the Column and Row positions of the passed number that is used to plot UEA - like maps . PlotCMP : Will plot a map of the CMP Map with all the electrode and channel names . Kian Torab Blackrock Microsystems ktorab @ blackrockmicro . com Version 1.6 . 1.0","title":"CLASS KTUEAMapFile"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/#superclasses","text":"none","title":"Superclasses"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/#properties","text":"Property Description ElecNum ChanNum Column Row Bank Pin Label pathHandle fileHandle","title":"Properties"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/#methods","text":"Method Description Channel2Electrode KTUEAMapFile/Channel2Electrode is a function. Electrode2Channel KTUEAMapFile/Electrode2Channel is a function. GenerateChannelSubplot KTUEAMapFile/GenerateChannelSubplot is a function. GenerateChannelSubplotNames KTUEAMapFile/GenerateChannelSubplotNames is a function. PlotCMP KTUEAMapFile/PlotCMP is a function. getChannelBankID KTUEAMapFile/getChannelBankID is a function. getChannelColumnRow KTUEAMapFile/getChannelColumnRow is a function. getChannelLabel KTUEAMapFile/getChannelLabel is a function. getChannelPin KTUEAMapFile/getChannelPin is a function. getFilename KTUEAMapFile/getFilename is a function. getPathName KTUEAMapFile/getPathName is a function. isValid KTUEAMapFile/isValid is a function. setAxesColor KTUEAMapFile/setAxesColor is a function. setAxisBackgroundColor KTUEAMapFile/setAxisBackgroundColor is a function. setXAxisColor KTUEAMapFile/setXAxisColor is a function. setYAxisColor KTUEAMapFile/setYAxisColor is a function.","title":"Methods"},{"location":"reference/lib/NPMK/%40KTUEAMapFile/KTUEAMapFile.m/#methods-help","text":"Channel2Electrode - KTUEAMapFile/Channel2Electrode is a function. Electrode = Channel2Electrode(obj, Channel) Electrode2Channel - KTUEAMapFile/Electrode2Channel is a function. Channel = Electrode2Channel(obj, Electrode) GenerateChannelSubplot - KTUEAMapFile/GenerateChannelSubplot is a function. spHandle = GenerateChannelSubplot(obj, Channel) GenerateChannelSubplotNames - KTUEAMapFile/GenerateChannelSubplotNames is a function. GenerateChannelSubplotNames(obj, Channel, fColor) PlotCMP - KTUEAMapFile/PlotCMP is a function. PlotCMP(obj) getChannelBankID - KTUEAMapFile/getChannelBankID is a function. BankID = getChannelBankID(obj, Channel) getChannelColumnRow - KTUEAMapFile/getChannelColumnRow is a function. [x, y] = getChannelColumnRow(obj, Channel) getChannelLabel - KTUEAMapFile/getChannelLabel is a function. Label = getChannelLabel(obj, Channel) getChannelPin - KTUEAMapFile/getChannelPin is a function. Pin = getChannelPin(obj, Channel) getFilename - KTUEAMapFile/getFilename is a function. FileName = getFilename(obj) getPathName - KTUEAMapFile/getPathName is a function. FilePath = getPathName(obj) isValid - KTUEAMapFile/isValid is a function. validFlag = isValid(obj) setAxesColor - KTUEAMapFile/setAxesColor is a function. setAxesColor(~, curColor) setAxisBackgroundColor - KTUEAMapFile/setAxisBackgroundColor is a function. setAxisBackgroundColor(~, curColor) setXAxisColor - KTUEAMapFile/setXAxisColor is a function. setXAxisColor(~, curColor) setYAxisColor - KTUEAMapFile/setYAxisColor is a function. setYAxisColor(~, curColor)","title":"Methods help"},{"location":"reference/lib/NPMK/Dependent%20Functions/getFile.m/","text":"getFile \u00b6 getFile Similar to uigetfile , it opens a dialogue to get a file , but it also remembers the last folder location , so the user will not need to navigate to the same folder multiple times . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use [ dataFilename dataFolder ] = getFile ( filterSpec ) filterSpec : The type of file to show . For example , if set to ' * . txt ' ( OPTIONAL ) only text files will be visible for choosing . DEFAULT : * . * , so all files are shown . title : This parameter will be the title of the dialogue box . ( OPTIONAL ) DEFAULT : No title will be shown . dataFilename : The name of the chosen file . dataFolder : The path of the chosen file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : [ fileName pathName ] = getFile ( ' * . jpg ' ); In this example a dialogue will open and only show all jpg files . The name of the chosen file and the path to it are stores in fileName and pathName respectively . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Contributors : Version 1.1.0.0 Last edit by : Kian Torab %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0.1.0 : - Initial release . 1.0.1.0 : - Minor update to the help and some formatting . 1.0.2.0 : July 4 , 2014 - Allows for selection of NSx files only . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getFile"},{"location":"reference/lib/NPMK/Dependent%20Functions/getFile.m/#getfile","text":"getFile Similar to uigetfile , it opens a dialogue to get a file , but it also remembers the last folder location , so the user will not need to navigate to the same folder multiple times . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use [ dataFilename dataFolder ] = getFile ( filterSpec ) filterSpec : The type of file to show . For example , if set to ' * . txt ' ( OPTIONAL ) only text files will be visible for choosing . DEFAULT : * . * , so all files are shown . title : This parameter will be the title of the dialogue box . ( OPTIONAL ) DEFAULT : No title will be shown . dataFilename : The name of the chosen file . dataFolder : The path of the chosen file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : [ fileName pathName ] = getFile ( ' * . jpg ' ); In this example a dialogue will open and only show all jpg files . The name of the chosen file and the path to it are stores in fileName and pathName respectively . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Contributors : Version 1.1.0.0 Last edit by : Kian Torab %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0.1.0 : - Initial release . 1.0.1.0 : - Minor update to the help and some formatting . 1.0.2.0 : July 4 , 2014 - Allows for selection of NSx files only . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getFile"},{"location":"reference/lib/NPMK/Dependent%20Functions/getFolder.m/","text":"getFolder \u00b6 getFolder Similar to uigetdir except that it will remember the location of the last opened folder . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use plotAverageWaveforms %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getFolder"},{"location":"reference/lib/NPMK/Dependent%20Functions/getFolder.m/#getfolder","text":"getFolder Similar to uigetdir except that it will remember the location of the last opened folder . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use plotAverageWaveforms %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getFolder"},{"location":"reference/lib/NPMK/Dependent%20Functions/getSettingFileFullPath.m/","text":"getSettingFileFullPath \u00b6 settingFileFullPath Returns the full path of the settings file. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : - Updated to support unix file system . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getSettingFileFullPath"},{"location":"reference/lib/NPMK/Dependent%20Functions/getSettingFileFullPath.m/#getsettingfilefullpath","text":"settingFileFullPath Returns the full path of the settings file. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : - Updated to support unix file system . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"getSettingFileFullPath"},{"location":"reference/lib/NPMK/Dependent%20Functions/parseCommand.m/","text":"parseCommand \u00b6 parseCommand Parses out a string in the format specified below, into a structure. CommandType : ParamName1 = ParamValue1 ; ParamName2 = ParamValue2 ; The command string can have as many parameters in it as possible. Example : ExpParameters : TaskType = Disc ; StimPattern = 0 ; SRad = 10.0000 ; PRad = 30.0000 ; Int = 0.2000 ; Xpos = 0.0000 ; Ypos = 5.0000 ; Dur = 0.2000 ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kianabc @ kianabc . com Department of Bioengineering University of Utah Contributors : Version 1.3 . 0.0 - November 2 , 2010 Last edit by : Kian Torab %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"parseCommand"},{"location":"reference/lib/NPMK/Dependent%20Functions/parseCommand.m/#parsecommand","text":"parseCommand Parses out a string in the format specified below, into a structure. CommandType : ParamName1 = ParamValue1 ; ParamName2 = ParamValue2 ; The command string can have as many parameters in it as possible. Example : ExpParameters : TaskType = Disc ; StimPattern = 0 ; SRad = 10.0000 ; PRad = 30.0000 ; Int = 0.2000 ; Xpos = 0.0000 ; Ypos = 5.0000 ; Dur = 0.2000 ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kianabc @ kianabc . com Department of Bioengineering University of Utah Contributors : Version 1.3 . 0.0 - November 2 , 2010 Last edit by : Kian Torab %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"parseCommand"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternDetectNEV.m/","text":"syncPatternDetectNEV \u00b6 syncPatternDetectNEV Finds the code for the SYNC pattern on the SYNC output of Blackrock Microsystems Neural Signal Processor ( NSP ) recorded by analog input channel 16 and thresholded as extracted spikes and saved in the NEV file . INPUT NEVStruct : The NEV structure containing the SYNC pulse . OUTPUT codeKeeper : A cell structure containing the unique code and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : codeKeeper = syncPatternDetectNEV ( NEVStruct ) In the example above , the NEV structure , containing the continueus signal from the SYNC pulse is passed to the function . The output will contain the unique codes parsed from the signal file and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : July 7 , 2014 - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternDetectNEV"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternDetectNEV.m/#syncpatterndetectnev","text":"syncPatternDetectNEV Finds the code for the SYNC pattern on the SYNC output of Blackrock Microsystems Neural Signal Processor ( NSP ) recorded by analog input channel 16 and thresholded as extracted spikes and saved in the NEV file . INPUT NEVStruct : The NEV structure containing the SYNC pulse . OUTPUT codeKeeper : A cell structure containing the unique code and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : codeKeeper = syncPatternDetectNEV ( NEVStruct ) In the example above , the NEV structure , containing the continueus signal from the SYNC pulse is passed to the function . The output will contain the unique codes parsed from the signal file and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : July 7 , 2014 - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternDetectNEV"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternDetectNSx.m/","text":"syncPatternDetectNSx \u00b6 syncPatternDetectNSx Finds the code for the SYNC pattern on the SYNC output of Blackrock Microsystems Neural Signal Processor ( NSP ) recorded by analog input channel 16 and outputs the unique code and its related timestamp . INPUT data : The data stream containing the SYNC pulse . OUTPUT codeKeeper : A cell structure containing the unique code and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : codeKeeper = syncPatternDetectNSx ( data ) In the example above , the data , containing the continueus signal from the SYNC pulse is passed to the function . The output will contain the unique codes parsed from the signal file and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : June 8 , 2014 - Initial release . 1.0 . 1.0 : July 7 , 2014 - Updated the help file %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternDetectNSx"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternDetectNSx.m/#syncpatterndetectnsx","text":"syncPatternDetectNSx Finds the code for the SYNC pattern on the SYNC output of Blackrock Microsystems Neural Signal Processor ( NSP ) recorded by analog input channel 16 and outputs the unique code and its related timestamp . INPUT data : The data stream containing the SYNC pulse . OUTPUT codeKeeper : A cell structure containing the unique code and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : codeKeeper = syncPatternDetectNSx ( data ) In the example above , the data , containing the continueus signal from the SYNC pulse is passed to the function . The output will contain the unique codes parsed from the signal file and their respective timestamps . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : June 8 , 2014 - Initial release . 1.0 . 1.0 : July 7 , 2014 - Updated the help file %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternDetectNSx"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternFinderNSx.m/","text":"syncPatternFinderNSx \u00b6 syncPatternFinderNSx Canculated the unique 8-bit code and the associated timestamp of the SYNC pulse of the NSP . Use codeKeeper = syncPatternFinderNSx ( filenameNSx ) All input arguments are optional . Input arguments can be in any order . filenameNSx : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : The structure that contains all the unique 8 - bit SYNC pulse codes and their corresponding timestamps . Example 1 : codeKeeper = syncPatternFinderNSx ( 'myTestNS5.ns5' ); In the example above, the file myTestNS5.ns5 will be opened and all the SYNC pulses and their corresponding timestamps will be output in the codeKeeper structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternFinderNSx"},{"location":"reference/lib/NPMK/Dependent%20Functions/syncPatternFinderNSx.m/#syncpatternfindernsx","text":"syncPatternFinderNSx Canculated the unique 8-bit code and the associated timestamp of the SYNC pulse of the NSP . Use codeKeeper = syncPatternFinderNSx ( filenameNSx ) All input arguments are optional . Input arguments can be in any order . filenameNSx : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : The structure that contains all the unique 8 - bit SYNC pulse codes and their corresponding timestamps . Example 1 : codeKeeper = syncPatternFinderNSx ( 'myTestNS5.ns5' ); In the example above, the file myTestNS5.ns5 will be opened and all the SYNC pulses and their corresponding timestamps will be output in the codeKeeper structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"syncPatternFinderNSx"},{"location":"reference/lib/NPMK/LoadingEngines/MClust/BlackrockNEVLoadingEngine.m/","text":"BlackrockNEVLoadingEngine \u00b6 Blackrock Microsystems NEV loading engine for MClust 3.0 . Kian Torab support @ blackrockmicro . com Blackrock Microsystems Version 1.3 . 0.0 Version 1.4 by Saman Hagh Gooie - 13 October 2016 - Modifed to work with the latest version of the MClust v4 . 4","title":"BlackrockNEVLoadingEngine"},{"location":"reference/lib/NPMK/LoadingEngines/MClust/BlackrockNEVLoadingEngine.m/#blackrocknevloadingengine","text":"Blackrock Microsystems NEV loading engine for MClust 3.0 . Kian Torab support @ blackrockmicro . com Blackrock Microsystems Version 1.3 . 0.0 Version 1.4 by Saman Hagh Gooie - 13 October 2016 - Modifed to work with the latest version of the MClust v4 . 4","title":"BlackrockNEVLoadingEngine"},{"location":"reference/lib/NPMK/NEV%20Utilities/findEventTimes.m/","text":"findEventTimes \u00b6 Given a NEV file , an channel number , and a unit number this function will return indices corresponding to those spikes , timestamps corresponding to those spikes ( optional ), and snippets corresponding to those spikes ( optional ) . Use [ timestamps snippets indices ] = findEventTimes ( NEV , Channel , Unit ) INPUTS NEV : This corresponds to the NEV file the desired data is being extracted from . Channel : The channel number the data is being extracted for . Units : The unit numbers the data is being extracted for . This variable can be one unit or many units passed as an array of integers . DEFAULY : If units is not specified all timestamps from all units will be passed to the calling function . For noise pass 255. OUTPUT indices : An array of all indices that correspond to neural data for channel and unit passed . timestamps : An array of all timestamps that correspond to neural data for channel and unit passed . snippets : A matrix of all indices that correspond to neural data for channel and unit passed . IF OUTPUT IS NOT SPECIFIED only \"timestamps\" WILL BE PASSED TO THE CALLING FUNCTION . Example : [ timestamps snippets indices ] = findEventTimes ( NEV , 3 , [ 1 , 3 : 5 ]); In the example above , the indices , timestamps , and snippets for channel #3 and units 1, 3, 4, and 5 will be passed to the calling function . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 2.0 . 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"findEventTimes"},{"location":"reference/lib/NPMK/NEV%20Utilities/findEventTimes.m/#findeventtimes","text":"Given a NEV file , an channel number , and a unit number this function will return indices corresponding to those spikes , timestamps corresponding to those spikes ( optional ), and snippets corresponding to those spikes ( optional ) . Use [ timestamps snippets indices ] = findEventTimes ( NEV , Channel , Unit ) INPUTS NEV : This corresponds to the NEV file the desired data is being extracted from . Channel : The channel number the data is being extracted for . Units : The unit numbers the data is being extracted for . This variable can be one unit or many units passed as an array of integers . DEFAULY : If units is not specified all timestamps from all units will be passed to the calling function . For noise pass 255. OUTPUT indices : An array of all indices that correspond to neural data for channel and unit passed . timestamps : An array of all timestamps that correspond to neural data for channel and unit passed . snippets : A matrix of all indices that correspond to neural data for channel and unit passed . IF OUTPUT IS NOT SPECIFIED only \"timestamps\" WILL BE PASSED TO THE CALLING FUNCTION . Example : [ timestamps snippets indices ] = findEventTimes ( NEV , 3 , [ 1 , 3 : 5 ]); In the example above , the indices , timestamps , and snippets for channel #3 and units 1, 3, 4, and 5 will be passed to the calling function . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 2.0 . 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"findEventTimes"},{"location":"reference/lib/NPMK/NEV%20Utilities/mergeNEV.m/","text":"mergeNEV \u00b6 Saves a new NEV file that contains event data from one NEV and spike data from another %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use : mergeNEV ()","title":"mergeNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/mergeNEV.m/#mergenev","text":"Saves a new NEV file that contains event data from one NEV and spike data from another %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use : mergeNEV ()","title":"mergeNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/openNEVTracking.m/","text":"openNEVTracking \u00b6 openNEV Opens an . nev file for reading , returns all file information in a NEV structure . Works with File Spec 2.1 & 2.2 & 2.3 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = openNEV ( fname , 'noread' , 'report' , 'noparse' , 'nowarning' , 'nosave' , 'nomat' , 'uV' , 'overwrite' ) . NOTE : All input arguments are optional . Input arguments may be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file using an open file user interface . DEFAULT : Will open Open File UI . 'noread' : Will not read the spike waveforms if user passes this argument . DEFAULT : will read spike waveform . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'parse' : The code will not parse the experimental parameters in digital I / O . See below for guidelines on how to format your parameters . DEFAULT : will not parse the parameters . 'nowarning' : The code will not give a warning if there is an error in parsing . DEFAULT : will give warning message . 'nosave' : The code will not save a copy of the NEV structure as a MAT file . By default the code will save a copy in the same folder as the NEV file for easy future access . DEFAULT : will save the MAT file . 'nomat' : Will not look for a MAT file . This option will force openNEV to open a NEV file instead of any available MAT files . DEFAULT : will load the MAT file if available . 'uV' : Will read the spike waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the waveforms type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read waveform information in raw . '8bits' : Indicates that 8 bits on the digital IO port was used instead of 16 bits . DEFAULT : will assumes that 16 bits of digital IO were used . 't:' : Indicats the time window of the NEV file to be read . For example , if t : is set to 2 ( i . e . 't:0.6' ) then only the first 2 seconds of the file is to be read . If set to 2 - 50 ( i . e . 't:2:50) then the time between 2 seconds and 50 seconds will be read . DEFAULT : the entire file will be read if 't:xx:xx' is not passed to the function . 'overwrite' : If MATLAB loads a NEV file using 'nomat' and a MAT file already exists , by default it will prompt the user to allow for overwriting the old MAT . Passing the 'overwrite' flag will automatically overwrite the newly opened NEV file ont the old MAT file . DEFAULT : will ask the user whether to overwrite the old MAT . OUTPUT : Contains the NEV structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( 'report' , 'read' ); In the example above , the file dialogue will prompt for a file . A report of the file contents will be shown . The digital data will not be parsed . The data needs to be in the proper format ( refer below ) . The spike waveforms are in raw units and not in uV . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DIGITAL PARAMETERS / MARKERS FORMAT : In order for this function to parse your experimental parameters they need to be in the following format : * ParamLabel : Parameter1 = value1 ; Parameter2 = value2 ; Parameter3 = value3 ; # TWO EXAMPLES : * ExpParameter : Intensity = 1.02 ; Duration = 400 ; Trials = 1 ; PageSegment = 14 ; # * Stimulation : StimCount = 5 ; Duration = 10 ; # In the first example , the parameter is of type \"ExpParameter\" . The parameters are , \"Intensity, Duration, Trials, and PageSement.\" The values of those parameters are , \"1.02, 400, 1, and 14,\" respectively . The second example is of type \"Stimulation\" . The name of the parameters are \"StimCount\" and \"Duration\" and the values are \"5\" and \"10\" respectively . ----------------------------------------------------------------------- It can also read single value markers that follow the following format . * MarkerName = Value ; # EXAMPLES : * WaitSeconds = 10 ; # OR *JuiceStatus=ON;# The above line is a \"Marker\" . The marker value is 10 in the first and it 's ON in the second example. ----------------------------------------------------------------------- Moreover , the marker could be a single value : * MarkerValue # EXAMPLES : * JuiceOff # OR *HandsOnSwitches# ----------------------------------------------------------------------- The label , parameter name , and values are flexible and can be anything . The only required formatting is that the user needs to have a label followed by a colon ':' , followed by a field name 'MarkerVal' , followed by an equal sign '=' , followed by the parameter value '10' , and end with a semi - colon ';' . NOTE : Every line requires a pound - sign '#' at the very end . Every line requires a star sign '*' at the very beginning . If you use LabVIEW SendtoCerebus . vi by Kian Torab then there is no need for a '*' in the beginning . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 4.4 . 0.0 : - Major performance boost in reading NEV files when tracking data is stored in the file . 4.4 . 0.2 : - Updated documentation . 4.4 . 0.3 : 5 January 2014 - Fixed the way DayOfWeek is read in MetaTags . - Fixed 'noread' argument , so when passed , openNEV will not read the spike waveforms . 4.4 . 1.0 : 25 January 2014 - Fixed a bug that resulted from passing 'read' to openNEV . 4.4 . 2.0 : 28 February 2014 - Fixed bug related to loading data with t : XX : XX argument . 4.4 . 3.0 : 12 June 2014 - Fixed a typo in the help . 4.4 . 3.1 : 13 June 2014 - Updated the version numbers in the help and in the function itself . 4.4 . 3.2 : 21 June 2014 - Fixed a bug where Application name wasn 't being read properly. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNEVTracking"},{"location":"reference/lib/NPMK/NEV%20Utilities/openNEVTracking.m/#opennevtracking","text":"openNEV Opens an . nev file for reading , returns all file information in a NEV structure . Works with File Spec 2.1 & 2.2 & 2.3 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = openNEV ( fname , 'noread' , 'report' , 'noparse' , 'nowarning' , 'nosave' , 'nomat' , 'uV' , 'overwrite' ) . NOTE : All input arguments are optional . Input arguments may be in any order . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file using an open file user interface . DEFAULT : Will open Open File UI . 'noread' : Will not read the spike waveforms if user passes this argument . DEFAULT : will read spike waveform . 'report' : Will show a summary report if user passes this argument . DEFAULT : will not show report . 'parse' : The code will not parse the experimental parameters in digital I / O . See below for guidelines on how to format your parameters . DEFAULT : will not parse the parameters . 'nowarning' : The code will not give a warning if there is an error in parsing . DEFAULT : will give warning message . 'nosave' : The code will not save a copy of the NEV structure as a MAT file . By default the code will save a copy in the same folder as the NEV file for easy future access . DEFAULT : will save the MAT file . 'nomat' : Will not look for a MAT file . This option will force openNEV to open a NEV file instead of any available MAT files . DEFAULT : will load the MAT file if available . 'uV' : Will read the spike waveforms in unit of uV instead of raw values . Note that this conversion may lead to loss of information ( e . g . 15 / 4 = 4 ) since the waveforms type will stay in int16 . It 's recommended to read raw spike waveforms and then perform the conversion at a later time . DEFAULT : will read waveform information in raw . '8bits' : Indicates that 8 bits on the digital IO port was used instead of 16 bits . DEFAULT : will assumes that 16 bits of digital IO were used . 't:' : Indicats the time window of the NEV file to be read . For example , if t : is set to 2 ( i . e . 't:0.6' ) then only the first 2 seconds of the file is to be read . If set to 2 - 50 ( i . e . 't:2:50) then the time between 2 seconds and 50 seconds will be read . DEFAULT : the entire file will be read if 't:xx:xx' is not passed to the function . 'overwrite' : If MATLAB loads a NEV file using 'nomat' and a MAT file already exists , by default it will prompt the user to allow for overwriting the old MAT . Passing the 'overwrite' flag will automatically overwrite the newly opened NEV file ont the old MAT file . DEFAULT : will ask the user whether to overwrite the old MAT . OUTPUT : Contains the NEV structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( 'report' , 'read' ); In the example above , the file dialogue will prompt for a file . A report of the file contents will be shown . The digital data will not be parsed . The data needs to be in the proper format ( refer below ) . The spike waveforms are in raw units and not in uV . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DIGITAL PARAMETERS / MARKERS FORMAT : In order for this function to parse your experimental parameters they need to be in the following format : * ParamLabel : Parameter1 = value1 ; Parameter2 = value2 ; Parameter3 = value3 ; # TWO EXAMPLES : * ExpParameter : Intensity = 1.02 ; Duration = 400 ; Trials = 1 ; PageSegment = 14 ; # * Stimulation : StimCount = 5 ; Duration = 10 ; # In the first example , the parameter is of type \"ExpParameter\" . The parameters are , \"Intensity, Duration, Trials, and PageSement.\" The values of those parameters are , \"1.02, 400, 1, and 14,\" respectively . The second example is of type \"Stimulation\" . The name of the parameters are \"StimCount\" and \"Duration\" and the values are \"5\" and \"10\" respectively . ----------------------------------------------------------------------- It can also read single value markers that follow the following format . * MarkerName = Value ; # EXAMPLES : * WaitSeconds = 10 ; # OR *JuiceStatus=ON;# The above line is a \"Marker\" . The marker value is 10 in the first and it 's ON in the second example. ----------------------------------------------------------------------- Moreover , the marker could be a single value : * MarkerValue # EXAMPLES : * JuiceOff # OR *HandsOnSwitches# ----------------------------------------------------------------------- The label , parameter name , and values are flexible and can be anything . The only required formatting is that the user needs to have a label followed by a colon ':' , followed by a field name 'MarkerVal' , followed by an equal sign '=' , followed by the parameter value '10' , and end with a semi - colon ';' . NOTE : Every line requires a pound - sign '#' at the very end . Every line requires a star sign '*' at the very beginning . If you use LabVIEW SendtoCerebus . vi by Kian Torab then there is no need for a '*' in the beginning . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 4.4 . 0.0 : - Major performance boost in reading NEV files when tracking data is stored in the file . 4.4 . 0.2 : - Updated documentation . 4.4 . 0.3 : 5 January 2014 - Fixed the way DayOfWeek is read in MetaTags . - Fixed 'noread' argument , so when passed , openNEV will not read the spike waveforms . 4.4 . 1.0 : 25 January 2014 - Fixed a bug that resulted from passing 'read' to openNEV . 4.4 . 2.0 : 28 February 2014 - Fixed bug related to loading data with t : XX : XX argument . 4.4 . 3.0 : 12 June 2014 - Fixed a typo in the help . 4.4 . 3.1 : 13 June 2014 - Updated the version numbers in the help and in the function itself . 4.4 . 3.2 : 21 June 2014 - Fixed a bug where Application name wasn 't being read properly. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNEVTracking"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEV.m/","text":"saveNEV \u00b6 Save an .NEV file from an NEV structure (gained by using openNEV) Works with file spec 2.3 Use saveNEV(NEV, filename, noreport)","title":"saveNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEV.m/#savenev","text":"Save an .NEV file from an NEV structure (gained by using openNEV) Works with file spec 2.3 Use saveNEV(NEV, filename, noreport)","title":"saveNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEVSpikes.m/","text":"saveNEVSpikes \u00b6 saveNEVSpikes Allows the user to save a modified version of the spike waveforms into a NEV file . This can be very useful for those who want to save MATLAB sorted or rethresholded NEV data back into the NEV file . It also re - saves the other data in the original NEV file into the new NEV . A Use saveNEVSpikes ( spikeStruct , newFileName ) spikeStruct : The structure containing the spike data needed to be saved . The structure format must match the one that openNEV outputs . spikeStruct . TimeStamp : contains all the timestamps spikeStruct . Electrode : contains all the electrode # s spikeStruct . Unit : contains all the sorted unit # s spikeStruct . Waveform : Spike waveforms , containing 48 data points newFileName : The file name of the new NEV file . DEFAULT : User will be prmpted for a file name . Example 1 : saveNEVSpikes ( spikeStruct , 'sortedNEV' ; In the example above, the user will be prompted to select a NEV file. The data stored in spikeStruct will be saved into sortedNEV alongside the data in the user - selected NEV file . The new NEV will be saved as sortedNEV . nev Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 1.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial Release . 1.2 . 0.0 : - Fixed a bug where the data saved incorrectly under the Windows OS . - Sped up the processing significantly . 1.2 . 1.0 - Fixed a bug introduced in 1.2 . 0.0 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Validating the input argument","title":"saveNEVSpikes"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEVSpikes.m/#savenevspikes","text":"saveNEVSpikes Allows the user to save a modified version of the spike waveforms into a NEV file . This can be very useful for those who want to save MATLAB sorted or rethresholded NEV data back into the NEV file . It also re - saves the other data in the original NEV file into the new NEV . A Use saveNEVSpikes ( spikeStruct , newFileName ) spikeStruct : The structure containing the spike data needed to be saved . The structure format must match the one that openNEV outputs . spikeStruct . TimeStamp : contains all the timestamps spikeStruct . Electrode : contains all the electrode # s spikeStruct . Unit : contains all the sorted unit # s spikeStruct . Waveform : Spike waveforms , containing 48 data points newFileName : The file name of the new NEV file . DEFAULT : User will be prmpted for a file name . Example 1 : saveNEVSpikes ( spikeStruct , 'sortedNEV' ; In the example above, the user will be prompted to select a NEV file. The data stored in spikeStruct will be saved into sortedNEV alongside the data in the user - selected NEV file . The new NEV will be saved as sortedNEV . nev Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 1.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial Release . 1.2 . 0.0 : - Fixed a bug where the data saved incorrectly under the Windows OS . - Sped up the processing significantly . 1.2 . 1.0 - Fixed a bug introduced in 1.2 . 0.0 . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Validating the input argument","title":"saveNEVSpikes"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEVSubSpikes.m/","text":"saveNEVSubSpikes \u00b6 saveNEVSubSpikes Opens saves a new NEV file that only contains chanenls in channelsToRead. Use saveNEVSubSpikes ( channelsToRead ) channelsToRead : The channel data to be saved into a new NEV . DEFAULT : This input is required . fileFullPath : The full path to the NEV file that is going to be used for splitting . DEFAULT : The user will be prompted to choose a suffix . addedSuffix : The suffix added to the end of splitted file . DEFAULT : 'ss' is the added suffix . Example 1 : channelsToRead ( 4 , 'c:\\datafolder\\datafile.nev' , 'tet' ); In the example above, the file c:\\datafolder\\datafile.nev will be used. The selected NEV file will be saved into a new NEV file that only contains data from channel 4. The new file will have the added suffix 'tet' , so the new filename will be c : \\ datafolder \\ datafile - ssXXX . nev . Example 2 : channelsToRead ([ 5 , 8 , 12 ]; In the example above, the user will be prompted to select a NEV file. The selected NEV file will be saved into a new NEV file that only contains data from channels 5 , 8 , and 12. Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 2.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release . 1.1 . 0.0 : - Bug fix with saving file names . - Added ability to pass the file name to the function as an argument . - Added ability to define the suffix to the split files ( addedExtension ). 1.2 . 0.0 : - Fixed a bug related to the # of input arguments and compatibility with other functions . 1.2 . 1.0 : - Updated help . 1.2 . 2.0 : - Fixed a bug where the data was not being saved correctly on Windows machines . - Fixed a bug where tetrodes higher than 10 were overwriting tetrodes 1 through 10 over and over again . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveNEVSubSpikes"},{"location":"reference/lib/NPMK/NEV%20Utilities/saveNEVSubSpikes.m/#savenevsubspikes","text":"saveNEVSubSpikes Opens saves a new NEV file that only contains chanenls in channelsToRead. Use saveNEVSubSpikes ( channelsToRead ) channelsToRead : The channel data to be saved into a new NEV . DEFAULT : This input is required . fileFullPath : The full path to the NEV file that is going to be used for splitting . DEFAULT : The user will be prompted to choose a suffix . addedSuffix : The suffix added to the end of splitted file . DEFAULT : 'ss' is the added suffix . Example 1 : channelsToRead ( 4 , 'c:\\datafolder\\datafile.nev' , 'tet' ); In the example above, the file c:\\datafolder\\datafile.nev will be used. The selected NEV file will be saved into a new NEV file that only contains data from channel 4. The new file will have the added suffix 'tet' , so the new filename will be c : \\ datafolder \\ datafile - ssXXX . nev . Example 2 : channelsToRead ([ 5 , 8 , 12 ]; In the example above, the user will be prompted to select a NEV file. The selected NEV file will be saved into a new NEV file that only contains data from channels 5 , 8 , and 12. Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 2.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release . 1.1 . 0.0 : - Bug fix with saving file names . - Added ability to pass the file name to the function as an argument . - Added ability to define the suffix to the split files ( addedExtension ). 1.2 . 0.0 : - Fixed a bug related to the # of input arguments and compatibility with other functions . 1.2 . 1.0 : - Updated help . 1.2 . 2.0 : - Fixed a bug where the data was not being saved correctly on Windows machines . - Fixed a bug where tetrodes higher than 10 were overwriting tetrodes 1 through 10 over and over again . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveNEVSubSpikes"},{"location":"reference/lib/NPMK/NEV%20Utilities/sortNEV.m/","text":"sortNEV \u00b6 This function extracts information out of a structure based on the field values . The outputs can be the sorted structure and the indeces of those extracted fields . Use [ SortedStruct , SortedIndeces ] = sortNEV ( STRUCT , field , TestValue , Report ) STRUCT : The structure to be used for extraction . field : The field in STRUCT that is set as criteria for extraction . This parameter is optional . If not passed , the function will prompt the user to provide the name of the field . TestValue : The value that \"field\" needs to be equal to in order to get extracted . This parameter is optional . If not passed , the function will prompt the user to provide the value . Report : If this flag is set to 1 the function will show a short summary of the data that was processed . This parametere is optional . DEFAULT : will not show report . OUTPUT SortedStruct : The sorted structure output . SortedIndeces : The indeces to the sorted elements . Example : [ NewStruct , Indeces ] = sortNEV ( MainStruct , 'TestField' , 3 , 1 ); In the example above, the MainStruct is the structure containing all elements . The function will search through MainStruct and extract all elements that have their 'TestField' field set to '3' . It will also show a report of how many elemenets were processed and how many were extracted . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.4 . 1.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"sortNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/sortNEV.m/#sortnev","text":"This function extracts information out of a structure based on the field values . The outputs can be the sorted structure and the indeces of those extracted fields . Use [ SortedStruct , SortedIndeces ] = sortNEV ( STRUCT , field , TestValue , Report ) STRUCT : The structure to be used for extraction . field : The field in STRUCT that is set as criteria for extraction . This parameter is optional . If not passed , the function will prompt the user to provide the name of the field . TestValue : The value that \"field\" needs to be equal to in order to get extracted . This parameter is optional . If not passed , the function will prompt the user to provide the value . Report : If this flag is set to 1 the function will show a short summary of the data that was processed . This parametere is optional . DEFAULT : will not show report . OUTPUT SortedStruct : The sorted structure output . SortedIndeces : The indeces to the sorted elements . Example : [ NewStruct , Indeces ] = sortNEV ( MainStruct , 'TestField' , 3 , 1 ); In the example above, the MainStruct is the structure containing all elements . The function will search through MainStruct and extract all elements that have their 'TestField' field set to '3' . It will also show a report of how many elemenets were processed and how many were extracted . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.4 . 1.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"sortNEV"},{"location":"reference/lib/NPMK/NEV%20Utilities/splitNEVResets.m/","text":"splitNEVResets \u00b6 splitNSx Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( splitCount ) All input arguments are optional . Input arguments can be in any order . splitCount : Defines the number of splits . DEFAULT : Splits the file in 2 pieces . Example 1 : splitNSx ( 4 ); In the example above , the user will be prompted to select a file . The loaded file will be split in 4 samller files . For example , if the file is 1 hour long then it will be split into four 15 - minute files . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNEVResets"},{"location":"reference/lib/NPMK/NEV%20Utilities/splitNEVResets.m/#splitnevresets","text":"splitNSx Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( splitCount ) All input arguments are optional . Input arguments can be in any order . splitCount : Defines the number of splits . DEFAULT : Splits the file in 2 pieces . Example 1 : splitNSx ( 4 ); In the example above , the user will be prompted to select a file . The loaded file will be split in 4 samller files . For example , if the file is 1 hour long then it will be split into four 15 - minute files . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNEVResets"},{"location":"reference/lib/NPMK/NSx%20Utilities/NSxPowerSpectrum.m/","text":"NSxPowerSpectrum \u00b6 NSxPowerSpectrum is a function. NSxPowerSpectrum(NSx, channelNumber, colorCode)","title":"NSxPowerSpectrum"},{"location":"reference/lib/NPMK/NSx%20Utilities/NSxPowerSpectrum.m/#nsxpowerspectrum","text":"NSxPowerSpectrum is a function. NSxPowerSpectrum(NSx, channelNumber, colorCode)","title":"NSxPowerSpectrum"},{"location":"reference/lib/NPMK/NSx%20Utilities/NSxToHL.m/","text":"NSxToHL \u00b6 NSxToHL Opens and reads an NSx file without the header information and saves the binary data into a . dat file with the same name . This can be used for specific applications that require this type of data , e . g . Klusters . Works with File Spec 2.1 , 2.2 and 2.3 . It does not support pauses at this time . Use OUTPUT = NSxToHL ( fname ) All input arguments are optional . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : Contains the binary data . Example 1 : NSxToHL ( 'c:\\data\\sample.ns5' ); In the example above, the file c:\\data\\sample.ns5 will be opened and the data will be read and saved without the header information in file sample . ns5 . dat . Example 2 : NSxToHL ; In the example above, the file user will be prompted for the file. The selected file ( e . g . FILENAME . NSx ) will be opened and the data will be read and saved in the file FILENAME . NSx . dat . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Opening the file Popup the Open File UI . Also , process the file name , path , and extension for later use , and validate the entry .","title":"NSxToHL"},{"location":"reference/lib/NPMK/NSx%20Utilities/NSxToHL.m/#nsxtohl","text":"NSxToHL Opens and reads an NSx file without the header information and saves the binary data into a . dat file with the same name . This can be used for specific applications that require this type of data , e . g . Klusters . Works with File Spec 2.1 , 2.2 and 2.3 . It does not support pauses at this time . Use OUTPUT = NSxToHL ( fname ) All input arguments are optional . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : Contains the binary data . Example 1 : NSxToHL ( 'c:\\data\\sample.ns5' ); In the example above, the file c:\\data\\sample.ns5 will be opened and the data will be read and saved without the header information in file sample . ns5 . dat . Example 2 : NSxToHL ; In the example above, the file user will be prompted for the file. The selected file ( e . g . FILENAME . NSx ) will be opened and the data will be read and saved in the file FILENAME . NSx . dat . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Opening the file Popup the Open File UI . Also , process the file name , path , and extension for later use , and validate the entry .","title":"NSxToHL"},{"location":"reference/lib/NPMK/NSx%20Utilities/calcTimeDelay.m/","text":"calcTimeDelay \u00b6 timeDelay = calcTimeDelay ( NSx1 , NSx2 ) This function calculates the time difference between the end of the first NSx file and the beginning of the second NSx file . NSx1 : The first NSx file passed to the function . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) NSx2 : The second NSx file passed to the function . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.0.0.0","title":"calcTimeDelay"},{"location":"reference/lib/NPMK/NSx%20Utilities/calcTimeDelay.m/#calctimedelay","text":"timeDelay = calcTimeDelay ( NSx1 , NSx2 ) This function calculates the time difference between the end of the first NSx file and the beginning of the second NSx file . NSx1 : The first NSx file passed to the function . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) NSx2 : The second NSx file passed to the function . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.0.0.0","title":"calcTimeDelay"},{"location":"reference/lib/NPMK/NSx%20Utilities/combineNSxNEV.m/","text":"combineNSxNEV \u00b6 [ NSx , NEV ] = combineNSxNEV ( filename1 , filename2 ) This function loads two NSx and NEV files and it will combine them together into a sinlge NSx and NEV structure in MATLAB . To merge two NSx and NEV files into individual files see mergeNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : [ NSx , NEV ] = combineNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and combines them into single variables NSx and NEV into MATLAB workspace . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 2.0","title":"combineNSxNEV"},{"location":"reference/lib/NPMK/NSx%20Utilities/combineNSxNEV.m/#combinensxnev","text":"[ NSx , NEV ] = combineNSxNEV ( filename1 , filename2 ) This function loads two NSx and NEV files and it will combine them together into a sinlge NSx and NEV structure in MATLAB . To merge two NSx and NEV files into individual files see mergeNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : [ NSx , NEV ] = combineNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and combines them into single variables NSx and NEV into MATLAB workspace . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 2.0","title":"combineNSxNEV"},{"location":"reference/lib/NPMK/NSx%20Utilities/findSpikes.m/","text":"findSpikes \u00b6 findSpikes Searches NSx data structure for spikes by thresholding. The output is compatible with NEV . Data . Spikes data structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = findSpikes ( NSx , 'threshold' , 'preThreshold' , 'spikeLength' , 'channels' , 'duration' , 'filter' ) NSx : The data structure holding the NSx structure NOTE : All following input arguments are optional . Input arguments may be in any order . 'threshold' : The threshold value to apply to the file . DEFAULT : - 65 uV 'preThreshold' : The number of pre - threshold crossing samples to save . DEFAULT : 10 'spikeLength' : Length of each extracted spike in number of samples . DEFAULT : 48 'channels' : The channels to perform spike extraction on . DEFAULT : will perform spike extraction on all channels 'duration' : The duration of file to perform spike extraction on . DEFAULT : will perform extraction on the entire file 'filter' : The filter cut - off frequency applied before spike extraction . DEFAULT : no filter will be applied OUTPUT : Contains the NEV . Spikes structure . USAGE EXAMPLE : Spikes = findSpikes ( NSx , 'channels' , 1 : 3 , 'duration' , 1 : 10000 , 'threshold' , - 65 ); In the above example the NSx analog data is searched for spikes on channels 1 through 3 for samples between 1 and 10000. Threshold is set to - 65 uV for all channels . Spikes = findSpikes ( NSx , 'channels' , 1 : 3 , 'threshold' , [ - 65 - 100 - 85 ]); In the above example the NSx analog data is searched for spikes among channels 1 to 3. Thresholds for channel 1 is set to - 65 uV , for channel 2 is set to - 100 uV , and for channel 3 is set to - 85 uV . Original Author : Ehsan Azar Contributors : Kian Torab , Blackrock Microsystems , ktorab @ blackrockmicro . com Version 1.0 . 2.0","title":"findSpikes"},{"location":"reference/lib/NPMK/NSx%20Utilities/findSpikes.m/#findspikes","text":"findSpikes Searches NSx data structure for spikes by thresholding. The output is compatible with NEV . Data . Spikes data structure . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use OUTPUT = findSpikes ( NSx , 'threshold' , 'preThreshold' , 'spikeLength' , 'channels' , 'duration' , 'filter' ) NSx : The data structure holding the NSx structure NOTE : All following input arguments are optional . Input arguments may be in any order . 'threshold' : The threshold value to apply to the file . DEFAULT : - 65 uV 'preThreshold' : The number of pre - threshold crossing samples to save . DEFAULT : 10 'spikeLength' : Length of each extracted spike in number of samples . DEFAULT : 48 'channels' : The channels to perform spike extraction on . DEFAULT : will perform spike extraction on all channels 'duration' : The duration of file to perform spike extraction on . DEFAULT : will perform extraction on the entire file 'filter' : The filter cut - off frequency applied before spike extraction . DEFAULT : no filter will be applied OUTPUT : Contains the NEV . Spikes structure . USAGE EXAMPLE : Spikes = findSpikes ( NSx , 'channels' , 1 : 3 , 'duration' , 1 : 10000 , 'threshold' , - 65 ); In the above example the NSx analog data is searched for spikes on channels 1 through 3 for samples between 1 and 10000. Threshold is set to - 65 uV for all channels . Spikes = findSpikes ( NSx , 'channels' , 1 : 3 , 'threshold' , [ - 65 - 100 - 85 ]); In the above example the NSx analog data is searched for spikes among channels 1 to 3. Thresholds for channel 1 is set to - 65 uV , for channel 2 is set to - 100 uV , and for channel 3 is set to - 85 uV . Original Author : Ehsan Azar Contributors : Kian Torab , Blackrock Microsystems , ktorab @ blackrockmicro . com Version 1.0 . 2.0","title":"findSpikes"},{"location":"reference/lib/NPMK/NSx%20Utilities/matrixToNSx.m/","text":"matrixToNSx \u00b6 matrixToNSx Converts a MATLAB data matrix (channels as rows, samples as columns) into a NSx file . Use matrixToNSx ( inputData , samplingFreq , inputUnits , savedDataPath ) All input arguments are optional . inputData : data matrix ( channels as rows , samples as columns ) into a NSx file . samplingFreq : Sampling frequency of the data . Currently only 500 Hz , 1 kHz , 2 kHz , 10 kHz , and 30 kHz sampaling frequencies are supported . inputUnits : The unit for the recorded data . Most data acquisition systems save the data in units of \u00b5 V . TDT units are V . The supported units are V , mV , uV or nV . savedDataPath : The full path ( excluding the extension ) of the saved file . Example 1 ( Mac ): matrixToNSx ( myData , 30000 , 'uv' , '/Desktop/newConvertedFile' ); In the example above, the data matrix myData recorded at 30kHz will be saved on the Desktop ( Mac style path ) as newConvertedFile . ns5 file . Example 2 ( PC ): matrixToNSx ( myData , 30000 , 'uv' , 'C:\\Data\\newConvertedFile' ); In the example above, the data matrix myData recorded at 30kHz will be saved C : \\ Data folder as newConvertedFile . ns5 file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"matrixToNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/matrixToNSx.m/#matrixtonsx","text":"matrixToNSx Converts a MATLAB data matrix (channels as rows, samples as columns) into a NSx file . Use matrixToNSx ( inputData , samplingFreq , inputUnits , savedDataPath ) All input arguments are optional . inputData : data matrix ( channels as rows , samples as columns ) into a NSx file . samplingFreq : Sampling frequency of the data . Currently only 500 Hz , 1 kHz , 2 kHz , 10 kHz , and 30 kHz sampaling frequencies are supported . inputUnits : The unit for the recorded data . Most data acquisition systems save the data in units of \u00b5 V . TDT units are V . The supported units are V , mV , uV or nV . savedDataPath : The full path ( excluding the extension ) of the saved file . Example 1 ( Mac ): matrixToNSx ( myData , 30000 , 'uv' , '/Desktop/newConvertedFile' ); In the example above, the data matrix myData recorded at 30kHz will be saved on the Desktop ( Mac style path ) as newConvertedFile . ns5 file . Example 2 ( PC ): matrixToNSx ( myData , 30000 , 'uv' , 'C:\\Data\\newConvertedFile' ); In the example above, the data matrix myData recorded at 30kHz will be saved C : \\ Data folder as newConvertedFile . ns5 file . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"matrixToNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/mergeNSxNEV.m/","text":"mergeNSxNEV \u00b6 mergeNSxNEV ( filename1 , filename2 ) This function loads two NSx and NEV files and it will combine them together into one file . The resulting file will be saved as new NSx and NEV files onto the disk . To combine two NSx and NEV files into indivual NSx and NEV variables in MATLAB see combineNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : mergeNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and merges them into a single file called firstrecording001 - combined . ns2 and firstrecording001 - combined . nev . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 2.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release 1.2 . 2.0 : August 3 , 2016 - Fixed a bug that resulted in a crash if one of two NEV files weren 't available . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"mergeNSxNEV"},{"location":"reference/lib/NPMK/NSx%20Utilities/mergeNSxNEV.m/#mergensxnev","text":"mergeNSxNEV ( filename1 , filename2 ) This function loads two NSx and NEV files and it will combine them together into one file . The resulting file will be saved as new NSx and NEV files onto the disk . To combine two NSx and NEV files into indivual NSx and NEV variables in MATLAB see combineNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : mergeNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and merges them into a single file called firstrecording001 - combined . ns2 and firstrecording001 - combined . nev . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.2 . 2.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release 1.2 . 2.0 : August 3 , 2016 - Fixed a bug that resulted in a crash if one of two NEV files weren 't available . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"mergeNSxNEV"},{"location":"reference/lib/NPMK/NSx%20Utilities/mergeNSxNEVSeries.m/","text":"mergeNSxNEVSeries \u00b6 mergeNSxNEV () This function loads two NSx and NEV files and it will combine them together into one file . The resulting file will be saved as new NSx and NEV files onto the disk . To combine two NSx and NEV files into indivual NSx and NEV variables in MATLAB see combineNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : mergeNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and merges them into a single file called firstrecording001 - combined . ns2 and firstrecording001 - combined . nev . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 March 31 , 2014 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"mergeNSxNEVSeries"},{"location":"reference/lib/NPMK/NSx%20Utilities/mergeNSxNEVSeries.m/#mergensxnevseries","text":"mergeNSxNEV () This function loads two NSx and NEV files and it will combine them together into one file . The resulting file will be saved as new NSx and NEV files onto the disk . To combine two NSx and NEV files into indivual NSx and NEV variables in MATLAB see combineNSxNEV . The time difference between the two sets of recordings is removed . To determine the time differnce between the two data files , use NSx . MetaTags . DateTimeRaw or NEV . MetaTags . DateTimeRaw variables . filename1 : The name of the first NSx file . This input is optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) filename2 : The name of the second NSx file . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : mergeNSxNEV ( 'c:\\data\\saveddata1.ns5' , 'c:\\data\\saveddata2.ns5' ); The above example reads the two files ( full path needed ) c : \\ data \\ saveddata1 . ns5 and c : \\ data \\ saveddata2 . ns5 and their corresponding NEV files ( saveddata1 . nev and saveddata2 . nev ) in the same folder and merges them into a single file called firstrecording001 - combined . ns2 and firstrecording001 - combined . nev . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 March 31 , 2014 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"mergeNSxNEVSeries"},{"location":"reference/lib/NPMK/NSx%20Utilities/openNSxHL.m/","text":"openNSxHL \u00b6 openNSxHL Opens and reads an NSx file without the header information and returns the binary data . This can be used for specific applications that require this type of data , e . g . Klusters . Works with File Spec 2.1 , 2.2 and 2.3 . It does not support pauses at this time . Use OUTPUT = openNSx ( fname ) All input arguments are optional . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : Contains the binary data . Example 1 : openNSxHL ( 'c:\\data\\sample.ns5' ); In the example above , the file c : \\ data \\ sample . ns5 will be opened and the data will be read and output through variable OUTPUT . Example 2 : openNSxHL ; In the example above , the file user will be prompted for the file . The selected file will be opened and the data will be read and output through variable OUTPUT . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : June 16 , 2017 - Pads the data with zeros when the beginning timestamp is not 0. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSxHL"},{"location":"reference/lib/NPMK/NSx%20Utilities/openNSxHL.m/#opennsxhl","text":"openNSxHL Opens and reads an NSx file without the header information and returns the binary data . This can be used for specific applications that require this type of data , e . g . Klusters . Works with File Spec 2.1 , 2.2 and 2.3 . It does not support pauses at this time . Use OUTPUT = openNSx ( fname ) All input arguments are optional . fname : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . OUTPUT : Contains the binary data . Example 1 : openNSxHL ( 'c:\\data\\sample.ns5' ); In the example above , the file c : \\ data \\ sample . ns5 will be opened and the data will be read and output through variable OUTPUT . Example 2 : openNSxHL ; In the example above , the file user will be prompted for the file . The selected file will be opened and the data will be read and output through variable OUTPUT . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : June 16 , 2017 - Pads the data with zeros when the beginning timestamp is not 0. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openNSxHL"},{"location":"reference/lib/NPMK/NSx%20Utilities/plotAverageWaveforms.m/","text":"plotAverageWaveforms \u00b6 plotAverageWaveforms Plots average waveforms for all channels and specified units across the array . It will prompt for a CMP file to map each channel to its electrode representation . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use plotAverageWaveforms ( NEV , units ) NOTE : All input arguments are optional . Input arguments may be in any order . NEV : NEV structure containing all waveforms . DEFAULT : Will prompt for NEV . 'units' : Specify the units to plot ( i . e . 2 or 0 : 5 for all ). DEFAULT : will plot all units . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( NEV , 0 : 3 ); In the example above, the waveforms in the NEV structure coming from units 0 through 3 will be plotted . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 2.1 . 0.0","title":"plotAverageWaveforms"},{"location":"reference/lib/NPMK/NSx%20Utilities/plotAverageWaveforms.m/#plotaveragewaveforms","text":"plotAverageWaveforms Plots average waveforms for all channels and specified units across the array . It will prompt for a CMP file to map each channel to its electrode representation . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use plotAverageWaveforms ( NEV , units ) NOTE : All input arguments are optional . Input arguments may be in any order . NEV : NEV structure containing all waveforms . DEFAULT : Will prompt for NEV . 'units' : Specify the units to plot ( i . e . 2 or 0 : 5 for all ). DEFAULT : will plot all units . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% USAGE EXAMPLE : openNEV ( NEV , 0 : 3 ); In the example above, the waveforms in the NEV structure coming from units 0 through 3 will be plotted . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Salt Lake City , UT Version 2.1 . 0.0","title":"plotAverageWaveforms"},{"location":"reference/lib/NPMK/NSx%20Utilities/removeNSxData.m/","text":"removeNSxData \u00b6 removeNSxData ( timestamps , filename ) This function removes chunks of data given in a 2 - column timestamps variable from a NSx file and then saves it as another NSx . This is useful when removing useless data from the file to decrease the size of the NSx file without modifying the file timestamps . The file size only changes when the NSx file is compressed . timestamps : This variable contains beginning and ending timestamps of the data that need to be removed from the NSx file . The format is : [ BegTimeStamp1 EndTimeStamp1 BegTimeStamp2 EndTimeStamp2 BegTimeStamp3 EndTimeStamp3 ... ... BegTimeStampN EndTimeStampN ] The data in the NSx between the pairs of timestamps will be removed and set to 0. ( REQUIRED ) filename : The name of the NSx file to be used . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : removeNSxData ([ 100 , 600 ; 1000 , 2000 ], 'c:\\datafile\\sampleNSx.ns5' ) In the example above , the timestamps between 100 : 600 and 1000 : 2000 will be removed from the file sampleNSx . ns5 and the resulting NSx will be saved in sampleNSx_chunked . ns5 file . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 1.0","title":"removeNSxData"},{"location":"reference/lib/NPMK/NSx%20Utilities/removeNSxData.m/#removensxdata","text":"removeNSxData ( timestamps , filename ) This function removes chunks of data given in a 2 - column timestamps variable from a NSx file and then saves it as another NSx . This is useful when removing useless data from the file to decrease the size of the NSx file without modifying the file timestamps . The file size only changes when the NSx file is compressed . timestamps : This variable contains beginning and ending timestamps of the data that need to be removed from the NSx file . The format is : [ BegTimeStamp1 EndTimeStamp1 BegTimeStamp2 EndTimeStamp2 BegTimeStamp3 EndTimeStamp3 ... ... BegTimeStampN EndTimeStampN ] The data in the NSx between the pairs of timestamps will be removed and set to 0. ( REQUIRED ) filename : The name of the NSx file to be used . This input is also optional . In its absense , a dialog will open and will prompt the user to select an NSx file . ( OPTIONAL ) Example : removeNSxData ([ 100 , 600 ; 1000 , 2000 ], 'c:\\datafile\\sampleNSx.ns5' ) In the example above , the timestamps between 100 : 600 and 1000 : 2000 will be removed from the file sampleNSx . ns5 and the resulting NSx will be saved in sampleNSx_chunked . ns5 file . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 1.0","title":"removeNSxData"},{"location":"reference/lib/NPMK/NSx%20Utilities/rethresholdNSx.m/","text":"rethresholdNSx \u00b6 rethresholdNSx Opens a NEV file and rethresholds it . It outputs a NEV structure into MATLAB . This version currently does not save a new NEV file . All input arguments are optional . Input arguments must be in the following order : NSx : The data structure holding the channel information Threshold : The threshold value in \u00b5 V . This can be a positive or negative value . DEFAULT : Will automatically set threshold to - 65 \u00b5 V . FilterFreq : The high - pass filter high - pass corner frequency . For example , if the filter is set to 250 then the signal will first get high - pass filtered at 250 Hz before getting rethrholded . DEFAULT : Will automatically high - pass filter signal at 250 Hz . Example : NEV = rethresholdNSx ( NSx , - 85 , 150 ); In the example above , the NSx structure will be high - pass filtered at 150 Hz and then rethresholded at - 85 \u00b5 V . All new waveformes will be saved in a NEV structure and will get output to MATLAB . NEV = rethresholdNSx ; In the example above , the user will be propted to choose a NSx file then the signal will get high - pass filtered at 150 Hz and then rethresholded at - 85 \u00b5 V . All new waveformes will be saved in a NEV structure and will get output to MATLAB . Kian Torab Blackrock Microsystems kian @ blackrockmicro . com Version 1.0 . 0.0","title":"rethresholdNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/rethresholdNSx.m/#rethresholdnsx","text":"rethresholdNSx Opens a NEV file and rethresholds it . It outputs a NEV structure into MATLAB . This version currently does not save a new NEV file . All input arguments are optional . Input arguments must be in the following order : NSx : The data structure holding the channel information Threshold : The threshold value in \u00b5 V . This can be a positive or negative value . DEFAULT : Will automatically set threshold to - 65 \u00b5 V . FilterFreq : The high - pass filter high - pass corner frequency . For example , if the filter is set to 250 then the signal will first get high - pass filtered at 250 Hz before getting rethrholded . DEFAULT : Will automatically high - pass filter signal at 250 Hz . Example : NEV = rethresholdNSx ( NSx , - 85 , 150 ); In the example above , the NSx structure will be high - pass filtered at 150 Hz and then rethresholded at - 85 \u00b5 V . All new waveformes will be saved in a NEV structure and will get output to MATLAB . NEV = rethresholdNSx ; In the example above , the user will be propted to choose a NSx file then the signal will get high - pass filtered at 150 Hz and then rethresholded at - 85 \u00b5 V . All new waveformes will be saved in a NEV structure and will get output to MATLAB . Kian Torab Blackrock Microsystems kian @ blackrockmicro . com Version 1.0 . 0.0","title":"rethresholdNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/saveChNSx.m/","text":"saveChNSx \u00b6 saveNSx Saves a given continuous NSx file and saves a subset of the channels in the given file into a new NSx file . Ths NSx file has to be opened with openNSx version 5.1 . 1.0 or later . All input arguments are optional . Input arguments can be in any order . NSx : The data structure holding the channel information fname : Name of the file to be saved . If the fname is omitted the program will automaticallyl save the file using the original file name with - mod added to the end of the file . DEFAULT : Will automatically choose the name . reset : If argument 'reset' is passed to the function then the channel IDs are reset . For example , when reading channels 2 , 5 , and 9 only , normally the file will indicate that the newly saved file will contains channels 2 , 5 , and 9. If 'reset' is used , then the file will labels those channels as 1 , 2 and 3 respectively . This is a requirement for OFS compatibility when a tetrode file is loaded . DEFAULT : The channel labels are not reset . Example : saveChNSx ( 'c:\\data\\sample.ns5' , [ 1 , 5 : 9 ], 'reset' ); In the example above , the file c : \\ data \\ sample . ns5 will be opened and channels 1 , 5 , 6 , 7 , 8 , 9 out of all the channels in this file will be saved as a new file . If the new file already exists then the user will be prompted if the new file should be overwritten or not . The new file will label the channels as 1 , 2 , 3 , 4 , 5 , and 6. Kian Torab Blackrock Microsystems kian @ blackrockmicro . com Version 2.1 . 0.1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 2.1 . 0.1 : - Added the flag 'reset' as an optional argument to OFS compatibility .. 2.1 . 1.0 : - Fixed the \"numberic\" bug . - Fixed saved file name bug . - Fixed other reading bugs . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveChNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/saveChNSx.m/#savechnsx","text":"saveNSx Saves a given continuous NSx file and saves a subset of the channels in the given file into a new NSx file . Ths NSx file has to be opened with openNSx version 5.1 . 1.0 or later . All input arguments are optional . Input arguments can be in any order . NSx : The data structure holding the channel information fname : Name of the file to be saved . If the fname is omitted the program will automaticallyl save the file using the original file name with - mod added to the end of the file . DEFAULT : Will automatically choose the name . reset : If argument 'reset' is passed to the function then the channel IDs are reset . For example , when reading channels 2 , 5 , and 9 only , normally the file will indicate that the newly saved file will contains channels 2 , 5 , and 9. If 'reset' is used , then the file will labels those channels as 1 , 2 and 3 respectively . This is a requirement for OFS compatibility when a tetrode file is loaded . DEFAULT : The channel labels are not reset . Example : saveChNSx ( 'c:\\data\\sample.ns5' , [ 1 , 5 : 9 ], 'reset' ); In the example above , the file c : \\ data \\ sample . ns5 will be opened and channels 1 , 5 , 6 , 7 , 8 , 9 out of all the channels in this file will be saved as a new file . If the new file already exists then the user will be prompted if the new file should be overwritten or not . The new file will label the channels as 1 , 2 , 3 , 4 , 5 , and 6. Kian Torab Blackrock Microsystems kian @ blackrockmicro . com Version 2.1 . 0.1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 2.1 . 0.1 : - Added the flag 'reset' as an optional argument to OFS compatibility .. 2.1 . 1.0 : - Fixed the \"numberic\" bug . - Fixed saved file name bug . - Fixed other reading bugs . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveChNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/saveNSx.m/","text":"saveNSx \u00b6 Save an .NSx file from an NSx structure (gained by using openNSx) Works with file spec 2.3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use : saveNSx ( NSx , optionalinputarguments ) NSx : The NSx data structure . All arguments below are optional : Filename : A complete filepath for the output file . Default : CurrentFilename - Modified . NSx","title":"saveNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/saveNSx.m/#savensx","text":"Save an .NSx file from an NSx structure (gained by using openNSx) Works with file spec 2.3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Use : saveNSx ( NSx , optionalinputarguments ) NSx : The NSx data structure . All arguments below are optional : Filename : A complete filepath for the output file . Default : CurrentFilename - Modified . NSx","title":"saveNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/separatePausedNSx.m/","text":"separatePausedNSx \u00b6 separatePausedNsx Obsoleted. Use splitNSxPauses instead.","title":"separatePausedNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/separatePausedNSx.m/#separatepausednsx","text":"separatePausedNsx Obsoleted. Use splitNSxPauses instead.","title":"separatePausedNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/separatePausedNSx_old.m/","text":"separatePausedNSx_old \u00b6 separatePausedNsx Saves paused data segments from a single NSx file as individual NSx files separatePausedNSx ( FILENAME ) where FILENAME has N paused segments will create N individual files with the same extension named FILENAME - 1 , FILENAME - 2 , ... , FILENAME-N. separatePausedFiles without any input arguments opens a UIgetfile to select the NSx file to separate Brett Dowden bdowden @ blackrockmicro . com Nick Halper nhalper @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release 1.1 . 0.0 : - Fixed a broken function that dependent on a non - existant saveNEV script . 1.2 . 0.0 : - Corrected NSx_out . MetaTags . Filename = [ NSx . MetaTags . Filename ( 1 : end ) '-p' sprintf ( '%03d' , i ) NSx . MetaTags . FileExt ] which was incorrectly removing the last 4 characters of the filename in an attempt to remove the extension . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"separatePausedNSx_old"},{"location":"reference/lib/NPMK/NSx%20Utilities/separatePausedNSx_old.m/#separatepausednsx_old","text":"separatePausedNsx Saves paused data segments from a single NSx file as individual NSx files separatePausedNSx ( FILENAME ) where FILENAME has N paused segments will create N individual files with the same extension named FILENAME - 1 , FILENAME - 2 , ... , FILENAME-N. separatePausedFiles without any input arguments opens a UIgetfile to select the NSx file to separate Brett Dowden bdowden @ blackrockmicro . com Nick Halper nhalper @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : Initial release 1.1 . 0.0 : - Fixed a broken function that dependent on a non - existant saveNEV script . 1.2 . 0.0 : - Corrected NSx_out . MetaTags . Filename = [ NSx . MetaTags . Filename ( 1 : end ) '-p' sprintf ( '%03d' , i ) NSx . MetaTags . FileExt ] which was incorrectly removing the last 4 characters of the filename in an attempt to remove the extension . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"separatePausedNSx_old"},{"location":"reference/lib/NPMK/NSx%20Utilities/splitNSx.m/","text":"splitNSx \u00b6 splitNSx Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( splitCount ) All input arguments are optional . Input arguments can be in any order . splitCount : Defines the number of splits . DEFAULT : Splits the file in 2 pieces . Example 1 : splitNSx ( 4 ); In the example above , the user will be prompted to select a file . The loaded file will be split in 4 samller files . For example , if the file is 1 hour long then it will be split into four 15 - minute files . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/splitNSx.m/#splitnsx","text":"splitNSx Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( splitCount ) All input arguments are optional . Input arguments can be in any order . splitCount : Defines the number of splits . DEFAULT : Splits the file in 2 pieces . Example 1 : splitNSx ( 4 ); In the example above , the user will be prompted to select a file . The loaded file will be split in 4 samller files . For example , if the file is 1 hour long then it will be split into four 15 - minute files . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNSx"},{"location":"reference/lib/NPMK/NSx%20Utilities/splitNSxPauses.m/","text":"splitNSxPauses \u00b6 splitNSxPauses Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( fileName ) All input arguments are optional . Input arguments can be in any order . fileName : File name of the file that needs to be split . DEFAULT : The user will be prompted to select a file . Example 1 : splitNSx ( 'C:\\Datafolder\\mydata.ns5' ); In the example above , the file C : \\ Datafolder \\ mydata . ns5 will be opened . The loaded file will be split in samller files representing its paused sub - segments . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNSxPauses"},{"location":"reference/lib/NPMK/NSx%20Utilities/splitNSxPauses.m/#splitnsxpauses","text":"splitNSxPauses Opens and splits an NSx file in smaller pieces , timewise . Use splitNSx ( fileName ) All input arguments are optional . Input arguments can be in any order . fileName : File name of the file that needs to be split . DEFAULT : The user will be prompted to select a file . Example 1 : splitNSx ( 'C:\\Datafolder\\mydata.ns5' ); In the example above , the file C : \\ Datafolder \\ mydata . ns5 will be opened . The loaded file will be split in samller files representing its paused sub - segments . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNSxPauses"},{"location":"reference/lib/NPMK/NTrode%20Utilities/ntrodeGroups.m/","text":"ntrodeGroups \u00b6 ntrodeGroups This script takes in a CCF file and displays the information on the ntrode groups within the data file . ccf : Pass the CCF of interest . If no CCF is passed , the user will be prompted to choose a CCF file . DEFAULT : Will open Open File UI . Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.1.0.0","title":"ntrodeGroups"},{"location":"reference/lib/NPMK/NTrode%20Utilities/ntrodeGroups.m/#ntrodegroups","text":"ntrodeGroups This script takes in a CCF file and displays the information on the ntrode groups within the data file . ccf : Pass the CCF of interest . If no CCF is passed , the user will be prompted to choose a CCF file . DEFAULT : Will open Open File UI . Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.1.0.0","title":"ntrodeGroups"},{"location":"reference/lib/NPMK/NTrode%20Utilities/saveNEVTetrodes.m/","text":"saveNEVTetrodes \u00b6 saveNEVTetrodes Opens saves a new NEV file and splits it into smaller NEV files containing only the tetrodes according to the associated CCF file . The CCF file should have the same name as the data file . NEVFullFilename : The full path to the NEV to be opened . DEFAULT : If the filename is not provided , the user will be prompted to select a file . Use saveNEVTetrodes ( NEVFullFilename ) Example : saveNEVTetrodes ( 'c:\\datafolder\\datafile.nev' ); The function will open datafile.nev and datafile.ccf and based on the tetrode information saved in datafile . ccf , it will split datafile . nev into smaller chunks that will only contain channels associated to that particular tetrode . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveNEVTetrodes"},{"location":"reference/lib/NPMK/NTrode%20Utilities/saveNEVTetrodes.m/#savenevtetrodes","text":"saveNEVTetrodes Opens saves a new NEV file and splits it into smaller NEV files containing only the tetrodes according to the associated CCF file . The CCF file should have the same name as the data file . NEVFullFilename : The full path to the NEV to be opened . DEFAULT : If the filename is not provided , the user will be prompted to select a file . Use saveNEVTetrodes ( NEVFullFilename ) Example : saveNEVTetrodes ( 'c:\\datafolder\\datafile.nev' ); The function will open datafile.nev and datafile.ccf and based on the tetrode information saved in datafile . ccf , it will split datafile . nev into smaller chunks that will only contain channels associated to that particular tetrode . Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems Version 1.0 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"saveNEVTetrodes"},{"location":"reference/lib/NPMK/NTrode%20Utilities/splitNEVNTrode.m/","text":"splitNEVNTrode \u00b6 splitNEVNTrode Opens and splits an NEV file based on its NTrode groups . It depends on openCCF file . Use splitNEVNTrode This function does not take any inputs . Example 1 : splitNEVNTrode ; In the example above , the user will be prompted to select a CCF file first . The CCF contains the ntrode grouping infromation . Then the user will be prompted to select a NEV file . The script will then split the NEV file into smaller NEV files containing channels in given ntrode groups . For example , if ntrode group one consists of channels 1 , 3 , 5 , and 12 , then using splitNEVNTrode will split the file into a smaller NEV files that contains those channels only . If there are multiple ntrodes then the files will split into multiple smaller files , equal in number of the ntrode groups . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : January 18 , 2016 - Initial release . 1.1 . 0.0 : October 10 , 2016 - Saman Hagh Gooie - Bug fixes with file loading - Fixed the file extension used for saving %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNEVNTrode"},{"location":"reference/lib/NPMK/NTrode%20Utilities/splitNEVNTrode.m/#splitnevntrode","text":"splitNEVNTrode Opens and splits an NEV file based on its NTrode groups . It depends on openCCF file . Use splitNEVNTrode This function does not take any inputs . Example 1 : splitNEVNTrode ; In the example above , the user will be prompted to select a CCF file first . The CCF contains the ntrode grouping infromation . Then the user will be prompted to select a NEV file . The script will then split the NEV file into smaller NEV files containing channels in given ntrode groups . For example , if ntrode group one consists of channels 1 , 3 , 5 , and 12 , then using splitNEVNTrode will split the file into a smaller NEV files that contains those channels only . If there are multiple ntrodes then the files will split into multiple smaller files , equal in number of the ntrode groups . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Kian Torab support @ blackrockmicro . com Blackrock Microsystems %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : January 18 , 2016 - Initial release . 1.1 . 0.0 : October 10 , 2016 - Saman Hagh Gooie - Bug fixes with file loading - Fixed the file extension used for saving %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"splitNEVNTrode"},{"location":"reference/lib/NPMK/NTrode%20Utilities/splitNSxNTrode.m/","text":"splitNSxNTrode \u00b6 splitNSxNTrode Opens and splits an NSx file based on its NTrode groups . It depends on openCCF file . Use splitNSxNTrode This function does not take any inputs . Example 1 : splitNSxNTrode ; In the example above , the user will be prompted to select a CCF file first . The CCF contains the ntrode grouping infromation . Then the user will be prompted to select a NSx file . The script will then split the NSx file into smaller NSx files containing channels in given ntrode groups . For example , if ntrode group one consists of channels 1 , 3 , 5 , and 12 , then using splitNSxNTrode will split the file into a smaller NSx file that contains those channels only . If there are multiple ntrodes then the files will split into multiple smaller files , equal in number of the ntrode groups . Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.0.1.0","title":"splitNSxNTrode"},{"location":"reference/lib/NPMK/NTrode%20Utilities/splitNSxNTrode.m/#splitnsxntrode","text":"splitNSxNTrode Opens and splits an NSx file based on its NTrode groups . It depends on openCCF file . Use splitNSxNTrode This function does not take any inputs . Example 1 : splitNSxNTrode ; In the example above , the user will be prompted to select a CCF file first . The CCF contains the ntrode grouping infromation . Then the user will be prompted to select a NSx file . The script will then split the NSx file into smaller NSx files containing channels in given ntrode groups . For example , if ntrode group one consists of channels 1 , 3 , 5 , and 12 , then using splitNSxNTrode will split the file into a smaller NSx file that contains those channels only . If there are multiple ntrodes then the files will split into multiple smaller files , equal in number of the ntrode groups . Kian Torab ktorab @blackrockmicro . com Blackrock Microsystems Version 1.0.1.0","title":"splitNSxNTrode"},{"location":"reference/lib/NPMK/Other%20tools/edgeDetect.m/","text":"edgeDetect \u00b6 edgeDetect Detects rising or falling edges of a signal whenever the signal crosses the threshold . Use timestamps = edgeDetect ( signal , threshold , type ) Variables fname and threshold are optional . signal : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . threshold : The value used for threshold crossings . This function will detect when the signal crosses this value . DEFAULT : It will automatically choose the threshold at 80 % of the maximum value in the signal . type : Contains the points in the signal where the threshold crossing occurs . DEFAULT : It will find the rising edges . Example 1 : timestamps = edgeDetect ( signal , 1000 ); In the example above , the points where signal crosses value 1000 ( rising edge ) is detected and returned in variable timestamps . timestamps = edgeDetect ( signal , 1000 , 'falling' ); In the example above , the points where signal crosses value 1000 ( falling edge ) is detected and returned in variable timestamps . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : - Added automatic edge detection . - Updated help . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Validations","title":"edgeDetect"},{"location":"reference/lib/NPMK/Other%20tools/edgeDetect.m/#edgedetect","text":"edgeDetect Detects rising or falling edges of a signal whenever the signal crosses the threshold . Use timestamps = edgeDetect ( signal , threshold , type ) Variables fname and threshold are optional . signal : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . threshold : The value used for threshold crossings . This function will detect when the signal crosses this value . DEFAULT : It will automatically choose the threshold at 80 % of the maximum value in the signal . type : Contains the points in the signal where the threshold crossing occurs . DEFAULT : It will find the rising edges . Example 1 : timestamps = edgeDetect ( signal , 1000 ); In the example above , the points where signal crosses value 1000 ( rising edge ) is detected and returned in variable timestamps . timestamps = edgeDetect ( signal , 1000 , 'falling' ); In the example above , the points where signal crosses value 1000 ( falling edge ) is detected and returned in variable timestamps . Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : - Added automatic edge detection . - Updated help . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Validations","title":"edgeDetect"},{"location":"reference/lib/NPMK/Other%20tools/kshuffle.m/","text":"kshuffle \u00b6 shuffledArray = kshuffle ( inputArray , DIM ) Shuffles a matrix by row or column dimension . Kian Torab kian . torab @utah . edu Department of Bioengineering University of Utah Version 1.1.0 - March 4 , 2010","title":"kshuffle"},{"location":"reference/lib/NPMK/Other%20tools/kshuffle.m/#kshuffle","text":"shuffledArray = kshuffle ( inputArray , DIM ) Shuffles a matrix by row or column dimension . Kian Torab kian . torab @utah . edu Department of Bioengineering University of Utah Version 1.1.0 - March 4 , 2010","title":"kshuffle"},{"location":"reference/lib/NPMK/Other%20tools/offline2Struct.m/","text":"offline2Struct \u00b6 Converts offline sorter variables into a structure for easy MATLAB manipulation Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems","title":"offline2Struct"},{"location":"reference/lib/NPMK/Other%20tools/offline2Struct.m/#offline2struct","text":"Converts offline sorter variables into a structure for easy MATLAB manipulation Kian Torab ktorab @ blackrockmicro . com Blackrock Microsystems","title":"offline2Struct"},{"location":"reference/lib/NPMK/Other%20tools/openCCF.m/","text":"openCCF \u00b6 openCCF This script reads a . ccf file and outputs it in a structure . filename : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . Channels 1 - 128 are neural channels Channels 129 - 144 are external analog inputs Channels 145 - 148 are external analog outpus Channels Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 2.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.2 . 3.0 : - Minor bug fix that led to a crash in certain cases . 1.2 . 4.0 : - Minor bug fix regarding passing a filename variable to the function . 2.0 . 0.0 : - Implemented XML CCF file format . 2.1 . 0.0 : - Fixed a bug in loading nTrode groups with a base of 0. 2.2 . 0.0 April 29 , 2020 - Fixed an error where N - Trodes with less than 4 members read an extra 1 as the extra non - existent members . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openCCF"},{"location":"reference/lib/NPMK/Other%20tools/openCCF.m/#openccf","text":"openCCF This script reads a . ccf file and outputs it in a structure . filename : Name of the file to be opened . If the fname is omitted the user will be prompted to select a file . DEFAULT : Will open Open File UI . Channels 1 - 128 are neural channels Channels 129 - 144 are external analog inputs Channels 145 - 148 are external analog outpus Channels Kian Torab kian @ blackrockmicro . com Blackrock Microsystems Version 2.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.2 . 3.0 : - Minor bug fix that led to a crash in certain cases . 1.2 . 4.0 : - Minor bug fix regarding passing a filename variable to the function . 2.0 . 0.0 : - Implemented XML CCF file format . 2.1 . 0.0 : - Fixed a bug in loading nTrode groups with a base of 0. 2.2 . 0.0 April 29 , 2020 - Fixed an error where N - Trodes with less than 4 members read an extra 1 as the extra non - existent members . %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"openCCF"},{"location":"reference/lib/NPMK/Other%20tools/parseCCF.m/","text":"parseCCF \u00b6 parseCCF Parses an XML CCF file . Nick Halper support @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : January 18 , 2016 - Kian Torab - Minor bug fix with file loading . 1.1 . 1.0 : January 19 , 2016 - Kian Torab - Added a progress bar . 1.1 . 2.0 : October 20 , 2016 - Saman Hagh - gooie - Fixed a invalid character bug . - Bug fixes with file loading %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"parseCCF"},{"location":"reference/lib/NPMK/Other%20tools/parseCCF.m/#parseccf","text":"parseCCF Parses an XML CCF file . Nick Halper support @ blackrockmicro . com Blackrock Microsystems Version 1.1 . 0.0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Version History 1.0 . 0.0 : - Initial release . 1.1 . 0.0 : January 18 , 2016 - Kian Torab - Minor bug fix with file loading . 1.1 . 1.0 : January 19 , 2016 - Kian Torab - Added a progress bar . 1.1 . 2.0 : October 20 , 2016 - Saman Hagh - gooie - Fixed a invalid character bug . - Bug fixes with file loading %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","title":"parseCCF"},{"location":"reference/lib/NPMK/Other%20tools/periEventPlot.m/","text":"periEventPlot \u00b6 periEventPlot is a script.","title":"periEventPlot"},{"location":"reference/lib/NPMK/Other%20tools/periEventPlot.m/#perieventplot","text":"periEventPlot is a script.","title":"periEventPlot"},{"location":"reference/lib/NPMK/Other%20tools/playSound.m/","text":"playSound \u00b6 Plays a predefined sound . Possible options are : failure abort gocue alert warning error done list - will list names for all the available sounds Example : playSound ( 'alert' ) Kian Torab kian . torab @utah . edu Department of Bioengineering University of Utah Version 1.2.0 - February 26 , 2010","title":"playSound"},{"location":"reference/lib/NPMK/Other%20tools/playSound.m/#playsound","text":"Plays a predefined sound . Possible options are : failure abort gocue alert warning error done list - will list names for all the available sounds Example : playSound ( 'alert' ) Kian Torab kian . torab @utah . edu Department of Bioengineering University of Utah Version 1.2.0 - February 26 , 2010","title":"playSound"},{"location":"reference/lib/sigTOOL/CORE/Edit/menu_CopyFigure.m/","text":"menu_CopyFigure \u00b6 menu_CopyFigure copies a figure to the clipboard Example menu_CopyFigure(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyFigure"},{"location":"reference/lib/sigTOOL/CORE/Edit/menu_CopyFigure.m/#menu_copyfigure","text":"menu_CopyFigure copies a figure to the clipboard Example menu_CopyFigure(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyFigure"},{"location":"reference/lib/sigTOOL/CORE/File/menu_BatchProcess.m/","text":"menu_BatchProcess \u00b6 menu_BatchProcess implements batch processing of data files in sigTOOL Example: menu_BatchProcess(hObject , EventData) standard menu callback from sigTOOL GUI menu_BatchProcess may also be called from the command line without any input arguments (but requires jvm) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"menu_BatchProcess"},{"location":"reference/lib/sigTOOL/CORE/File/menu_BatchProcess.m/#menu_batchprocess","text":"menu_BatchProcess implements batch processing of data files in sigTOOL Example: menu_BatchProcess(hObject , EventData) standard menu callback from sigTOOL GUI menu_BatchProcess may also be called from the command line without any input arguments (but requires jvm) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"menu_BatchProcess"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Preferences.m/","text":"menu_Preferences \u00b6 menu_Preferences edits the sigTOOL preferences Example: menu_Preferences(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_Preferences"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Preferences.m/#menu_preferences","text":"menu_Preferences edits the sigTOOL preferences Example: menu_Preferences(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_Preferences"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aSaveAs.m/","text":"menu_aSaveAs \u00b6 mmenu_aSaveAs saves a new sigTOOL data file Example: menu_aSaveAs(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aSaveAs"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aSaveAs.m/#menu_asaveas","text":"mmenu_aSaveAs saves a new sigTOOL data file Example: menu_aSaveAs(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aSaveAs"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aaOpenResult.m/","text":"menu_aaOpenResult \u00b6 Toolboxes required : None Author : Malcolm Lidierth 10 / 09 Copyright \u00a9 The Author & King ' s College London 2009- Acknowledgements : Revisions : 08 . 08 Support for multiple files","title":"menu_aaOpenResult"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aaOpenResult.m/#menu_aaopenresult","text":"Toolboxes required : None Author : Malcolm Lidierth 10 / 09 Copyright \u00a9 The Author & King ' s College London 2009- Acknowledgements : Revisions : 08 . 08 Support for multiple files","title":"menu_aaOpenResult"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aaaOpen.m/","text":"menu_aaaOpen \u00b6 menu_aaaOpen is the sigTOOL menu gateway to the scOpen function scOpen is called to load data from a kcl file into sigTOOL using memory mapping via the MATLAB memmapfile function Examples : menu_aaaOpen ( 0 ) passes back details needed to populate the File / Open menu item in the sigTOOL main figure window menu_aaaOpen () with no input arguments invokes uigetfile to open a sigTOOL kcl file . The function then populates the figure window with data from the opened file or , if the figure is already populated , invokes another instance of sigTOOL . This is the format of the call to menu_aaaOpen from the sigTOOL menu bar ( i . e . the menu item 's ' callback ') The sigTOOL channel array is placed in the figure 's application data area in a field labeled 'channels' . See also sigTOOL , scOpen , memmapfile , uigetfile Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006- Acknowledgements : Revisions : 08.08 Support for multiple files","title":"menu_aaaOpen"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aaaOpen.m/#menu_aaaopen","text":"menu_aaaOpen is the sigTOOL menu gateway to the scOpen function scOpen is called to load data from a kcl file into sigTOOL using memory mapping via the MATLAB memmapfile function Examples : menu_aaaOpen ( 0 ) passes back details needed to populate the File / Open menu item in the sigTOOL main figure window menu_aaaOpen () with no input arguments invokes uigetfile to open a sigTOOL kcl file . The function then populates the figure window with data from the opened file or , if the figure is already populated , invokes another instance of sigTOOL . This is the format of the call to menu_aaaOpen from the sigTOOL menu bar ( i . e . the menu item 's ' callback ') The sigTOOL channel array is placed in the figure 's application data area in a field labeled 'channels' . See also sigTOOL , scOpen , memmapfile , uigetfile Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006- Acknowledgements : Revisions : 08.08 Support for multiple files","title":"menu_aaaOpen"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aabNew.m/","text":"menu_aabNew \u00b6 menu_aabNew creates a new sigTOOL data file Example: menu_aabNew(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aabNew"},{"location":"reference/lib/sigTOOL/CORE/File/menu_aabNew.m/#menu_aabnew","text":"menu_aabNew creates a new sigTOOL data file Example: menu_aabNew(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aabNew"},{"location":"reference/lib/sigTOOL/CORE/File/group_FastOpenSave/menu_FastOpen.m/","text":"menu_FastOpen \u00b6 menu_FastOpen is a function . varargout = menu_FastOpen ( varargin )","title":"menu_FastOpen"},{"location":"reference/lib/sigTOOL/CORE/File/group_FastOpenSave/menu_FastOpen.m/#menu_fastopen","text":"menu_FastOpen is a function . varargout = menu_FastOpen ( varargin )","title":"menu_FastOpen"},{"location":"reference/lib/sigTOOL/CORE/File/group_FastOpenSave/menu_FastSave.m/","text":"menu_FastSave \u00b6 menu_FastSave menu callback to invoke the sigTOOL scFastSave Function","title":"menu_FastSave"},{"location":"reference/lib/sigTOOL/CORE/File/group_FastOpenSave/menu_FastSave.m/#menu_fastsave","text":"menu_FastSave menu callback to invoke the sigTOOL scFastSave Function","title":"menu_FastSave"},{"location":"reference/lib/sigTOOL/CORE/File/group_Info/menu_Information.m/","text":"menu_Information \u00b6 Toolboxes required: None ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/08 Copyright \u00a9 The Author & King's College London 2008 - ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_Information"},{"location":"reference/lib/sigTOOL/CORE/File/group_Info/menu_Information.m/#menu_information","text":"Toolboxes required: None ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/08 Copyright \u00a9 The Author & King's College London 2008 - ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_Information"},{"location":"reference/lib/sigTOOL/CORE/File/group_Info/menu_SourceInformation.m/","text":"menu_SourceInformation \u00b6 Toolboxes required: None ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_SourceInformation"},{"location":"reference/lib/sigTOOL/CORE/File/group_Info/menu_SourceInformation.m/#menu_sourceinformation","text":"Toolboxes required: None ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_SourceInformation"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_ClearHistory.m/","text":"menu_ClearHistory \u00b6 menu_ClearHistory clears the history entry for a sigTOOL data view Example: menu_ClearHistory(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_ClearHistory"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_ClearHistory.m/#menu_clearhistory","text":"menu_ClearHistory clears the history entry for a sigTOOL data view Example: menu_ClearHistory(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_ClearHistory"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_PauseRecording.m/","text":"menu_PauseRecording \u00b6 menu_PauseRecording pauses history recoding for a sigTOOL data view Example: menu_PauseRecording(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PauseRecording"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_PauseRecording.m/#menu_pauserecording","text":"menu_PauseRecording pauses history recoding for a sigTOOL data view Example: menu_PauseRecording(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PauseRecording"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_StartRecording.m/","text":"menu_StartRecording \u00b6 menu_StartRecording activates sigTOOL history logging Example: menu_StartRecording(hObject , EventData) standard menu callback menu_StartRecording sets the RecordFlag in the parent figure's application data area . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 . 07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_StartRecording"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_StartRecording.m/#menu_startrecording","text":"menu_StartRecording activates sigTOOL history logging Example: menu_StartRecording(hObject , EventData) standard menu callback menu_StartRecording sets the RecordFlag in the parent figure's application data area . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 . 07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_StartRecording"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_zSaveHistory.m/","text":"menu_zSaveHistory \u00b6 menu_zSaveHistory saves a sigTOOL history log to a MATLAB m - file Example: menu_zSaveHistory(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 . 07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_zSaveHistory"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/menu_zSaveHistory.m/#menu_zsavehistory","text":"menu_zSaveHistory saves a sigTOOL history log to a MATLAB m - file Example: menu_zSaveHistory(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 . 07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_zSaveHistory"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/private/StandardHeader.m/","text":"StandardHeader \u00b6 StandardHeader private function used in history recording Example: History=StandardHeader() returns a standard history header ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"StandardHeader"},{"location":"reference/lib/sigTOOL/CORE/File/group_jjjHistory/private/StandardHeader.m/#standardheader","text":"StandardHeader private function used in history recording Example: History=StandardHeader() returns a standard history header ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"StandardHeader"},{"location":"reference/lib/sigTOOL/CORE/File/group_zzzPrint/menu_Print.m/","text":"menu_Print \u00b6 menu_Print sigTOOL menu callback Example: menu_Print(hObject , EventData) standard callback This is a print function designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_Print"},{"location":"reference/lib/sigTOOL/CORE/File/group_zzzPrint/menu_Print.m/#menu_print","text":"menu_Print sigTOOL menu callback Example: menu_Print(hObject , EventData) standard callback This is a print function designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_Print"},{"location":"reference/lib/sigTOOL/CORE/File/group_zzzPrint/menu_PrintPreview.m/","text":"menu_PrintPreview \u00b6 menu_PrintPreview sigTOOL menu callback Example: menu_PrintPreview(hObject , EventData) standard callback This is a print preview function designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_PrintPreview"},{"location":"reference/lib/sigTOOL/CORE/File/group_zzzPrint/menu_PrintPreview.m/#menu_printpreview","text":"menu_PrintPreview sigTOOL menu callback Example: menu_PrintPreview(hObject , EventData) standard callback This is a print preview function designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_PrintPreview"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/menu_aaaExportToMATLAB.m/","text":"menu_aaaExportToMATLAB \u00b6 menu_ExportToMATLAB exports data to the MATLAB base workspace Example : menu_ExportToMATLAB ( hObject , EventData ) standadr menu callback Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_aaaExportToMATLAB"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/menu_aaaExportToMATLAB.m/#menu_aaaexporttomatlab","text":"menu_ExportToMATLAB exports data to the MATLAB base workspace Example : menu_ExportToMATLAB ( hObject , EventData ) standadr menu callback Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_aaaExportToMATLAB"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_Bitmaps/menu_ExportToBMP.m/","text":"menu_ExportToBMP \u00b6 menu_ExportToBMP sigTOOL menu callback: exports a bitmap image Example: menu_ExportToBMP(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToBMP"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_Bitmaps/menu_ExportToBMP.m/#menu_exporttobmp","text":"menu_ExportToBMP sigTOOL menu callback: exports a bitmap image Example: menu_ExportToBMP(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToBMP"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_Bitmaps/menu_ExportToTIF.m/","text":"menu_ExportToTIF \u00b6 menu_ExportToTIF sigTOOL menu callback: exports a tagged image Example: menu_ExportToTIF(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToTIF"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_Bitmaps/menu_ExportToTIF.m/#menu_exporttotif","text":"menu_ExportToTIF sigTOOL menu callback: exports a tagged image Example: menu_ExportToTIF(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToTIF"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToAdobeIllustrator.m/","text":"menu_ExportToAdobeIllustrator \u00b6 menu_ExportToAdobeIllustrator sigTOOL menu callback: exports a vector graphic Example: menu_ExportToAdobeIllustrator(hObject , EventData) standard callback Output is to a legacy Illustrator format (1988)which will need to be updated when loaded . This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToAdobeIllustrator"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToAdobeIllustrator.m/#menu_exporttoadobeillustrator","text":"menu_ExportToAdobeIllustrator sigTOOL menu callback: exports a vector graphic Example: menu_ExportToAdobeIllustrator(hObject , EventData) standard callback Output is to a legacy Illustrator format (1988)which will need to be updated when loaded . This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToAdobeIllustrator"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToAdobePDF.m/","text":"menu_ExportToAdobePDF \u00b6 menu_ExportToAdobePDF sigTOOL menu callback: exports a PDF format graphic Example: menu_ExportToAdobePDF(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToAdobePDF"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToAdobePDF.m/#menu_exporttoadobepdf","text":"menu_ExportToAdobePDF sigTOOL menu callback: exports a PDF format graphic Example: menu_ExportToAdobePDF(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToAdobePDF"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToEPS.m/","text":"menu_ExportToEPS \u00b6 menu_ExportToEPS sigTOOL menu callback: exports a EPS format graphic Example: menu_ExportToEPS(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToEPS"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Export/group_VectorFormats/menu_ExportToEPS.m/#menu_exporttoeps","text":"menu_ExportToEPS sigTOOL menu callback: exports a EPS format graphic Example: menu_ExportToEPS(hObject , EventData) standard callback This is a callback designed specifically for sigTOOL data views -------------------------------------------------------------------------- Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006 - --------------------------------------------------------------------------","title":"menu_ExportToEPS"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/menu_BatchImport.m/","text":"menu_BatchImport \u00b6 menu_BatchImport is a function . varargout = menu_BatchImport ( varargin )","title":"menu_BatchImport"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/menu_BatchImport.m/#menu_batchimport","text":"menu_BatchImport is a function . varargout = menu_BatchImport ( varargin )","title":"menu_BatchImport"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportMultiMedia.m/","text":"ImportMultiMedia \u00b6 ImportMultiMedia load various multimedia formats ( audio and video ) ImportMultiMedia is a Windows only function . It calls mmread , which in turn calls the Windows DirectX functions . Example : matfilename = ImportMultiMedia ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name or the generated sigTOOL data file mmread was written by Micah Richert and is available at : < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=8028&objectType=file\" > MATLAB Central ( LinkOut ) </ a > __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ImportMultiMedia"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportMultiMedia.m/#importmultimedia","text":"ImportMultiMedia load various multimedia formats ( audio and video ) ImportMultiMedia is a Windows only function . It calls mmread , which in turn calls the Windows DirectX functions . Example : matfilename = ImportMultiMedia ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name or the generated sigTOOL data file mmread was written by Micah Richert and is available at : < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=8028&objectType=file\" > MATLAB Central ( LinkOut ) </ a > __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ImportMultiMedia"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportMultiMediaMATLAB.m/","text":"ImportMultiMediaMATLAB \u00b6 ImportMultiMediaMATLAB load various multimedia formats ( video only ) Example : matfilename = ImportMultiMediaMATLAB ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name or the generated sigTOOL data file __________________________________________________________________________ Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King 's College London 2010- __________________________________________________________________________","title":"ImportMultiMediaMATLAB"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportMultiMediaMATLAB.m/#importmultimediamatlab","text":"ImportMultiMediaMATLAB load various multimedia formats ( video only ) Example : matfilename = ImportMultiMediaMATLAB ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name or the generated sigTOOL data file __________________________________________________________________________ Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King 's College London 2010- __________________________________________________________________________","title":"ImportMultiMediaMATLAB"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportWAV.m/","text":"ImportWAV \u00b6 ImportWAV load wav formats audio files Example : matfilename = ImportWAV ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name of the generated sigTOOL data file __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ImportWAV"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/ImportWAV.m/#importwav","text":"ImportWAV load wav formats audio files Example : matfilename = ImportWAV ( filename , targetpath ) Inputs : filename full path / filename of source targetpath target folder for output Output : matfilename name of the generated sigTOOL data file __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ImportWAV"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_ImportMultiMedia.m/","text":"menu_ImportMultiMedia \u00b6 menu_ImportMultiMedia sigTOOL gateway to Micah Richert's mmread function You may need to download these files from % <a href= \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=8028&objectType=file\" > LinkOut </a> Toolboxes required: Uses Windows DirectX - therefore Windows only Acknowledgements: This simply links to Micah Richert's code via ImportMultiMedia Revisions: Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006","title":"menu_ImportMultiMedia"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_ImportMultiMedia.m/#menu_importmultimedia","text":"menu_ImportMultiMedia sigTOOL gateway to Micah Richert's mmread function You may need to download these files from % <a href= \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=8028&objectType=file\" > LinkOut </a> Toolboxes required: Uses Windows DirectX - therefore Windows only Acknowledgements: This simply links to Micah Richert's code via ImportMultiMedia Revisions: Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006","title":"menu_ImportMultiMedia"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_ImportWAV.m/","text":"menu_ImportWAV \u00b6 menu_ImportWAV gateway to ImportWav from the sigTOOL GUI ImportWAV provides a platform-independent route to read Windows WAV files Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ImportWAV"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_ImportWAV.m/#menu_importwav","text":"menu_ImportWAV gateway to ImportWav from the sigTOOL GUI ImportWAV provides a platform-independent route to read Windows WAV files Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ImportWAV"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_aaaImportMultiMediaMATLAB.m/","text":"menu_aaaImportMultiMediaMATLAB \u00b6 menu_ImportMultiMediaMATLAB sigTOOL gateway Revisions: Author: Malcolm Lidierth 01/10 Copyright \u00a9 King\u0092s College London 2010-","title":"menu_aaaImportMultiMediaMATLAB"},{"location":"reference/lib/sigTOOL/CORE/File/menu_Import/group_MultiMedia%20Formats/menu_aaaImportMultiMediaMATLAB.m/#menu_aaaimportmultimediamatlab","text":"menu_ImportMultiMediaMATLAB sigTOOL gateway Revisions: Author: Malcolm Lidierth 01/10 Copyright \u00a9 King\u0092s College London 2010-","title":"menu_aaaImportMultiMediaMATLAB"},{"location":"reference/lib/sigTOOL/CORE/View/menu_DataViewHiRes.m/","text":"menu_DataViewHiRes \u00b6 Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_DataViewHiRes"},{"location":"reference/lib/sigTOOL/CORE/View/menu_DataViewHiRes.m/#menu_dataviewhires","text":"Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_DataViewHiRes"},{"location":"reference/lib/sigTOOL/CORE/View/menu_ToggleSmoothing.m/","text":"menu_ToggleSmoothing \u00b6 menu_ToggleSmoothing turns line smoothing on/off Example: menu_ToggleSmoothing(hObj , EventData) sigTOOL menu callback function See also: opengl Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 King\u0092s College London 2007 -------------------------------------------------------------------------- Acknowledgements: Revisions: 21 . 01 . 10 R2010a compatible","title":"menu_ToggleSmoothing"},{"location":"reference/lib/sigTOOL/CORE/View/menu_ToggleSmoothing.m/#menu_togglesmoothing","text":"menu_ToggleSmoothing turns line smoothing on/off Example: menu_ToggleSmoothing(hObj , EventData) sigTOOL menu callback function See also: opengl Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 King\u0092s College London 2007 -------------------------------------------------------------------------- Acknowledgements: Revisions: 21 . 01 . 10 R2010a compatible","title":"menu_ToggleSmoothing"},{"location":"reference/lib/sigTOOL/CORE/View/menu_ToggleText.m/","text":"menu_ToggleText \u00b6 Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ToggleText"},{"location":"reference/lib/sigTOOL/CORE/View/menu_ToggleText.m/#menu_toggletext","text":"Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ToggleText"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_Delete.m/","text":"menu_Delete \u00b6 menu_Delete deletes all cursors in sigTOOL Example: menu_Delete(hObject, EventData) standard menu callback __________________________________________________________________________ Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 __________________________________________________________________________","title":"menu_Delete"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_Delete.m/#menu_delete","text":"menu_Delete deletes all cursors in sigTOOL Example: menu_Delete(hObject, EventData) standard menu callback __________________________________________________________________________ Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 __________________________________________________________________________","title":"menu_Delete"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_LoadCursors.m/","text":"menu_LoadCursors \u00b6 menu_SaveCursors loads the cursor positions from a MAT file Example menu_LoadCursors ( hObject , EventData ) standard callback menu_LoadCursors loads the cursor positions of a sigTOOL data view from a MAT - file created by a prior call to menu_SaveCursors and creates those cursors . Any existing cursors with the same cursor number will be deleted ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"menu_LoadCursors"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_LoadCursors.m/#menu_loadcursors","text":"menu_SaveCursors loads the cursor positions from a MAT file Example menu_LoadCursors ( hObject , EventData ) standard callback menu_LoadCursors loads the cursor positions of a sigTOOL data view from a MAT - file created by a prior call to menu_SaveCursors and creates those cursors . Any existing cursors with the same cursor number will be deleted ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"menu_LoadCursors"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_SaveCursors.m/","text":"menu_SaveCursors \u00b6 menu_SaveCursors saves the cursor positions to a MAT file Example menu_SaveCursors(hObject , EventData) standard callback menu_SaveCursors saves the cursor positions of a sigTOOL data view to a MAT - file as a cell array ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"menu_SaveCursors"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_SaveCursors.m/#menu_savecursors","text":"menu_SaveCursors saves the cursor positions to a MAT file Example menu_SaveCursors(hObject , EventData) standard callback menu_SaveCursors saves the cursor positions of a sigTOOL data view to a MAT - file as a cell array ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"menu_SaveCursors"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_aaaNewVerticalCursor.m/","text":"menu_aaaNewVerticalCursor \u00b6 menu_aaaNewVerticalCursor inserts a new cursor Example: menu_aaaNewVerticalCursor(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aaaNewVerticalCursor"},{"location":"reference/lib/sigTOOL/CORE/sigTOOL%20Cursor%20Functions/menu_aaaNewVerticalCursor.m/#menu_aaanewverticalcursor","text":"menu_aaaNewVerticalCursor inserts a new cursor Example: menu_aaaNewVerticalCursor(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_aaaNewVerticalCursor"},{"location":"reference/lib/sigTOOL/CORE/utils/CopyObjects.m/","text":"CopyObjects \u00b6 CopyObjects makes the current axes handle the source for subsequent PasteObjects calls Example CopyObjects ( handle ) where handle is the handle of an axes . The handle is stored in a persistent variable by PasteObjects","title":"CopyObjects"},{"location":"reference/lib/sigTOOL/CORE/utils/CopyObjects.m/#copyobjects","text":"CopyObjects makes the current axes handle the source for subsequent PasteObjects calls Example CopyObjects ( handle ) where handle is the handle of an axes . The handle is stored in a persistent variable by PasteObjects","title":"CopyObjects"},{"location":"reference/lib/sigTOOL/CORE/utils/CurveFitting.m/","text":"CurveFitting \u00b6 CurveFitting is a script.","title":"CurveFitting"},{"location":"reference/lib/sigTOOL/CORE/utils/CurveFitting.m/#curvefitting","text":"CurveFitting is a script.","title":"CurveFitting"},{"location":"reference/lib/sigTOOL/CORE/utils/FirstRunMessage.m/","text":"FirstRunMessage \u00b6 FirstRunMessage generates the sigTOOL Welcome message Example: To invoke this function type sigTOOL('firstrun') at the MATLAB prompt ------------------------------------------------------------------------- Author: Malcolm Lidierth 05/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"FirstRunMessage"},{"location":"reference/lib/sigTOOL/CORE/utils/FirstRunMessage.m/#firstrunmessage","text":"FirstRunMessage generates the sigTOOL Welcome message Example: To invoke this function type sigTOOL('firstrun') at the MATLAB prompt ------------------------------------------------------------------------- Author: Malcolm Lidierth 05/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"FirstRunMessage"},{"location":"reference/lib/sigTOOL/CORE/utils/GetFit.m/","text":"GetFit \u00b6 GetFit copies the fit from an EytFit window to the sigTOOL result view Example: GetFit(hObject , EventData , target) callback from EzyFit 'Export to sigTOOL' uimenu item ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"GetFit"},{"location":"reference/lib/sigTOOL/CORE/utils/GetFit.m/#getfit","text":"GetFit copies the fit from an EytFit window to the sigTOOL result view Example: GetFit(hObject , EventData , target) callback from EzyFit 'Export to sigTOOL' uimenu item ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"GetFit"},{"location":"reference/lib/sigTOOL/CORE/utils/MATImportGeneratorGUI.m/","text":"MATImportGeneratorGUI \u00b6 MATImportGeneratorGUI is a function. MATImportGeneratorGUI(fhandle)","title":"MATImportGeneratorGUI"},{"location":"reference/lib/sigTOOL/CORE/utils/MATImportGeneratorGUI.m/#matimportgeneratorgui","text":"MATImportGeneratorGUI is a function. MATImportGeneratorGUI(fhandle)","title":"MATImportGeneratorGUI"},{"location":"reference/lib/sigTOOL/CORE/utils/PasteObjects.m/","text":"PasteObjects \u00b6 PASTEOBJECTS pastes the objects from one axes into another A call to PASTEOBJECTS should be preceded by a call to COPYOBJECTS Examples : PASTEOBJECTS ( SourceAxesHandle ) stores the source axes handle for the objects in a persistent variable ( this essentially acts as an internal clipboard - but without storing any data ) . This is the form called by CopyObjects PASTEOBJECTS ( TargetAxesHandle , []) pastes the objects from the source axes into the target axes . The objects are grouped into an hggroup object","title":"PasteObjects"},{"location":"reference/lib/sigTOOL/CORE/utils/PasteObjects.m/#pasteobjects","text":"PASTEOBJECTS pastes the objects from one axes into another A call to PASTEOBJECTS should be preceded by a call to COPYOBJECTS Examples : PASTEOBJECTS ( SourceAxesHandle ) stores the source axes handle for the objects in a persistent variable ( this essentially acts as an internal clipboard - but without storing any data ) . This is the form called by CopyObjects PASTEOBJECTS ( TargetAxesHandle , []) pastes the objects from the source axes into the target axes . The objects are grouped into an hggroup object","title":"PasteObjects"},{"location":"reference/lib/sigTOOL/CORE/utils/RecordHistory.m/","text":"RecordHistory \u00b6 RecordHistory creates a history log while executing menu commands Examples : RecordHistory ( func , arglist , WriteOnly ) where func is the handle to the function to call arglist is a cell array of arguments to func . arglist { 1 } should be the sigTOOL data view figure handle arglist ( 2 : end } are arguments to func and may be argument name string / value pairs Arguments should normally resolve to a numeric or logical value or to a string . Vectors , matrices and cell arrays are valid . If the arguments are not numeric , logical or char types , they must either : [ 1 ] be resolved to an object by calling a function listed in the last element of the 'functions' field of the history record or [ 2 ] be a function handle . In this case the function must be in scope from within the output m - file i . e . it must be a function that is accessible on the MATLAB path [ 3 ] be a structure , each field of which resolves within the limitations cited above . WriteOnly if true , causes output to be written to the history record without executing func ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- This is a modified version of the scExecute function developed for the sigTOOL signal analysis package : http : // www . mathworks . com / matlabcentral / fileexchange / loadFile . do ? objectId = 20575 & objectType = FILE -------------------------------------------------------------------------","title":"RecordHistory"},{"location":"reference/lib/sigTOOL/CORE/utils/RecordHistory.m/#recordhistory","text":"RecordHistory creates a history log while executing menu commands Examples : RecordHistory ( func , arglist , WriteOnly ) where func is the handle to the function to call arglist is a cell array of arguments to func . arglist { 1 } should be the sigTOOL data view figure handle arglist ( 2 : end } are arguments to func and may be argument name string / value pairs Arguments should normally resolve to a numeric or logical value or to a string . Vectors , matrices and cell arrays are valid . If the arguments are not numeric , logical or char types , they must either : [ 1 ] be resolved to an object by calling a function listed in the last element of the 'functions' field of the history record or [ 2 ] be a function handle . In this case the function must be in scope from within the output m - file i . e . it must be a function that is accessible on the MATLAB path [ 3 ] be a structure , each field of which resolves within the limitations cited above . WriteOnly if true , causes output to be written to the history record without executing func ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- This is a modified version of the scExecute function developed for the sigTOOL signal analysis package : http : // www . mathworks . com / matlabcentral / fileexchange / loadFile . do ? objectId = 20575 & objectType = FILE -------------------------------------------------------------------------","title":"RecordHistory"},{"location":"reference/lib/sigTOOL/CORE/utils/SincResample.m/","text":"SincResample \u00b6 SincResample resamples signals to arbitrary lengths / frequencies and can timeshift them . SincResample can be faster than INTERP or RESAMPLE when X contains many relatively short data columns . Example : [ Y , FOUT ] = SincResample ( X , NPOINTS , FIN , SHIFT , MODE ) X is a vector or M x N matrix where each column represents a signal . NPOINTS is the number of points required in each column after resampling . FIN ( if supplied ) is the sampling rate in X ( default 1 samples / sec ) . SHIFT ( if supplied ) is the time ( in seconds ) to shift the points at which interpolation will be done ( default 0 ) . SHIFT should be between \u00b1 ( 1 / Fin ) . SHIFT can be used to synchronize signals separated by up to \u00b1 ( 1 / Fin ) in time . MODE ( if supplied ) is a string : 'sinc' to use a hamming - windowed sinc function ( default ) 'lanczos' for a 3 - lobed Lanczos function Y is the resulting M x NPOINTS matrix formed by resampling . The time of the first sample in each column of Y is shifted by SHIFT seconds relative to those in X . FOUT is the effective sample rate for output Y ( normalised to FIN = 1 if FIN is not supplied on input ) . If X is a bandlimited ( filtered ) signal containing components at DC - 0.5 Fs where Fs is the sample rate , SincResample will return the signal that would have been seen with a higher sampling rate ( and the same filter settings ) . The algorithm depends on the fact that the bandlimited signal is completely defined when sampling at Fs . SincResample returns the data convolved with a set of time - shifted windowed sinc functions , one for each of the samples [ 1. . size ( x , 1 )] in the input signal . End - effects are reduced by adding a reflected and mirrored copy of the data at the beginning and end of each column before resampling . Note that points at the end of Y ( and / or beginning if SHIFT is negative ) will be extrapolated beyond the boundaries of X . SincResample is a generalization of the method used in Blanche & Swindale ( 2006 ) . See also e . g . interp & resample ( in the Signal Processing Toolbox ) and the sinc online documentation . References : T . Blanche & N . V . Swindale ( 2006 ) Nyquist interpolation improves neuron yield in multiunit recordings Journal of Neuroscience Methods 155 , 81 - 91 < a href = \"http://dx.doi.org/doi:10.1016/j.jneumeth.2005.12.031\" > LinkOut </ a > also K . Turkowski , Filters for common resampling tasks < a href = \"http://www.worldserver.com/turk/computergraphics/ResamplingFilters.pdf\" > LinkOut </ a > Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 - 8 Acknowledgements : Steve Alty for comments Revisions : 10.07 Argument checks tidied ( ML ) 02.08 End - effect minimization now relects and mirrors data instead of simply reflecting it . This improves the slopes at the end and reduces the behaviour described at < a href = \"http://www.dsprelated.com/showmessage/79676/2.php\" > http : // www . dsprelated . com / showmessage / 79676 / 2. php </ a > ( ML ) 02.08 Mode option added ( ML )","title":"SincResample"},{"location":"reference/lib/sigTOOL/CORE/utils/SincResample.m/#sincresample","text":"SincResample resamples signals to arbitrary lengths / frequencies and can timeshift them . SincResample can be faster than INTERP or RESAMPLE when X contains many relatively short data columns . Example : [ Y , FOUT ] = SincResample ( X , NPOINTS , FIN , SHIFT , MODE ) X is a vector or M x N matrix where each column represents a signal . NPOINTS is the number of points required in each column after resampling . FIN ( if supplied ) is the sampling rate in X ( default 1 samples / sec ) . SHIFT ( if supplied ) is the time ( in seconds ) to shift the points at which interpolation will be done ( default 0 ) . SHIFT should be between \u00b1 ( 1 / Fin ) . SHIFT can be used to synchronize signals separated by up to \u00b1 ( 1 / Fin ) in time . MODE ( if supplied ) is a string : 'sinc' to use a hamming - windowed sinc function ( default ) 'lanczos' for a 3 - lobed Lanczos function Y is the resulting M x NPOINTS matrix formed by resampling . The time of the first sample in each column of Y is shifted by SHIFT seconds relative to those in X . FOUT is the effective sample rate for output Y ( normalised to FIN = 1 if FIN is not supplied on input ) . If X is a bandlimited ( filtered ) signal containing components at DC - 0.5 Fs where Fs is the sample rate , SincResample will return the signal that would have been seen with a higher sampling rate ( and the same filter settings ) . The algorithm depends on the fact that the bandlimited signal is completely defined when sampling at Fs . SincResample returns the data convolved with a set of time - shifted windowed sinc functions , one for each of the samples [ 1. . size ( x , 1 )] in the input signal . End - effects are reduced by adding a reflected and mirrored copy of the data at the beginning and end of each column before resampling . Note that points at the end of Y ( and / or beginning if SHIFT is negative ) will be extrapolated beyond the boundaries of X . SincResample is a generalization of the method used in Blanche & Swindale ( 2006 ) . See also e . g . interp & resample ( in the Signal Processing Toolbox ) and the sinc online documentation . References : T . Blanche & N . V . Swindale ( 2006 ) Nyquist interpolation improves neuron yield in multiunit recordings Journal of Neuroscience Methods 155 , 81 - 91 < a href = \"http://dx.doi.org/doi:10.1016/j.jneumeth.2005.12.031\" > LinkOut </ a > also K . Turkowski , Filters for common resampling tasks < a href = \"http://www.worldserver.com/turk/computergraphics/ResamplingFilters.pdf\" > LinkOut </ a > Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 - 8 Acknowledgements : Steve Alty for comments Revisions : 10.07 Argument checks tidied ( ML ) 02.08 End - effect minimization now relects and mirrors data instead of simply reflecting it . This improves the slopes at the end and reduces the behaviour described at < a href = \"http://www.dsprelated.com/showmessage/79676/2.php\" > http : // www . dsprelated . com / showmessage / 79676 / 2. php </ a > ( ML ) 02.08 Mode option added ( ML )","title":"SincResample"},{"location":"reference/lib/sigTOOL/CORE/utils/SmoothingContextMenu.m/","text":"SmoothingContextMenu \u00b6 SmoothingContextMenu: helper function adds data smoothing to a uicontextmenu SmoothingContextMenu(h) Populates uimenu object h with the basic smoothing callbacks The smoothing window is a gaussian with SD of 0 . 5 [ equivalent to gausswin(n , 2) with the SP Toolbox ] ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"SmoothingContextMenu"},{"location":"reference/lib/sigTOOL/CORE/utils/SmoothingContextMenu.m/#smoothingcontextmenu","text":"SmoothingContextMenu: helper function adds data smoothing to a uicontextmenu SmoothingContextMenu(h) Populates uimenu object h with the basic smoothing callbacks The smoothing window is a gaussian with SD of 0 . 5 [ equivalent to gausswin(n , 2) with the SP Toolbox ] ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"SmoothingContextMenu"},{"location":"reference/lib/sigTOOL/CORE/utils/UpdateChannelTree.m/","text":"UpdateChannelTree \u00b6 UpdateChannelTree is a function. channels = UpdateChannelTree(fhandle, target, source)","title":"UpdateChannelTree"},{"location":"reference/lib/sigTOOL/CORE/utils/UpdateChannelTree.m/#updatechanneltree","text":"UpdateChannelTree is a function. channels = UpdateChannelTree(fhandle, target, source)","title":"UpdateChannelTree"},{"location":"reference/lib/sigTOOL/CORE/utils/callbackgetparam.m/","text":"callbackgetparam \u00b6 callbackgetparam helper function used in uicontextmenu callbacks Example: [ fhandle , ax , result , subs , data ] =callbackgetparam(hObject) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"callbackgetparam"},{"location":"reference/lib/sigTOOL/CORE/utils/callbackgetparam.m/#callbackgetparam","text":"callbackgetparam helper function used in uicontextmenu callbacks Example: [ fhandle , ax , result , subs , data ] =callbackgetparam(hObject) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"callbackgetparam"},{"location":"reference/lib/sigTOOL/CORE/utils/debounce.m/","text":"debounce \u00b6 debounce: sigTOOL function called to debounce triggers Example: trig=debounce(trig , duration , pretime) returns triggers that do not fall within (duration - pretime) of the preceding trigger(s) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"debounce"},{"location":"reference/lib/sigTOOL/CORE/utils/debounce.m/#debounce","text":"debounce: sigTOOL function called to debounce triggers Example: trig=debounce(trig , duration , pretime) returns triggers that do not fall within (duration - pretime) of the preceding trigger(s) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"debounce"},{"location":"reference/lib/sigTOOL/CORE/utils/filtfilthd.m/","text":"filtfilthd \u00b6 FILTFILTHD Zero-phase digital filtering with dfilt objects . FILTFILLTHD provides zero phase filtering and accepts dfilt objects on input . A number of end-effect minimization methods are supported . Examples : x = FILTFILTHD ( Hd , x ) x = FILTFILTHD ( Hd , x , method ) where Hd is a dfilt object and x is the input data . If x is a matrix , each column will be filtered . ------------------------------------------------------------------------ The filter states of Hd on entry to FILTFILTHD will be used at the beginning of each forward and each backward pass through the data . The user should normally ensure that the initial states are zeroed before calling filtfilthd [ e.g. using reset ( Hd ); ] ------------------------------------------------------------------------ x = FILTFILTHD ( b , a , x ) x = FILTFILTHD ( b , a , x , method ) format is also supported . x = FILTFILTHD (...., IMPULSELENGTH ) allows the impulse response length to be specified on input . method is a string describing the end-effect correction technique : reflect : data at the ends are reflected and mirrored as in the MATLAB filtfilt function ( default ) predict : data are extraploated using linear prediction spline / pchip : data are extrapolated using MATLAB 's interp1 function none: no internal end-effect correction is applied (x may be pre-pended and appended with data externally) Each method has different merits/limitations. The most robust method is reflect. The length of the padded data section at each end will be impzlength(Hd) points, or with ' reflect ', the minimum of impzlength(Hd) and the data length (this is different to filtfilt where the padding is only 3 * the filter width). Using the longer padding reduces the need for any DC correction (see the filtfilt documentation). See also: dfilt, filtfilt, impzlength ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/07 Copyright \u00a9 The Author & King' s College London 2007 ------------------------------------------------------------------------- Revisions : 07 . 11 . 07 nfact = len-1 ( not len ) when impulse response longer than data 11 . 11 . 07 Use x = f ( x ) for improved memory performance [ instead of y = f ( x ) ] Handles row vectors properly 31 . 01 . 08 Allow impzlength to be specified on input","title":"filtfilthd"},{"location":"reference/lib/sigTOOL/CORE/utils/filtfilthd.m/#filtfilthd","text":"FILTFILTHD Zero-phase digital filtering with dfilt objects . FILTFILLTHD provides zero phase filtering and accepts dfilt objects on input . A number of end-effect minimization methods are supported . Examples : x = FILTFILTHD ( Hd , x ) x = FILTFILTHD ( Hd , x , method ) where Hd is a dfilt object and x is the input data . If x is a matrix , each column will be filtered . ------------------------------------------------------------------------ The filter states of Hd on entry to FILTFILTHD will be used at the beginning of each forward and each backward pass through the data . The user should normally ensure that the initial states are zeroed before calling filtfilthd [ e.g. using reset ( Hd ); ] ------------------------------------------------------------------------ x = FILTFILTHD ( b , a , x ) x = FILTFILTHD ( b , a , x , method ) format is also supported . x = FILTFILTHD (...., IMPULSELENGTH ) allows the impulse response length to be specified on input . method is a string describing the end-effect correction technique : reflect : data at the ends are reflected and mirrored as in the MATLAB filtfilt function ( default ) predict : data are extraploated using linear prediction spline / pchip : data are extrapolated using MATLAB 's interp1 function none: no internal end-effect correction is applied (x may be pre-pended and appended with data externally) Each method has different merits/limitations. The most robust method is reflect. The length of the padded data section at each end will be impzlength(Hd) points, or with ' reflect ', the minimum of impzlength(Hd) and the data length (this is different to filtfilt where the padding is only 3 * the filter width). Using the longer padding reduces the need for any DC correction (see the filtfilt documentation). See also: dfilt, filtfilt, impzlength ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/07 Copyright \u00a9 The Author & King' s College London 2007 ------------------------------------------------------------------------- Revisions : 07 . 11 . 07 nfact = len-1 ( not len ) when impulse response longer than data 11 . 11 . 07 Use x = f ( x ) for improved memory performance [ instead of y = f ( x ) ] Handles row vectors properly 31 . 01 . 08 Allow impzlength to be specified on input","title":"filtfilthd"},{"location":"reference/lib/sigTOOL/CORE/utils/findFirstChannel.m/","text":"findFirstChannel \u00b6 findFirstChannel returns 0 idx = findFirstChannel ( in ) will return zero if none of the elements in IN are scchannel objects This function shadows the findFirstChannel method for scchannel objects","title":"findFirstChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/findFirstChannel.m/#findfirstchannel","text":"findFirstChannel returns 0 idx = findFirstChannel ( in ) will return zero if none of the elements in IN are scchannel objects This function shadows the findFirstChannel method for scchannel objects","title":"findFirstChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/help2doc.m/","text":"help2doc \u00b6 HELP2DOC copies help text for all m - files in a folder ( and subfolders ) to an HTML file Examples : HELP2DOC () HELP2DOC ( foldername ) LIST = HELP2DOC ( ... ) returns a list containing the names of files that lack any help text . If foldername is not specified , the user will be prompted for it . HELP2DOC copies the help text from all m - files in foldername together with any in subfolders . The subfolders are searched to any depth recursively . Text for each m - file is bookmarked internally in the output file . HELP2DOC also adds a contents list and an alphabetical index to the start of the file . These are hyperlinked internally to the help text . Acknowledgements : HELP2DOC contains a modified version of the MATLAB R2006b helpwin function Revisions : makehelphyper included from matlab helptools to support 'see also ' etc hyperlinks See also helpwin ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 07 King 's College London 2006 ------------------------------------------------------------------------- Revisions : 26.02 . 08 Add no help list on output .","title":"help2doc"},{"location":"reference/lib/sigTOOL/CORE/utils/help2doc.m/#help2doc","text":"HELP2DOC copies help text for all m - files in a folder ( and subfolders ) to an HTML file Examples : HELP2DOC () HELP2DOC ( foldername ) LIST = HELP2DOC ( ... ) returns a list containing the names of files that lack any help text . If foldername is not specified , the user will be prompted for it . HELP2DOC copies the help text from all m - files in foldername together with any in subfolders . The subfolders are searched to any depth recursively . Text for each m - file is bookmarked internally in the output file . HELP2DOC also adds a contents list and an alphabetical index to the start of the file . These are hyperlinked internally to the help text . Acknowledgements : HELP2DOC contains a modified version of the MATLAB R2006b helpwin function Revisions : makehelphyper included from matlab helptools to support 'see also ' etc hyperlinks See also helpwin ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 07 King 's College London 2006 ------------------------------------------------------------------------- Revisions : 26.02 . 08 Add no help list on output .","title":"help2doc"},{"location":"reference/lib/sigTOOL/CORE/utils/isMultipleCall.m/","text":"isMultipleCall \u00b6 isMultipleCall checks the stack for multiple calls isMultipleCall checks to see if multiple calls are present in the call stack to the function from which isMultipleCall was called . Example : TF = isMultipleCall () returns true if the stack contains more than one call to the function that called isMultipleCall false otherwise See also : dbstack ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"isMultipleCall"},{"location":"reference/lib/sigTOOL/CORE/utils/isMultipleCall.m/#ismultiplecall","text":"isMultipleCall checks the stack for multiple calls isMultipleCall checks to see if multiple calls are present in the call stack to the function from which isMultipleCall was called . Example : TF = isMultipleCall () returns true if the stack contains more than one call to the function that called isMultipleCall false otherwise See also : dbstack ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"isMultipleCall"},{"location":"reference/lib/sigTOOL/CORE/utils/isOOM.m/","text":"isOOM \u00b6 isOOM returns true if the last error was an Out of Memory error Example : flag = isOOM (); returns true if the last error was an Out of Memory error ( false otherwise ) isOOM is usually used in a catch block .","title":"isOOM"},{"location":"reference/lib/sigTOOL/CORE/utils/isOOM.m/#isoom","text":"isOOM returns true if the last error was an Out of Memory error Example : flag = isOOM (); returns true if the last error was an Out of Memory error ( false otherwise ) isOOM is usually used in a catch block .","title":"isOOM"},{"location":"reference/lib/sigTOOL/CORE/utils/jcontrolDemo.m/","text":"jcontrolDemo \u00b6 jcontrolDemo () Example : jcontrolDemo () 30 . 08 . 07 Revised for backwards compatability with MATLAB 7 . 01 onwards","title":"jcontrolDemo"},{"location":"reference/lib/sigTOOL/CORE/utils/jcontrolDemo.m/#jcontroldemo","text":"jcontrolDemo () Example : jcontrolDemo () 30 . 08 . 07 Revised for backwards compatability with MATLAB 7 . 01 onwards","title":"jcontrolDemo"},{"location":"reference/lib/sigTOOL/CORE/utils/lpredict.m/","text":"lpredict \u00b6 LPREDICT estimates the values of a data set before / after the observed set . LPREDICT uses linear prediction to extrapolate data , typically a timeseries . Note that this is not the same as linear extrapolation . A window of autocorrelation coefficients is moved beyond the data limits to extrapolate the data . For a discussion , see Press et . al . [ 1 ] . The required coefficients are derived from a call to LPC in MATLAB 's Signal Processing Toolbox Example: y=LPREDICT(x, np, npred, pos) [ y , a ] =LPREDICT(x, np, npred, pos) x: the input data series as a column vector or a matrix with series organized in columns np: the number of predictor coefficients to use (>=2) npred: the number of data values to return in the output pos: a string ' pre ' or ' post ' (default: post) This determines whether extrapolation occurs before or after the observed series x. y: the output, appropriately sequenced for concatenation with input x a: the coefficients returned by LPC (organized in rows). These can be used to check the quality/stability of the fit to the observed data as described in the documenation to the LPC function. The output y is given by: y(k) = -a(2)*y(k-1) - a(3)*y(k-2) - ... - a(np)*y(k-np) where y(n) => x(end-n) for n<=0 Note that sum(-a(2:end))is always less than unity. The output will therefore approach zero as npred increases. This may be a problem if x has a large DC offset. Subtract the the column mean(s) of x from x on input and add them to the output column(s) to restore DC. For a more accurate DC correction, see [ 1 ] . To pre-pend data, the input sequence is reversed and the output is similarly reversed before being returned. The output may always be vertically concatenated with the input to extend the timeseries e.g: k=(1:100)' ; x = exp ( -k / 100 ).* sin ( k / 5 ); x = [ lpredict ( x , 5 , 100 , 'pre' ); x ; lpredict ( x , 5 , 100 , 'post' ) ] ; See also LPC References : [ 1 ] Press et al . ( 1992 ) Numerical Recipes in C . ( Ed . 2 , Section 13 . 6 ). Toolboxes Required : Signal Processing Revisions : 10 . 07 renamed to avoid filename clash with System ID Toolbox DC correction help text corrected . ------------------------------------------------------------------------- Author : Malcolm Lidierth 10 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"lpredict"},{"location":"reference/lib/sigTOOL/CORE/utils/lpredict.m/#lpredict","text":"LPREDICT estimates the values of a data set before / after the observed set . LPREDICT uses linear prediction to extrapolate data , typically a timeseries . Note that this is not the same as linear extrapolation . A window of autocorrelation coefficients is moved beyond the data limits to extrapolate the data . For a discussion , see Press et . al . [ 1 ] . The required coefficients are derived from a call to LPC in MATLAB 's Signal Processing Toolbox Example: y=LPREDICT(x, np, npred, pos) [ y , a ] =LPREDICT(x, np, npred, pos) x: the input data series as a column vector or a matrix with series organized in columns np: the number of predictor coefficients to use (>=2) npred: the number of data values to return in the output pos: a string ' pre ' or ' post ' (default: post) This determines whether extrapolation occurs before or after the observed series x. y: the output, appropriately sequenced for concatenation with input x a: the coefficients returned by LPC (organized in rows). These can be used to check the quality/stability of the fit to the observed data as described in the documenation to the LPC function. The output y is given by: y(k) = -a(2)*y(k-1) - a(3)*y(k-2) - ... - a(np)*y(k-np) where y(n) => x(end-n) for n<=0 Note that sum(-a(2:end))is always less than unity. The output will therefore approach zero as npred increases. This may be a problem if x has a large DC offset. Subtract the the column mean(s) of x from x on input and add them to the output column(s) to restore DC. For a more accurate DC correction, see [ 1 ] . To pre-pend data, the input sequence is reversed and the output is similarly reversed before being returned. The output may always be vertically concatenated with the input to extend the timeseries e.g: k=(1:100)' ; x = exp ( -k / 100 ).* sin ( k / 5 ); x = [ lpredict ( x , 5 , 100 , 'pre' ); x ; lpredict ( x , 5 , 100 , 'post' ) ] ; See also LPC References : [ 1 ] Press et al . ( 1992 ) Numerical Recipes in C . ( Ed . 2 , Section 13 . 6 ). Toolboxes Required : Signal Processing Revisions : 10 . 07 renamed to avoid filename clash with System ID Toolbox DC correction help text corrected . ------------------------------------------------------------------------- Author : Malcolm Lidierth 10 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"lpredict"},{"location":"reference/lib/sigTOOL/CORE/utils/scAddDistributionTool.m/","text":"scAddDistributionTool \u00b6 scAddDistributionTool creates/adds a distribution fitting uicontextmenu Example: out=scAddDistributionTool(h) out is the handle to the uicontextmenu which will be added to the existing menu h if supplied The work is done by the scDistributionTool callback Toolboxes required: Statistics ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scAddDistributionTool"},{"location":"reference/lib/sigTOOL/CORE/utils/scAddDistributionTool.m/#scadddistributiontool","text":"scAddDistributionTool creates/adds a distribution fitting uicontextmenu Example: out=scAddDistributionTool(h) out is the handle to the uicontextmenu which will be added to the existing menu h if supplied The work is done by the scDistributionTool callback Toolboxes required: Statistics ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scAddDistributionTool"},{"location":"reference/lib/sigTOOL/CORE/utils/scAddPlot.m/","text":"scAddPlot \u00b6 scAddPlot superimposes a new , transparent , set of axes Example: newax=scAddPlot(ax) superimposes a set of axes on those specified by handle ax returning the handle of the new axes ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scAddPlot"},{"location":"reference/lib/sigTOOL/CORE/utils/scAddPlot.m/#scaddplot","text":"scAddPlot superimposes a new , transparent , set of axes Example: newax=scAddPlot(ax) superimposes a set of axes on those specified by handle ax returning the handle of the new axes ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scAddPlot"},{"location":"reference/lib/sigTOOL/CORE/utils/scBar.m/","text":"scBar \u00b6 scBar: standard bar type plot for sigTOOL Examples: scBar(data) scBar(ax , data) plot data to the current axes , or those specified in ax . Data should be a data element from a sigTOOLResultData object ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scBar"},{"location":"reference/lib/sigTOOL/CORE/utils/scBar.m/#scbar","text":"scBar: standard bar type plot for sigTOOL Examples: scBar(data) scBar(ax , data) plot data to the current axes , or those specified in ax . Data should be a data element from a sigTOOLResultData object ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scBar"},{"location":"reference/lib/sigTOOL/CORE/utils/scBugReport.m/","text":"scBugReport \u00b6 scBugReport utility to email bug reports to sigTOOL Example: scBugReport(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scBugReport"},{"location":"reference/lib/sigTOOL/CORE/utils/scBugReport.m/#scbugreport","text":"scBugReport utility to email bug reports to sigTOOL Example: scBugReport(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scBugReport"},{"location":"reference/lib/sigTOOL/CORE/utils/scChannelInfo.m/","text":"scChannelInfo \u00b6 SCCHANNELINFO displays information about a channel in a sigTOOL figure Example: SCCHANNELINFO(HANDLE, CHANNEL) where HANDLE is the handle of the figure, and CHANNEL is the channel number Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"scChannelInfo"},{"location":"reference/lib/sigTOOL/CORE/utils/scChannelInfo.m/#scchannelinfo","text":"SCCHANNELINFO displays information about a channel in a sigTOOL figure Example: SCCHANNELINFO(HANDLE, CHANNEL) where HANDLE is the handle of the figure, and CHANNEL is the channel number Toolboxes required: None Author: Malcolm Lidierth 07/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"scChannelInfo"},{"location":"reference/lib/sigTOOL/CORE/utils/scCheckChannels.m/","text":"scCheckChannels \u00b6 scCheckChannels checks for unexpected conditions in sigTOOL data Examples : errm = scCheckChannels ( fhandle ) errm = scCheckChannels ( channels ); ERRORS \"The units field for the timestamps is not equal for all channels\" Although sigTOOL channels are independent of one another , many sigTOOL functions assume that the tim . Units field will be equal for all channels . If they are not , there is a risk of getting erroneous results WARNINGS \"The number of points in Npoints does not correspond with tim\" The number of points indicated in the channel header for one or more epochs , on one or more channels , does not match with the timestamp data for the channel .","title":"scCheckChannels"},{"location":"reference/lib/sigTOOL/CORE/utils/scCheckChannels.m/#sccheckchannels","text":"scCheckChannels checks for unexpected conditions in sigTOOL data Examples : errm = scCheckChannels ( fhandle ) errm = scCheckChannels ( channels ); ERRORS \"The units field for the timestamps is not equal for all channels\" Although sigTOOL channels are independent of one another , many sigTOOL functions assume that the tim . Units field will be equal for all channels . If they are not , there is a risk of getting erroneous results WARNINGS \"The number of points in Npoints does not correspond with tim\" The number of points indicated in the channel header for one or more epochs , on one or more channels , does not match with the timestamp data for the channel .","title":"scCheckChannels"},{"location":"reference/lib/sigTOOL/CORE/utils/scColumn.m/","text":"scColumn \u00b6 scColumn generates a column of traces Example scColumn(ax, data) where ax is the target axes (defaults to gca) data is an element from a sigTOOLResultData.Data field In addition: fcn=scColumn() returns the handle to the local function to edit the display properties from a sigTOOL result view. ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008- ------------------------------------------------------------------------- Revisions: 07/10/09 Add local options function","title":"scColumn"},{"location":"reference/lib/sigTOOL/CORE/utils/scColumn.m/#sccolumn","text":"scColumn generates a column of traces Example scColumn(ax, data) where ax is the target axes (defaults to gca) data is an element from a sigTOOLResultData.Data field In addition: fcn=scColumn() returns the handle to the local function to edit the display properties from a sigTOOL result view. ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008- ------------------------------------------------------------------------- Revisions: 07/10/09 Add local options function","title":"scColumn"},{"location":"reference/lib/sigTOOL/CORE/utils/scColumnOptionsCallback.m/","text":"scColumnOptionsCallback \u00b6 scColumnOptionsCallback % ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scColumnOptionsCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/scColumnOptionsCallback.m/#sccolumnoptionscallback","text":"scColumnOptionsCallback % ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scColumnOptionsCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/scCommit.m/","text":"scCommit \u00b6 scCommit commits memory mapped data on disc to memory Examples : err = scCommit ( fhandle , channelnumber ) [ channels err ] = scCommit ( channels , channelnumber ) fhandle is a sigTOOL data view figure handle channels is a sigTOOL channel cell arry channelnumber is the number of the chanel to commit to RAM err is returned zero if the operation completed successfully , -1 otherwise . Use lasterror () to determine why a failure occurred . This is likely to be because you are out of memeory in which case channels will be unchanged . Note that the adc field of Custom channels will not be committed to RAM ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - -------------------------------------------------------------------------","title":"scCommit"},{"location":"reference/lib/sigTOOL/CORE/utils/scCommit.m/#sccommit","text":"scCommit commits memory mapped data on disc to memory Examples : err = scCommit ( fhandle , channelnumber ) [ channels err ] = scCommit ( channels , channelnumber ) fhandle is a sigTOOL data view figure handle channels is a sigTOOL channel cell arry channelnumber is the number of the chanel to commit to RAM err is returned zero if the operation completed successfully , -1 otherwise . Use lasterror () to determine why a failure occurred . This is likely to be because you are out of memeory in which case channels will be unchanged . Note that the adc field of Custom channels will not be committed to RAM ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - -------------------------------------------------------------------------","title":"scCommit"},{"location":"reference/lib/sigTOOL/CORE/utils/scContour.m/","text":"scContour \u00b6 scContour plots contours in a sigTOOL result window Examples: scContour(axeshandle , data) scContour(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scContour"},{"location":"reference/lib/sigTOOL/CORE/utils/scContour.m/#sccontour","text":"scContour plots contours in a sigTOOL result window Examples: scContour(axeshandle , data) scContour(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scContour"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateChannelHeader.m/","text":"scCreateChannelHeader \u00b6 scCreateChannelHeader returns a default channel header for a sigTOOL channel Example: header=scCreateChannelHeader ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scCreateChannelHeader"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateChannelHeader.m/#sccreatechannelheader","text":"scCreateChannelHeader returns a default channel header for a sigTOOL channel Example: header=scCreateChannelHeader ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scCreateChannelHeader"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateKCLFile.m/","text":"scCreateKCLFile \u00b6 scCreateKCLFile creates a MAT - file giving it a 'kcl' extension . The function is usually called from a sigTOOL data import routine. Examples : matfilename = scCreateKCLFile ( filename ) matfilename = scCreateKCLFile ( filename , targetpath ) filename is the name of the source file from another application e . g . a CED SMR file . Filename should include the full path for the file Targetpath will be used as the path of the output matfilename . The target file will be deleted if it already exists . Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - Acknowledgements : Revisions : 25.08.08 Include selection of new file name when access denied 26.08.08 Deal with folder access violations from mkdir","title":"scCreateKCLFile"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateKCLFile.m/#sccreatekclfile","text":"scCreateKCLFile creates a MAT - file giving it a 'kcl' extension . The function is usually called from a sigTOOL data import routine. Examples : matfilename = scCreateKCLFile ( filename ) matfilename = scCreateKCLFile ( filename , targetpath ) filename is the name of the source file from another application e . g . a CED SMR file . Filename should include the full path for the file Targetpath will be used as the path of the output matfilename . The target file will be deleted if it already exists . Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - Acknowledgements : Revisions : 25.08.08 Include selection of new file name when access denied 26.08.08 Deal with folder access violations from mkdir","title":"scCreateKCLFile"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateNewKCLFile.m/","text":"scCreateNewKCLFile \u00b6 scCreateNewKCLFile creates a dialog through which a new kcl file can be generated Example: scCreateNewKCLFile() scCreateNewKCLFile takes no arguments ------------------------------------------------------------------------- Author: Malcolm Lidierth 04/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scCreateNewKCLFile"},{"location":"reference/lib/sigTOOL/CORE/utils/scCreateNewKCLFile.m/#sccreatenewkclfile","text":"scCreateNewKCLFile creates a dialog through which a new kcl file can be generated Example: scCreateNewKCLFile() scCreateNewKCLFile takes no arguments ------------------------------------------------------------------------- Author: Malcolm Lidierth 04/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scCreateNewKCLFile"},{"location":"reference/lib/sigTOOL/CORE/utils/scDecimate.m/","text":"scDecimate \u00b6 scDecimate is a gateway to the wvDecimate function Example scDecimate(fhandle, source, target, intflag) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view intflag indicates whether data should be cast to integer after filtering (true/false) r is the downsampling factor scDecimate is a gateway to the wvDecimate function which does most of the work See also wvFiltFilt ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"scDecimate"},{"location":"reference/lib/sigTOOL/CORE/utils/scDecimate.m/#scdecimate","text":"scDecimate is a gateway to the wvDecimate function Example scDecimate(fhandle, source, target, intflag) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view intflag indicates whether data should be cast to integer after filtering (true/false) r is the downsampling factor scDecimate is a gateway to the wvDecimate function which does most of the work See also wvFiltFilt ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"scDecimate"},{"location":"reference/lib/sigTOOL/CORE/utils/scDeleteFigure.m/","text":"scDeleteFigure \u00b6 scDeleteFigure does some house - keeping when a sigTOOL data view is deleted Example: scDeleteFigure() scDeleteFigure(fhandle) fhandle will default to gcbf is not specified . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scDeleteFigure"},{"location":"reference/lib/sigTOOL/CORE/utils/scDeleteFigure.m/#scdeletefigure","text":"scDeleteFigure does some house - keeping when a sigTOOL data view is deleted Example: scDeleteFigure() scDeleteFigure(fhandle) fhandle will default to gcbf is not specified . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scDeleteFigure"},{"location":"reference/lib/sigTOOL/CORE/utils/scDistributionTool.m/","text":"scDistributionTool \u00b6 scDistributionTool menu callback for distribution fitting Example : scDistributionTool ( hObject , EventData , distribution ) fits the distribution to the data in the parent axes distribution is a string suitable for input to the mle function in the MATLAB Statistics Toolbox Distributions will be modeled using the MATLAB Stats Toolbox pdf function and the parameters returned by mle . Equality of data and model is compared using a Kolmogorov - Smirnov two sample test . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions : 09 . 08 . 08 Bug fix : histarea wrongly calculated with selected data Tidy KS test and formatting Force integer bin edges for Poisson dist","title":"scDistributionTool"},{"location":"reference/lib/sigTOOL/CORE/utils/scDistributionTool.m/#scdistributiontool","text":"scDistributionTool menu callback for distribution fitting Example : scDistributionTool ( hObject , EventData , distribution ) fits the distribution to the data in the parent axes distribution is a string suitable for input to the mle function in the MATLAB Statistics Toolbox Distributions will be modeled using the MATLAB Stats Toolbox pdf function and the parameters returned by mle . Equality of data and model is compared using a Kolmogorov - Smirnov two sample test . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions : 09 . 08 . 08 Bug fix : histarea wrongly calculated with selected data Tidy KS test and formatting Force integer bin edges for Poisson dist","title":"scDistributionTool"},{"location":"reference/lib/sigTOOL/CORE/utils/scDrawSelectedChannels.m/","text":"scDrawSelectedChannels \u00b6 obsolete","title":"scDrawSelectedChannels"},{"location":"reference/lib/sigTOOL/CORE/utils/scDrawSelectedChannels.m/#scdrawselectedchannels","text":"obsolete","title":"scDrawSelectedChannels"},{"location":"reference/lib/sigTOOL/CORE/utils/scEpochToVector.m/","text":"scEpochToVector \u00b6 scEpochToVector returns adc data as a vector of doubles Example : vec = scEpochToVector ( channel , indices ) returns the data indicated by indices channel is a sigTOOL data cell array element ( or structure ) . Note single channel . indices , if supplied , is a matrix of linear indices into channel . adc . Each row of indices gives the first and last indices of a section of data to return . The sections are vertically concatenated in the output vector It is anticipated that indices will generally indicate data sections of equal length and scEpochToVector will issue a warning if not . ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scEpochToVector"},{"location":"reference/lib/sigTOOL/CORE/utils/scEpochToVector.m/#scepochtovector","text":"scEpochToVector returns adc data as a vector of doubles Example : vec = scEpochToVector ( channel , indices ) returns the data indicated by indices channel is a sigTOOL data cell array element ( or structure ) . Note single channel . indices , if supplied , is a matrix of linear indices into channel . adc . Each row of indices gives the first and last indices of a section of data to return . The sections are vertically concatenated in the output vector It is anticipated that indices will generally indicate data sections of equal length and scEpochToVector will issue a warning if not . ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scEpochToVector"},{"location":"reference/lib/sigTOOL/CORE/utils/scExecute.m/","text":"scExecute \u00b6 scExecute is used as the gateway to other sigTOOL functions scExecute records the history and honours the Apply to all Open Files setting from sigTOOL analysis dialogs Examples : scExecute ( func , arglist , ApplyToAllFlag , WriteOnly ) where func is the handle to the function to call arglist is a cell array of arguments to func . arglist { 1 } should be the sigTOOL data view figure handle arglist ( 2 : end } are arguments to func and may be argument name string / value pairs Arguments should normally resolve to a numeric or logical value or to a string . Vectors , matrices and cell arrays are valid . If the arguments are not numeric , logical or char types , they must either : [ 1 ] be resolved to an object by calling a function listed in the last element of the 'functions' field of the history record or [ 2 ] be a function handle . In this case the function must be in scope from within the output m - file i . e . it must be a function that is accessible on the MATLAB path [ 3 ] be a structure , each field of which resolves within the limitations cited above . ApplyToAllFlag if true , causes func to be applied to all open sigTOOL data views WriteOnly if true , causes output to be written to the history record without executing func ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"scExecute"},{"location":"reference/lib/sigTOOL/CORE/utils/scExecute.m/#scexecute","text":"scExecute is used as the gateway to other sigTOOL functions scExecute records the history and honours the Apply to all Open Files setting from sigTOOL analysis dialogs Examples : scExecute ( func , arglist , ApplyToAllFlag , WriteOnly ) where func is the handle to the function to call arglist is a cell array of arguments to func . arglist { 1 } should be the sigTOOL data view figure handle arglist ( 2 : end } are arguments to func and may be argument name string / value pairs Arguments should normally resolve to a numeric or logical value or to a string . Vectors , matrices and cell arrays are valid . If the arguments are not numeric , logical or char types , they must either : [ 1 ] be resolved to an object by calling a function listed in the last element of the 'functions' field of the history record or [ 2 ] be a function handle . In this case the function must be in scope from within the output m - file i . e . it must be a function that is accessible on the MATLAB path [ 3 ] be a structure , each field of which resolves within the limitations cited above . ApplyToAllFlag if true , causes func to be applied to all open sigTOOL data views WriteOnly if true , causes output to be written to the history record without executing func ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"scExecute"},{"location":"reference/lib/sigTOOL/CORE/utils/scExportFigure.m/","text":"scExportFigure \u00b6 scExportFigure - exports a sigTOOL view to a graphics file Example: scExportFigure(fhandle , varargin) where fhandle is the handle of the data view or sigTOOL result figure varargin{1} , optionally , contains the default target file extension ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/08 Copyright \ufffd The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scExportFigure"},{"location":"reference/lib/sigTOOL/CORE/utils/scExportFigure.m/#scexportfigure","text":"scExportFigure - exports a sigTOOL view to a graphics file Example: scExportFigure(fhandle , varargin) where fhandle is the handle of the data view or sigTOOL result figure varargin{1} , optionally , contains the default target file extension ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/08 Copyright \ufffd The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scExportFigure"},{"location":"reference/lib/sigTOOL/CORE/utils/scFastOpen.m/","text":"scFastOpen \u00b6 scFastOpen loads data files saved using scFastSave Example fhandle=scFastOpen() fhandle is the handle (or a vector of handles , to the opened data views Returns empty if no selected files could be opened See also: scFastSave -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The author and King\u0092s College London 2010 - --------------------------------------------------------------------------","title":"scFastOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/scFastOpen.m/#scfastopen","text":"scFastOpen loads data files saved using scFastSave Example fhandle=scFastOpen() fhandle is the handle (or a vector of handles , to the opened data views Returns empty if no selected files could be opened See also: scFastSave -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The author and King\u0092s College London 2010 - --------------------------------------------------------------------------","title":"scFastOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/scFastSave.m/","text":"scFastSave \u00b6 scFastSave saves a sigTOOL data view and its associated result views Example : fastfile = scFastSave ( fhandle ) where fhandle is the handle of a sigTOOL data view fastfile is the path and name of the output file scFastSave can be used to back up data quickly and to save analysis results . Use it for temporary storage only . For permanent storage of data , use scSaveAs . scFastSave writes to a standard MATLAB data file ( a MAT - file ) in the system temporary folder . The file will be given the . kclf extension . The MAT - file version used will depend on the settings in the MATLAB preferences . Level 5 Version 7 MAT - files and above will use data compression . scFastSave saves : The channel cell array associated with a sigTOOL data view Details about the view , x - axis and cursor settings Any result objects associated with the view Re - loading a kclf file using scFastOpen will restore the analysis of a file to the point where scFastSave was called . scFastSave is fast beacuse it typically saves the objects and not the raw data represented in them . However , note that : For any temporary channels that contain data in RAM , those data will be saved directly to the kclf file Temporary channels on disc are also saved to the system temporary folder . If these are deleted during a disc cleanup or using sigTOOL ( 'cleanup' ) in MATLAB , any kclf files dependent upon them will fail to load . -------------------------------------------------------------------------- The following restrictions apply when reloading kclf files : * [ 1 ] They can safely be re - loaded only on the computer on which they were saved *$ [ 2 ] Any data files referenced within the scchannel cell array must still exist and should not have been modified since the the call to scFastSave [ 3 ] As the file contains objects , it may not be compatible across sigTOOL or MATLAB versions * These restrictions are enforced within the scFastOpen function $ If a file has been modified , you may end up loading garbage as data from it . -------------------------------------------------------------------------- See also : scFastOpen , scSaveAs -------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The author and King \u0092 s College London 2010 - --------------------------------------------------------------------------","title":"scFastSave"},{"location":"reference/lib/sigTOOL/CORE/utils/scFastSave.m/#scfastsave","text":"scFastSave saves a sigTOOL data view and its associated result views Example : fastfile = scFastSave ( fhandle ) where fhandle is the handle of a sigTOOL data view fastfile is the path and name of the output file scFastSave can be used to back up data quickly and to save analysis results . Use it for temporary storage only . For permanent storage of data , use scSaveAs . scFastSave writes to a standard MATLAB data file ( a MAT - file ) in the system temporary folder . The file will be given the . kclf extension . The MAT - file version used will depend on the settings in the MATLAB preferences . Level 5 Version 7 MAT - files and above will use data compression . scFastSave saves : The channel cell array associated with a sigTOOL data view Details about the view , x - axis and cursor settings Any result objects associated with the view Re - loading a kclf file using scFastOpen will restore the analysis of a file to the point where scFastSave was called . scFastSave is fast beacuse it typically saves the objects and not the raw data represented in them . However , note that : For any temporary channels that contain data in RAM , those data will be saved directly to the kclf file Temporary channels on disc are also saved to the system temporary folder . If these are deleted during a disc cleanup or using sigTOOL ( 'cleanup' ) in MATLAB , any kclf files dependent upon them will fail to load . -------------------------------------------------------------------------- The following restrictions apply when reloading kclf files : * [ 1 ] They can safely be re - loaded only on the computer on which they were saved *$ [ 2 ] Any data files referenced within the scchannel cell array must still exist and should not have been modified since the the call to scFastSave [ 3 ] As the file contains objects , it may not be compatible across sigTOOL or MATLAB versions * These restrictions are enforced within the scFastOpen function $ If a file has been modified , you may end up loading garbage as data from it . -------------------------------------------------------------------------- See also : scFastOpen , scSaveAs -------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The author and King \u0092 s College London 2010 - --------------------------------------------------------------------------","title":"scFastSave"},{"location":"reference/lib/sigTOOL/CORE/utils/scFeature.m/","text":"scFeature \u00b6 scRegister utility to email comments/feature requests to sigTOOL Example: scFeature(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scFeature"},{"location":"reference/lib/sigTOOL/CORE/utils/scFeature.m/#scfeature","text":"scRegister utility to email comments/feature requests to sigTOOL Example: scFeature(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scFeature"},{"location":"reference/lib/sigTOOL/CORE/utils/scFilter.m/","text":"scFilter \u00b6 scFilter is a gateway to the sigTOOL filter functions Example scFilter(fhandle, source, target, intflag, hd) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view intflag indicates whether data should be cast to integer after filtering (true/false) hd is a dfilt filter object scFilter is a gateway to the wvFilter function which does most of the work See also dfilt, wvFilter ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"scFilter"},{"location":"reference/lib/sigTOOL/CORE/utils/scFilter.m/#scfilter","text":"scFilter is a gateway to the sigTOOL filter functions Example scFilter(fhandle, source, target, intflag, hd) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view intflag indicates whether data should be cast to integer after filtering (true/false) hd is a dfilt filter object scFilter is a gateway to the wvFilter function which does most of the work See also dfilt, wvFilter ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"scFilter"},{"location":"reference/lib/sigTOOL/CORE/utils/scFindMatchingFs.m/","text":"scFindMatchingFs \u00b6 scFindMatchingFs Helper function for sigTOOL uicontrols scFindMatchingFs finds waveform data with matching sample rates Example : ChanList = scFindMatchingWaveforms ( channels , interval ) ChanList = scFindMatchingWaveforms ( fhandle , interval ) where : channels is a sigTOOL data cell array fhandle is the handle of a sigTOOL data view to take the channels from interval is the sample interval to match ChanList is a vector of waveform channel numbers with matching sample rates See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scFindMatchingFs"},{"location":"reference/lib/sigTOOL/CORE/utils/scFindMatchingFs.m/#scfindmatchingfs","text":"scFindMatchingFs Helper function for sigTOOL uicontrols scFindMatchingFs finds waveform data with matching sample rates Example : ChanList = scFindMatchingWaveforms ( channels , interval ) ChanList = scFindMatchingWaveforms ( fhandle , interval ) where : channels is a sigTOOL data cell array fhandle is the handle of a sigTOOL data view to take the channels from interval is the sample interval to match ChanList is a vector of waveform channel numbers with matching sample rates See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scFindMatchingFs"},{"location":"reference/lib/sigTOOL/CORE/utils/scFindSynchronized.m/","text":"scFindSynchronized \u00b6 scFindSynchronized Helper function for sigTOOL uicontrols scFindSynchronized finds waveform data with syncronized samples Waveform channels are considered to be synchronized only if all data samples fall within one sample interval of one another . If Event Filtering is enabled scFindSynchronized will compare only valid samples . Example : ChanList = scFindSynchronized ( channels , chan ) ChanList = scFindSynchronized ( fhandle , chan ) where : channels is a sigTOOL data cell array fhandle is the handle of a sigTOOL data view to take the channels from chan is the template channel to match ChanList is a vector of waveform channel numbers with synchronized samples See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scFindSynchronized"},{"location":"reference/lib/sigTOOL/CORE/utils/scFindSynchronized.m/#scfindsynchronized","text":"scFindSynchronized Helper function for sigTOOL uicontrols scFindSynchronized finds waveform data with syncronized samples Waveform channels are considered to be synchronized only if all data samples fall within one sample interval of one another . If Event Filtering is enabled scFindSynchronized will compare only valid samples . Example : ChanList = scFindSynchronized ( channels , chan ) ChanList = scFindSynchronized ( fhandle , chan ) where : channels is a sigTOOL data cell array fhandle is the handle of a sigTOOL data view to take the channels from chan is the template channel to match ChanList is a vector of waveform channel numbers with synchronized samples See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scFindSynchronized"},{"location":"reference/lib/sigTOOL/CORE/utils/scFrames.m/","text":"scFrames \u00b6 scFrames standard sigTOOL line plot function . Single/Multiple Frames Example: scFrames(data) scFrames(ax , data) plot data to the current axes , or those specified in ax . Data should be a data element from a sigTOOLResultData object ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/scFrames.m/#scframes","text":"scFrames standard sigTOOL line plot function . Single/Multiple Frames Example: scFrames(data) scFrames(ax , data) plot data to the current axes , or those specified in ax . Data should be a data element from a sigTOOLResultData object ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/scGenerateChannelList.m/","text":"scGenerateChannelList \u00b6 scGenerateChannelList generates the list of channels to display Examples : list = scGenerateChannelList ( fhandle ); list = scGenerateChannelList ( fhandle , list ); scGenerateChannelList returns the list of channels to display in a sigTOOL data view . By default , the first 32 channels are displayed . If list is supplied on input , these will be returned in the correct order with no repetitions ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"scGenerateChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scGenerateChannelList.m/#scgeneratechannellist","text":"scGenerateChannelList generates the list of channels to display Examples : list = scGenerateChannelList ( fhandle ); list = scGenerateChannelList ( fhandle , list ); scGenerateChannelList returns the list of channels to display in a sigTOOL data view . By default , the first 32 channels are displayed . If list is supplied on input , these will be returned in the correct order with no repetitions ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"scGenerateChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetBaseFolder.m/","text":"scGetBaseFolder \u00b6 scGetBaseFolder returns the sigTOOL base folder Example: folder=scGetBaseFolder() ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scGetBaseFolder"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetBaseFolder.m/#scgetbasefolder","text":"scGetBaseFolder returns the sigTOOL base folder Example: folder=scGetBaseFolder() ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scGetBaseFolder"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetChannelValues.m/","text":"scGetChannelValues \u00b6 scGetChannelValues returns the values on each channel at a specified time Examples y = scGetChannelValues ( fhandle , time ) y = scGetChannelValues ( fhandle , time , mode ) fhandle is the handle of a sigTOOL figure window time is the time to return values for mode ( if set ) is a string . Either ' pixel ' or ' interval ' ( see below ) y is a cell array with one element for each channel Waveform channels : The value placed in y is the value at time . If there is no sample at time , y { channelnumber } will be empty unless mode is set . Then : if mode == ' pixel ' the value of the first sample at or after time but within one pixel width will be returned . If there is none , y { channelnumber } will be empty . This mode will typically be used with cursor functions if mode == ' interval ' the value of the nearest sample at or after time will be returned if it lies within one sample interval . If not , y { channelnumber } will be empty . Edges If an edge occurs at time , y { channelnumber } will be set true . If mode == ' pixel ' , the edge can be within one pixel width of time . Pulses y { channelnumber } will be true if the channel is high at time , and false otherwise","title":"scGetChannelValues"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetChannelValues.m/#scgetchannelvalues","text":"scGetChannelValues returns the values on each channel at a specified time Examples y = scGetChannelValues ( fhandle , time ) y = scGetChannelValues ( fhandle , time , mode ) fhandle is the handle of a sigTOOL figure window time is the time to return values for mode ( if set ) is a string . Either ' pixel ' or ' interval ' ( see below ) y is a cell array with one element for each channel Waveform channels : The value placed in y is the value at time . If there is no sample at time , y { channelnumber } will be empty unless mode is set . Then : if mode == ' pixel ' the value of the first sample at or after time but within one pixel width will be returned . If there is none , y { channelnumber } will be empty . This mode will typically be used with cursor functions if mode == ' interval ' the value of the nearest sample at or after time will be returned if it lies within one sample interval . If not , y { channelnumber } will be empty . Edges If an edge occurs at time , y { channelnumber } will be set true . If mode == ' pixel ' , the edge can be within one pixel width of time . Pulses y { channelnumber } will be true if the channel is high at time , and false otherwise","title":"scGetChannelValues"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetChannelsByType.m/","text":"scGetChannelsByType \u00b6 scGetChannelsByType returns a list of channels with a specified type Examples : list = scGetChannelsByType ( fhandle , type ) list = scGetChannelsByType ( channels , type ) Inputs : fhandle / channels is a sigTOOL data view figure handle or channel list type is the string to match in the hdr . channeltype field e . g . ' Waveform ' ' Framed Waveform ' type may also be one of : ' all ' , ' empty ' , ' episodic ' , ' triggered ' , ' list ' or ' none ' . Output : list is the list of matching channels ( empty for type == ' none ' ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"scGetChannelsByType"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetChannelsByType.m/#scgetchannelsbytype","text":"scGetChannelsByType returns a list of channels with a specified type Examples : list = scGetChannelsByType ( fhandle , type ) list = scGetChannelsByType ( channels , type ) Inputs : fhandle / channels is a sigTOOL data view figure handle or channel list type is the string to match in the hdr . channeltype field e . g . ' Waveform ' ' Framed Waveform ' type may also be one of : ' all ' , ' empty ' , ' episodic ' , ' triggered ' , ' list ' or ' none ' . Output : list is the list of matching channels ( empty for type == ' none ' ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"scGetChannelsByType"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetCursorValues.m/","text":"scGetCursorValues \u00b6 scGetCursorValues gets data values based on cursor position in sigTOOL Example : y = scGetCursorValues ( CursorNumber ) y = scGetCursorValues ( fhandle , CursorNumber ) fhandle defaults to the current figure if not supplied or empty Returns y , a cell array of values with one entry per channel In a sigTOOL data view : For waveform channels , the value of the nearest sample at or after the cursor us subject to the condition that it falls within one pixel of the cursor . Returns [] if there is no point within one pixel . For edge and pulse channels , the returned y - value will be true or false corresponding to a high or low state at the the cursor location . For edges , the edge must be within one pixel width to register . %TODO: In a sigTOOL result view: See Also GetCursorLocations -------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007 --------------------------------------------------------------------------","title":"scGetCursorValues"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetCursorValues.m/#scgetcursorvalues","text":"scGetCursorValues gets data values based on cursor position in sigTOOL Example : y = scGetCursorValues ( CursorNumber ) y = scGetCursorValues ( fhandle , CursorNumber ) fhandle defaults to the current figure if not supplied or empty Returns y , a cell array of values with one entry per channel In a sigTOOL data view : For waveform channels , the value of the nearest sample at or after the cursor us subject to the condition that it falls within one pixel of the cursor . Returns [] if there is no point within one pixel . For edge and pulse channels , the returned y - value will be true or false corresponding to a high or low state at the the cursor location . For edges , the edge must be within one pixel width to register . %TODO: In a sigTOOL result view: See Also GetCursorLocations -------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007 --------------------------------------------------------------------------","title":"scGetCursorValues"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetFirstSampleTime.m/","text":"scGetFirstSampleTime \u00b6 scGetFirstSampleTime returns the time of the first continuous waveform sample Example : FirstSampleTime = scGetFirstSampleTime ( channels ) where channels is a sigTOOL channel cell array ( or cell array element ) Returns FirstSampleTime : the time of the first sample on a continuous waveform channel in channels [ i . e . the minimum of the values for channels {} . tim ( 1 , 1 )] . If FirstSampleTime can not be determined ( because there are no continuous waveforms in the input , it will be set to its default of zero . With continuous waveforms , there is no guarantee that sampling started at time zero e . g . a section of channels may have been exported from another application representing the period 10 - 20 s . FirstSample should then be used to correct for the 'missing' channels elements when converting from times to indices into the relevant channels vector . scGetTimePeriod does this automatically Note that FirstSample is only of use on continuous waveforms ( or when handling a single column of channels derived from a episodic or framed waveform ) . See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scGetFirstSampleTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetFirstSampleTime.m/#scgetfirstsampletime","text":"scGetFirstSampleTime returns the time of the first continuous waveform sample Example : FirstSampleTime = scGetFirstSampleTime ( channels ) where channels is a sigTOOL channel cell array ( or cell array element ) Returns FirstSampleTime : the time of the first sample on a continuous waveform channel in channels [ i . e . the minimum of the values for channels {} . tim ( 1 , 1 )] . If FirstSampleTime can not be determined ( because there are no continuous waveforms in the input , it will be set to its default of zero . With continuous waveforms , there is no guarantee that sampling started at time zero e . g . a section of channels may have been exported from another application representing the period 10 - 20 s . FirstSample should then be used to correct for the 'missing' channels elements when converting from times to indices into the relevant channels vector . scGetTimePeriod does this automatically Note that FirstSample is only of use on continuous waveforms ( or when handling a single column of channels derived from a episodic or framed waveform ) . See also scGetTimePeriod ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scGetFirstSampleTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetIcon.m/","text":"scGetIcon \u00b6 scGetIcon reads image data for making icons from menu items Example: img=scGetIcon(name) returns the image in file name 'name' from the ... sigTOOL\\CORE\\icons folder ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 The Author & King\u0092s College London 2007 - -------------------------------------------------------------------------","title":"scGetIcon"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetIcon.m/#scgeticon","text":"scGetIcon reads image data for making icons from menu items Example: img=scGetIcon(name) returns the image in file name 'name' from the ... sigTOOL\\CORE\\icons folder ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 The Author & King\u0092s College London 2007 - -------------------------------------------------------------------------","title":"scGetIcon"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetSubchannelList.m/","text":"scGetSubchannelList \u00b6 scGetSubchannelList returns the current subchannel for multiplexed channels Examples: list=scGetSubchannelList(fhandle) list=scGetSubchannelList(channels) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scGetSubchannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetSubchannelList.m/#scgetsubchannellist","text":"scGetSubchannelList returns the current subchannel for multiplexed channels Examples: list=scGetSubchannelList(fhandle) list=scGetSubchannelList(channels) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scGetSubchannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetTimePeriod.m/","text":"scGetTimePeriod \u00b6 scGetTimePeriod returns the data for a specified time period Data are returned for the period START <= t < STOP Example : DATAOUT = scGetTimePeriod ( DATAIN , START , STOP ) DATAOUT = scGetTimePeriod ( DATAIN , [ START STOP ]) DATAIN is a sigTOOL channel array or element START and STOP are the times ( in seconds ) marking the beginning and end of the required time window . DATAOUT is a sigTOOL channel array containing scchannel objects . Waveform data in DATAOUT will be trimmed to the limits START <= t < STOP . When the channel is a ' Custom ' channeltype , all epochs with START <= tim ( : , 1 ) < STOP will be returned . The epochs are defined by the highest dimension of adc . ADCARRAY and TSTAMP objects in DATAIN will be returned as double in DATAOUT See also ADCARRAY , TSTAMP Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scGetTimePeriod"},{"location":"reference/lib/sigTOOL/CORE/utils/scGetTimePeriod.m/#scgettimeperiod","text":"scGetTimePeriod returns the data for a specified time period Data are returned for the period START <= t < STOP Example : DATAOUT = scGetTimePeriod ( DATAIN , START , STOP ) DATAOUT = scGetTimePeriod ( DATAIN , [ START STOP ]) DATAIN is a sigTOOL channel array or element START and STOP are the times ( in seconds ) marking the beginning and end of the required time window . DATAOUT is a sigTOOL channel array containing scchannel objects . Waveform data in DATAOUT will be trimmed to the limits START <= t < STOP . When the channel is a ' Custom ' channeltype , all epochs with START <= tim ( : , 1 ) < STOP will be returned . The epochs are defined by the highest dimension of adc . ADCARRAY and TSTAMP objects in DATAIN will be returned as double in DATAOUT See also ADCARRAY , TSTAMP Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"scGetTimePeriod"},{"location":"reference/lib/sigTOOL/CORE/utils/scImagesc.m/","text":"scImagesc \u00b6 scImagesc plots images in a sigTOOL result window Example scImagesc(axeshandle , data) scImagesc(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scImagesc"},{"location":"reference/lib/sigTOOL/CORE/utils/scImagesc.m/#scimagesc","text":"scImagesc plots images in a sigTOOL result window Example scImagesc(axeshandle , data) scImagesc(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scImagesc"},{"location":"reference/lib/sigTOOL/CORE/utils/scImport.m/","text":"scImport \u00b6 scImport provides a common gateway to all other import functions Example : targetfile = scImport ( funchandle , extensionlist ) targetfile = scImport ( funchandle , extensionlist , postImportFunc ) Inputs : funchandle is the handle if the relevant ImportXXXX function extensionlist is a list of file extensions that can be opened postImportFunc is the handle of a MATLAB function that will be called after the import is completed . This function should take the form : MyFunction ( sourcefilename , targetfile ) ScImport will call the function providing the appropriate file names . MyFunction might , for example add custom variable to the sigTOOL data file ); Output : targetfile is the name of the generated sigTOOL data file -------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 -------------------------------------------------------------------------- Revisions : 26.09.09 Ignore invalid target folders in Filing . ImportReplace . Target 15.11.09 Add support for postImportFunc argument","title":"scImport"},{"location":"reference/lib/sigTOOL/CORE/utils/scImport.m/#scimport","text":"scImport provides a common gateway to all other import functions Example : targetfile = scImport ( funchandle , extensionlist ) targetfile = scImport ( funchandle , extensionlist , postImportFunc ) Inputs : funchandle is the handle if the relevant ImportXXXX function extensionlist is a list of file extensions that can be opened postImportFunc is the handle of a MATLAB function that will be called after the import is completed . This function should take the form : MyFunction ( sourcefilename , targetfile ) ScImport will call the function providing the appropriate file names . MyFunction might , for example add custom variable to the sigTOOL data file ); Output : targetfile is the name of the generated sigTOOL data file -------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 -------------------------------------------------------------------------- Revisions : 26.09.09 Ignore invalid target folders in Filing . ImportReplace . Target 15.11.09 Add support for postImportFunc argument","title":"scImport"},{"location":"reference/lib/sigTOOL/CORE/utils/scImportTrigger.m/","text":"scImportTrigger \u00b6 scImportTrigger imports trigger values Example scImportTrigger(fhandle , source , target) scImportTrigger(channels , source , target) Trigger times will be copied form channel \"source\" to channel \"target\" ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scImportTrigger"},{"location":"reference/lib/sigTOOL/CORE/utils/scImportTrigger.m/#scimporttrigger","text":"scImportTrigger imports trigger values Example scImportTrigger(fhandle , source , target) scImportTrigger(channels , source , target) Trigger times will be copied form channel \"source\" to channel \"target\" ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scImportTrigger"},{"location":"reference/lib/sigTOOL/CORE/utils/scInteractiveAxes.m/","text":"scInteractiveAxes \u00b6 scInteractiveAxes coordinates cursor control over axes limits in a sigTOOL result view Example: scInteractiveAxes(ax) activates interactive control on the specified set of axes scInteractiveAxes(ax, 'off') deactivates interaction When activated, scInteractiveAxes allows the user to [1] Drag the zero tick to a new position [2] Stretch or compress an axis by dragging a non-zero tick to a new position ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/09 Copyright \u00a9 The Author & King's College London 2009- -------------------------------------------------------------------------","title":"scInteractiveAxes"},{"location":"reference/lib/sigTOOL/CORE/utils/scInteractiveAxes.m/#scinteractiveaxes","text":"scInteractiveAxes coordinates cursor control over axes limits in a sigTOOL result view Example: scInteractiveAxes(ax) activates interactive control on the specified set of axes scInteractiveAxes(ax, 'off') deactivates interaction When activated, scInteractiveAxes allows the user to [1] Drag the zero tick to a new position [2] Stretch or compress an axis by dragging a non-zero tick to a new position ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/09 Copyright \u00a9 The Author & King's College London 2009- -------------------------------------------------------------------------","title":"scInteractiveAxes"},{"location":"reference/lib/sigTOOL/CORE/utils/scLineSmoothing.m/","text":"scLineSmoothing \u00b6 scLineSmoothing sets line smoothing on or off Example : scLineSmoothing ( fhandle , flag ) scLineSmoothing ( flag ) where fhandle is the target figure handle ( default gcf ) and flag is true / false for smoothing on / off respectively . Line smoothing is a largely unsupported / undocumented feature of MATLAB implemented via OpenGL . See help opengl for some details . This is a What You See Is All You Get function . With MATLAB 7.1 or earlier setting smoothing to on will have unexpected side - effects . Smoothing always sets the renderer to OpenGL . In general , do not use smoothing when exporting in vector formats - the drivers / target software will have their own smoothing algorithms . -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King 's College London 2006 --------------------------------------------------------------------------","title":"scLineSmoothing"},{"location":"reference/lib/sigTOOL/CORE/utils/scLineSmoothing.m/#sclinesmoothing","text":"scLineSmoothing sets line smoothing on or off Example : scLineSmoothing ( fhandle , flag ) scLineSmoothing ( flag ) where fhandle is the target figure handle ( default gcf ) and flag is true / false for smoothing on / off respectively . Line smoothing is a largely unsupported / undocumented feature of MATLAB implemented via OpenGL . See help opengl for some details . This is a What You See Is All You Get function . With MATLAB 7.1 or earlier setting smoothing to on will have unexpected side - effects . Smoothing always sets the renderer to OpenGL . In general , do not use smoothing when exporting in vector formats - the drivers / target software will have their own smoothing algorithms . -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King 's College London 2006 --------------------------------------------------------------------------","title":"scLineSmoothing"},{"location":"reference/lib/sigTOOL/CORE/utils/scMakeTempChannel.m/","text":"scMakeTempChannel \u00b6 scMakeTempChannel copies data to a temporary sigTOOL channel Example scMakeTempChannel ( fhandle , source , target , IntFlag ) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view scMakeTempChannel is a gateway to the wvCopyToTempChannel function which does most of the work for waveform channels","title":"scMakeTempChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/scMakeTempChannel.m/#scmaketempchannel","text":"scMakeTempChannel copies data to a temporary sigTOOL channel Example scMakeTempChannel ( fhandle , source , target , IntFlag ) where fhandle is the handle of a sigTOOL data view source is the channel number of channel to copy target is the channel number to copy data view scMakeTempChannel is a gateway to the wvCopyToTempChannel function which does most of the work for waveform channels","title":"scMakeTempChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/scMaxSeconds.m/","text":"scMaxSeconds \u00b6 scMaxSeconds returns the maximum sample time from all channels Examples time=scMaxSeconds(fhandle) time=scMaxSeconds(channels) time is returned in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scMaxSeconds"},{"location":"reference/lib/sigTOOL/CORE/utils/scMaxSeconds.m/#scmaxseconds","text":"scMaxSeconds returns the maximum sample time from all channels Examples time=scMaxSeconds(fhandle) time=scMaxSeconds(channels) time is returned in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scMaxSeconds"},{"location":"reference/lib/sigTOOL/CORE/utils/scMaxTime.m/","text":"scMaxTime \u00b6 scMaxTime returns the maximum sample time in seconds Example time=scMaxTime(fhandle) time=scMaxTime(channels) where fhandle is a sigTOOL data view figure handle channels is an scchannel object or cell array of scchannel objects time is maximum sample time in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scMaxTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scMaxTime.m/#scmaxtime","text":"scMaxTime returns the maximum sample time in seconds Example time=scMaxTime(fhandle) time=scMaxTime(channels) where fhandle is a sigTOOL data view figure handle channels is an scchannel object or cell array of scchannel objects time is maximum sample time in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scMaxTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scMinTime.m/","text":"scMinTime \u00b6 scMinTime returns the minimum sample time in seconds Example time=scMinTime(fhandle) time=scMinTime(channels) where fhandle is a sigTOOL data view figure handle channels is an scchannel object or cell array of scchannel objects time is first sample time in seconds scMinTime is needed as sampling does not always begin at time zero.","title":"scMinTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scMinTime.m/#scmintime","text":"scMinTime returns the minimum sample time in seconds Example time=scMinTime(fhandle) time=scMinTime(channels) where fhandle is a sigTOOL data view figure handle channels is an scchannel object or cell array of scchannel objects time is first sample time in seconds scMinTime is needed as sampling does not always begin at time zero.","title":"scMinTime"},{"location":"reference/lib/sigTOOL/CORE/utils/scOpen.m/","text":"scOpen \u00b6 scOpen maps a sigTOOL compatible MATLAB Level 5 v6 MAT - file These will have a . kcl extension if created by sigTOOL Example : channels = scOpen ( filename ) where filename is a fully qualified file name including path ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 ------------------------------------------------------------------------- Check version - not always maintaining backwards compatability until sigTOOL is released load ( filename , 'sigTOOLVersion' , '-mat' ); if ~ exist ( 'sigTOOLVersion' , 'var' ) || sigTOOLVersion < scVersion ( 'nodisplay' ) disp ( 'This is an old kcl file' ); end","title":"scOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/scOpen.m/#scopen","text":"scOpen maps a sigTOOL compatible MATLAB Level 5 v6 MAT - file These will have a . kcl extension if created by sigTOOL Example : channels = scOpen ( filename ) where filename is a fully qualified file name including path ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 ------------------------------------------------------------------------- Check version - not always maintaining backwards compatability until sigTOOL is released load ( filename , 'sigTOOLVersion' , '-mat' ); if ~ exist ( 'sigTOOLVersion' , 'var' ) || sigTOOLVersion < scVersion ( 'nodisplay' ) disp ( 'This is an old kcl file' ); end","title":"scOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/scParam.m/","text":"scParam \u00b6 scParam deals with parsing of sigTOOL function inputs Example : [ fhandle channels ] = scParam ( in ) where in is either a sigTOOL data view handle or a cell array of sigTOOL channels","title":"scParam"},{"location":"reference/lib/sigTOOL/CORE/utils/scParam.m/#scparam","text":"scParam deals with parsing of sigTOOL function inputs Example : [ fhandle channels ] = scParam ( in ) where in is either a sigTOOL data view handle or a cell array of sigTOOL channels","title":"scParam"},{"location":"reference/lib/sigTOOL/CORE/utils/scPlaySound.m/","text":"scPlaySound \u00b6 scPlaySound sets up channel selection uipanel and plays channels as audio Example: scPlaysound(fhandle, channel1, channel2, start, stop) where handle points to a sigTOOL data view","title":"scPlaySound"},{"location":"reference/lib/sigTOOL/CORE/utils/scPlaySound.m/#scplaysound","text":"scPlaySound sets up channel selection uipanel and plays channels as audio Example: scPlaysound(fhandle, channel1, channel2, start, stop) where handle points to a sigTOOL data view","title":"scPlaySound"},{"location":"reference/lib/sigTOOL/CORE/utils/scProcessDataView.m/","text":"scProcessDataView \u00b6 scProcessDataView is a function. scProcessDataView(fhandle, DataView)","title":"scProcessDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/scProcessDataView.m/#scprocessdataview","text":"scProcessDataView is a function. scProcessDataView(fhandle, DataView)","title":"scProcessDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/scProgressBar.m/","text":"scProgressBar \u00b6 scProgressBar is a waitbar like function Examples : obj = scProgressBar ( value , message ) obj = scProgressBar ( value , message , PropName1 , PropName2 ..... ) create and display a progress bar scProgressBar ( value ) updates the most recently created bar scProgressBar ( string ) updates the message of the most recently created bar scProgressBar ( value , obj ) updates the bar specified by obj obj is a JCONTROL object ( you need this class installed - see below ) value : is a scalar between 0 and 1 message : is a string which may contain HTML formatting tags Valid property name / value pairs are : Icon : specifies the icon to be displayed with the progress bar this should be a javax . swing . ImageIcon object or the name of a file to load via javax . swing . ImageIcon - typically a gif file Name : the name for the title bar ( string ) Step : value is scaled to a percentage and rounded . The display will be updated only if the scaled value is a multiple of step . Set step to 5 or 10 % to reduce the CPU overhead when scProgressBar is called repeatedly from a loop ( scalar - default NaN ) . Note : it is better to include such a test in your code loop and call scProgressBar only when an update is required Position : the position for the frame ( normalized ) . Note that width / height will be overridden Progbar : 'on' to show a progressbar within the panel , 'off' to suppress it See also waitbar scProgressBar maintains an internal stack of handles to the created progress bars . This stack can be accessed by calling scProgressBar () and cleared with scProgressBar ( - 1 ) . scProgressBar ( 'on' / 'off' ) toggles the display of progress bars . Default is 'on' . Set to 'off' to use sigTOOL functions from the command line with no Java Runtime Environment . Requirements : The JCONTROL class and its methods are needed and available from MATLAB Central < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=15580&objectType=FILE\" > LinkOut </ a > ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 25.10 . 08 Revised for R2008b jcontrol with uipanel 14.10 . 09 See within","title":"scProgressBar"},{"location":"reference/lib/sigTOOL/CORE/utils/scProgressBar.m/#scprogressbar","text":"scProgressBar is a waitbar like function Examples : obj = scProgressBar ( value , message ) obj = scProgressBar ( value , message , PropName1 , PropName2 ..... ) create and display a progress bar scProgressBar ( value ) updates the most recently created bar scProgressBar ( string ) updates the message of the most recently created bar scProgressBar ( value , obj ) updates the bar specified by obj obj is a JCONTROL object ( you need this class installed - see below ) value : is a scalar between 0 and 1 message : is a string which may contain HTML formatting tags Valid property name / value pairs are : Icon : specifies the icon to be displayed with the progress bar this should be a javax . swing . ImageIcon object or the name of a file to load via javax . swing . ImageIcon - typically a gif file Name : the name for the title bar ( string ) Step : value is scaled to a percentage and rounded . The display will be updated only if the scaled value is a multiple of step . Set step to 5 or 10 % to reduce the CPU overhead when scProgressBar is called repeatedly from a loop ( scalar - default NaN ) . Note : it is better to include such a test in your code loop and call scProgressBar only when an update is required Position : the position for the frame ( normalized ) . Note that width / height will be overridden Progbar : 'on' to show a progressbar within the panel , 'off' to suppress it See also waitbar scProgressBar maintains an internal stack of handles to the created progress bars . This stack can be accessed by calling scProgressBar () and cleared with scProgressBar ( - 1 ) . scProgressBar ( 'on' / 'off' ) toggles the display of progress bars . Default is 'on' . Set to 'off' to use sigTOOL functions from the command line with no Java Runtime Environment . Requirements : The JCONTROL class and its methods are needed and available from MATLAB Central < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=15580&objectType=FILE\" > LinkOut </ a > ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 25.10 . 08 Revised for R2008b jcontrol with uipanel 14.10 . 09 See within","title":"scProgressBar"},{"location":"reference/lib/sigTOOL/CORE/utils/scRefreshResultManagerAxesLimits.m/","text":"scRefreshResultManagerAxesLimits \u00b6 scRefreshResultManagerAxesLimits updates the Result Manager axes limits boxes Example: scRefreshResultManagerAxesLimits(fhandle) where fhandle is the handle of a sigTOOL result view ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scRefreshResultManagerAxesLimits"},{"location":"reference/lib/sigTOOL/CORE/utils/scRefreshResultManagerAxesLimits.m/#screfreshresultmanageraxeslimits","text":"scRefreshResultManagerAxesLimits updates the Result Manager axes limits boxes Example: scRefreshResultManagerAxesLimits(fhandle) where fhandle is the handle of a sigTOOL result view ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scRefreshResultManagerAxesLimits"},{"location":"reference/lib/sigTOOL/CORE/utils/scRegister.m/","text":"scRegister \u00b6 scRegister utility to register sigTOOL Example: scRegister(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scRegister"},{"location":"reference/lib/sigTOOL/CORE/utils/scRegister.m/#scregister","text":"scRegister utility to register sigTOOL Example: scRegister(fhandle) Auto send of emails requires that the MATLAB preferences are set up If auto send fails , use the usual email utility on your PC . The message will be copied automatically to the system clipboard for pasting . See also: sendmail ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/10 Copyright \u00a9 The Author & King's College London 2010 - -------------------------------------------------------------------------","title":"scRegister"},{"location":"reference/lib/sigTOOL/CORE/utils/scRemap.m/","text":"scRemap \u00b6 scRemap releases virtual memory used by a sigTOOL data view Examples : scRemap () channels = scRemap ( fhandle ) channels = scRemap ( fhandle , ChannelList ) channels = scRemap ( fhandle , ChannelList , mode ) If no input is given , scRemap releases the virtual memory allocated to all sigTOOL data views that are currently open in this instance of MATLAB . If fhandle is specified , scRemap releases the virtual memory allocated to the specified view only . If ChannelList is specified , only memory associated with the specified channels will be released . mode is a string : ' include ' ( default ) or ' exclude ' . When mode == ' exclude ' , memory for all channels except those in ChannelList will be released . scRemap updates the application data area ( s ) of the relevant figure ( s ) . If requested , a copy will be returned in channels To free up virtual memory successfully , scRemap requires that no copies / references to the relevant channel ( s ) exist in any other MATLAB workspace . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"scRemap"},{"location":"reference/lib/sigTOOL/CORE/utils/scRemap.m/#scremap","text":"scRemap releases virtual memory used by a sigTOOL data view Examples : scRemap () channels = scRemap ( fhandle ) channels = scRemap ( fhandle , ChannelList ) channels = scRemap ( fhandle , ChannelList , mode ) If no input is given , scRemap releases the virtual memory allocated to all sigTOOL data views that are currently open in this instance of MATLAB . If fhandle is specified , scRemap releases the virtual memory allocated to the specified view only . If ChannelList is specified , only memory associated with the specified channels will be released . mode is a string : ' include ' ( default ) or ' exclude ' . When mode == ' exclude ' , memory for all channels except those in ChannelList will be released . scRemap updates the application data area ( s ) of the relevant figure ( s ) . If requested , a copy will be returned in channels To free up virtual memory successfully , scRemap requires that no copies / references to the relevant channel ( s ) exist in any other MATLAB workspace . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"scRemap"},{"location":"reference/lib/sigTOOL/CORE/utils/scResultViewButtonMotion.m/","text":"scResultViewButtonMotion \u00b6 scResultViewButtonMotion button motion callback used in sigTOOL This function provides support for data selection in result views Example: scResultViewButtonMotion(hObject , EventData) standard object callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 The Author & King\u0092s College London 2007 - -------------------------------------------------------------------------","title":"scResultViewButtonMotion"},{"location":"reference/lib/sigTOOL/CORE/utils/scResultViewButtonMotion.m/#scresultviewbuttonmotion","text":"scResultViewButtonMotion button motion callback used in sigTOOL This function provides support for data selection in result views Example: scResultViewButtonMotion(hObject , EventData) standard object callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 The Author & King\u0092s College London 2007 - -------------------------------------------------------------------------","title":"scResultViewButtonMotion"},{"location":"reference/lib/sigTOOL/CORE/utils/scSaveAs.m/","text":"scSaveAs \u00b6 scSaveAs saves data to a new sigTOOL data file Example: matfilename=scSaveAs(fhandle) fhandle is the handle of the figure for the source data matfilename is the generated . kcl file ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - ------------------------------------------------------------------------- Revisions: 05 . 11 . 09 Line 174 . Final test should be for ~any Line 178 . Index of 1 corrected to i . 26 . 01 . 10 See within","title":"scSaveAs"},{"location":"reference/lib/sigTOOL/CORE/utils/scSaveAs.m/#scsaveas","text":"scSaveAs saves data to a new sigTOOL data file Example: matfilename=scSaveAs(fhandle) fhandle is the handle of the figure for the source data matfilename is the generated . kcl file ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - ------------------------------------------------------------------------- Revisions: 05 . 11 . 09 Line 174 . Final test should be for ~any Line 178 . Index of 1 corrected to i . 26 . 01 . 10 See within","title":"scSaveAs"},{"location":"reference/lib/sigTOOL/CORE/utils/scSaveImportedChannel.m/","text":"scSaveImportedChannel \u00b6 scSaveImportedChannel saves a channel to a sigTOOL kcl file scSaveImportedChannel is called by various file import functions to save data to a mat file using the kcl naming convention for variables Some standard fields are added to the header by this function : header . embeddeddata = true ; % flag for embedded ( true ) / external ( false ) data header . mapstructure . file = '' ; % Name of the file header . mapstructure . datatype = []; % Data type on disc header . mapstructure . dimensions = []; % Array dimensions header . mapstructure . offset = []; % Offset in file Example : scSaveImportedChannel ( matfilename , chan , data , header , mode ) scSaveImportedChannel does not return any values Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 King \u0092 s College London 2006 Toolboxes required : None Acknowledgements : Revisions : 25.07.07 Mixed mode added 25.07.08 mappedfile / dataisembedded fields added to header 26.07.07 mapfunc field added 21.06.09 add classifier field to header","title":"scSaveImportedChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/scSaveImportedChannel.m/#scsaveimportedchannel","text":"scSaveImportedChannel saves a channel to a sigTOOL kcl file scSaveImportedChannel is called by various file import functions to save data to a mat file using the kcl naming convention for variables Some standard fields are added to the header by this function : header . embeddeddata = true ; % flag for embedded ( true ) / external ( false ) data header . mapstructure . file = '' ; % Name of the file header . mapstructure . datatype = []; % Data type on disc header . mapstructure . dimensions = []; % Array dimensions header . mapstructure . offset = []; % Offset in file Example : scSaveImportedChannel ( matfilename , chan , data , header , mode ) scSaveImportedChannel does not return any values Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 King \u0092 s College London 2006 Toolboxes required : None Acknowledgements : Revisions : 25.07.07 Mixed mode added 25.07.08 mappedfile / dataisembedded fields added to header 26.07.07 mapfunc field added 21.06.09 add classifier field to header","title":"scSaveImportedChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/scSavePreferences.m/","text":"scSavePreferences \u00b6 scSavePreferences saves a sigTOOL preferences MAT file Example: scSavePreferences(fhandle) saves the preferences from the data view with handle fhandle as the default preferences ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"scSavePreferences"},{"location":"reference/lib/sigTOOL/CORE/utils/scSavePreferences.m/#scsavepreferences","text":"scSavePreferences saves a sigTOOL preferences MAT file Example: scSavePreferences(fhandle) saves the preferences from the data view with handle fhandle as the default preferences ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"scSavePreferences"},{"location":"reference/lib/sigTOOL/CORE/utils/scScatter.m/","text":"scScatter \u00b6 scScatter generates a standard sigTOOL scatter plot Example scScatter(ax , data) where ax is the target axes (deafults to gca) data is an element from a sigTOOLResultData . Data field % ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scScatter"},{"location":"reference/lib/sigTOOL/CORE/utils/scScatter.m/#scscatter","text":"scScatter generates a standard sigTOOL scatter plot Example scScatter(ax , data) where ax is the target axes (deafults to gca) data is an element from a sigTOOLResultData . Data field % ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scScatter"},{"location":"reference/lib/sigTOOL/CORE/utils/scSec.m/","text":"scSec \u00b6 scSec function","title":"scSec"},{"location":"reference/lib/sigTOOL/CORE/utils/scSec.m/#scsec","text":"scSec function","title":"scSec"},{"location":"reference/lib/sigTOOL/CORE/utils/scSelectImporter.m/","text":"scSelectImporter \u00b6 scSelectImporter returns a function handle to the appropriate sigTOOL import function Example : fcn = scSelectImporter ( filename ); fcn = scSelectImporter ( extension ); where filename or extension are strings e . g fcn = scSelectImporter ( 'myfile.abf' ); fcn = scSelectImporter ( '.mcd' ); scSelectImporter also sets up the relevant ImportXXX function by loading any required libraries ( e . g . the relevant NeuroShare DLL ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"scSelectImporter"},{"location":"reference/lib/sigTOOL/CORE/utils/scSelectImporter.m/#scselectimporter","text":"scSelectImporter returns a function handle to the appropriate sigTOOL import function Example : fcn = scSelectImporter ( filename ); fcn = scSelectImporter ( extension ); where filename or extension are strings e . g fcn = scSelectImporter ( 'myfile.abf' ); fcn = scSelectImporter ( '.mcd' ); scSelectImporter also sets up the relevant ImportXXX function by loading any required libraries ( e . g . the relevant NeuroShare DLL ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"scSelectImporter"},{"location":"reference/lib/sigTOOL/CORE/utils/scSetSubchannelList.m/","text":"scSetSubchannelList \u00b6 scSetSubchannelList sets the current subchannels Example channels=scSetSubchannelList(fhandle , list) channels=scSetSubchannelList(channels , list) sets the current subchannel setting for each channel to the value in the corresponding element of list which should be a cell array ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scSetSubchannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scSetSubchannelList.m/#scsetsubchannellist","text":"scSetSubchannelList sets the current subchannels Example channels=scSetSubchannelList(fhandle , list) channels=scSetSubchannelList(channels , list) sets the current subchannel setting for each channel to the value in the corresponding element of list which should be a cell array ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scSetSubchannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/scSupportedFormats.m/","text":"scSupportedFormats \u00b6 scSupportedFormats returns a list file extensions for sigTOOL supported formats Example: list=scSupportedFormats() The list does not include all the multi - media formats supported ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scSupportedFormats"},{"location":"reference/lib/sigTOOL/CORE/utils/scSupportedFormats.m/#scsupportedformats","text":"scSupportedFormats returns a list file extensions for sigTOOL supported formats Example: list=scSupportedFormats() The list does not include all the multi - media formats supported ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"scSupportedFormats"},{"location":"reference/lib/sigTOOL/CORE/utils/scSurf.m/","text":"scSurf \u00b6 scSurf plots surfaces in a sigTOOL result window Example scSurf(axeshandle , data) scSurf(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scSurf"},{"location":"reference/lib/sigTOOL/CORE/utils/scSurf.m/#scsurf","text":"scSurf plots surfaces in a sigTOOL result window Example scSurf(axeshandle , data) scSurf(data) where axeshandle is the handle of the target axes (gca if omitted) data is the data to plot (an element from a sigTOOLResultData object data field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"scSurf"},{"location":"reference/lib/sigTOOL/CORE/utils/scVersion.m/","text":"scVersion \u00b6 scVersion returns / displays the version number of sigTOOL VER = scVersion returns and displays the version while VER = scVersion ( ' nodisplay ' ) suppresses the display Author : malcolm Lidierth 08 / 06 \u00a9 King \u0092 s College London 2006 -","title":"scVersion"},{"location":"reference/lib/sigTOOL/CORE/utils/scVersion.m/#scversion","text":"scVersion returns / displays the version number of sigTOOL VER = scVersion returns and displays the version while VER = scVersion ( ' nodisplay ' ) suppresses the display Author : malcolm Lidierth 08 / 06 \u00a9 King \u0092 s College London 2006 -","title":"scVersion"},{"location":"reference/lib/sigTOOL/CORE/utils/scWaterfall.m/","text":"scWaterfall \u00b6 scWaterfall generates a standard sigTOOL Waterfall plot Example scWaterfall(ax , data) where ax is the target axes (deafults to gca) data is an element from a sigTOOLResultData . Data field % ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scWaterfall"},{"location":"reference/lib/sigTOOL/CORE/utils/scWaterfall.m/#scwaterfall","text":"scWaterfall generates a standard sigTOOL Waterfall plot Example scWaterfall(ax , data) where ax is the target axes (deafults to gca) data is an element from a sigTOOLResultData . Data field % ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scWaterfall"},{"location":"reference/lib/sigTOOL/CORE/utils/scWindowButtonDownFcn.m/","text":"scWindowButtonDownFcn \u00b6 scWindowButtonDownFcn callback for sigTOOL windows . Example : scWindowButtonDownFcn ( fhandle , EventData ) mouse pressed callback for sigTOOL data and result windows This is the generic callback for sigTOOL figures . Specific graphic objects may have custom callbacks defined that do not depend on scWindowButtonDownFcn - hence empty coding in some cases here . Object specific callbacks , where defined , will be in the event queue and will be executed when this callback returns . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006- ------------------------------------------------------------------------- Revisions : 29 . 09 . 08 Bug Fix 26 . 10 . 08 Add drawnow for uitable - needed on R2008b to flush event queue 21 . 08 . 09 Add support to change axis ranges in result view 05 . 05 . 09 Support column display mode 26 . 09 . 09 Improved support for CustomResultPanels","title":"scWindowButtonDownFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/scWindowButtonDownFcn.m/#scwindowbuttondownfcn","text":"scWindowButtonDownFcn callback for sigTOOL windows . Example : scWindowButtonDownFcn ( fhandle , EventData ) mouse pressed callback for sigTOOL data and result windows This is the generic callback for sigTOOL figures . Specific graphic objects may have custom callbacks defined that do not depend on scWindowButtonDownFcn - hence empty coding in some cases here . Object specific callbacks , where defined , will be in the event queue and will be executed when this callback returns . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006- ------------------------------------------------------------------------- Revisions : 29 . 09 . 08 Bug Fix 26 . 10 . 08 Add drawnow for uitable - needed on R2008b to flush event queue 21 . 08 . 09 Add support to change axis ranges in result view 05 . 05 . 09 Support column display mode 26 . 09 . 09 Improved support for CustomResultPanels","title":"scWindowButtonDownFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/scWindowKeyPressFcn.m/","text":"scWindowKeyPressFcn \u00b6 scWindowKeyPressFcn - keypress callback for sigTOOL windows Example: scWindowKeyPressFcn(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"scWindowKeyPressFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/scWindowKeyPressFcn.m/#scwindowkeypressfcn","text":"scWindowKeyPressFcn - keypress callback for sigTOOL windows Example: scWindowKeyPressFcn(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"scWindowKeyPressFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/scverLessThan.m/","text":"scverLessThan \u00b6 scverLessThan is needed for MATLAB versions without the verLessThan function","title":"scverLessThan"},{"location":"reference/lib/sigTOOL/CORE/utils/scverLessThan.m/#scverlessthan","text":"scverLessThan is needed for MATLAB versions without the verLessThan function","title":"scverLessThan"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/adcarray.m/","text":"adcarray \u00b6 ADCARRAY contructor for adcarray class objects ADCARRAY objects allow data to be accessed as though the adcarray was a double array while storing the data as a memmapfile object , or as an array of another class e . g . int16 . The data in an adcarray might typically be values from an analog - digital convertor that are stored in a file and mapped via the memmapfile object . An ADCARRAY object usually contains a memmapfile object , together with a scale and offset to convert the values stored on disc ( and pointed to by the memmapfile object ) to real world numbers which are returned as double precision . These can also be transformed by a function pointed to by a handle stored in the adcarray object . Referencing an ADCARRAY object as though it were a double precision array i . e . using obj ( ... ) returns a scaled , offset and transformed double precision array regardless of the native format of the data in the memmapfile object . These can be passed as input arguments to other MATLAB functions e . g . s = sum ( obj ()) . Also , the memmapfile object can be replaced by a structure where adcarrays are used to store data in MATLAB memory space without using memmapfile ( which removes the need for linkage to a disc file ) . ADCARRAY objects have seven properties MAP : [ 1 ] A memmapfile object containing the data or [ 2 ] A structure containing the data In either case , the data is available in obj . Map . Data . Adc or by using the obj () syntax ( see below ) SCALE : Multiplier to convert data to real world values DC : Value added to returned data after scaling FUNC : A function handle UNITS : A string indicating the real world units after scaling ( e . g . \u00b5 V ) LABELS : a call array of strings giving the real world meaning for each dimension of the MAP . DATA . ADC array e . g . { 'Time' 'Sensor number' } - default 'Not Set' . SWAPBYTES : true / false flag indicating whether disc data need to be byte swapped NOTE : SCALE and DC should be doubles but are not forced to double precision . If you use a different class , be aware that mixed - class arithmetic will be executed , e . g . by subsref , and the returned values may not be double . Creating adcarray objects : Examples : OBJ = ADCARRAY () creates a default object ( . Map is a structure ) OBJ = ADCARRAY ( IN ) creates an object where : obj . Map is a memmapfile object if IN is such as object . Note that data should be in IN . MAP . DATA . ADC - explicitly provide a format to memmapfile . m when creating IN to create the Data structure with a DATA . ADC field e . g . m = memmapfile ( 'mydata.dat' , 'format' ,{ 'int16' [ 20 200 200 ] 'Adc' }, ... 'repeat' , 1 ) or obj . Map is a structure if IN is not a memmapfile object , in which case the contents of IN will be placed in the . Data . Adc field . In this case . Data . Adc may be sparse . OBJ = ADCARRAY ( IN , SCALE ) OBJ = ADCARRAY ( IN , SCALE , DC ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS , LABELS ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS , LABELS , SWAPBYTES ) set the relevant properties as described above . OBJ = ADCARRAY ( S ) casts structure s to adcarry class . s must have the appropriate fields . READING ADCARRAY PROPERTIES : ADCARRAY objects can be read as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:) ( but see * Note below ), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : end ) etc return double precision results after byte swapping if required , then applying the scale and offset to the appropriate elements of obj . Map . Data . Adc and transforming them via obj . Func i . e . obj ( ... ) is equivalent to : if obj . Swapbytes == true obj = swapbytes ( obj . Map . Data . Adc ( ... )); else obj = obj . Map . Data . Adc ( ... ); end obj = func ( double ( obj ) * obj . Scale + obj . DC ) It follows that you can not use this syntax to assign arrays of adcarrays e . g . x ( 2 ) = adcarray () is invalid ( though cell arrays of adcarrays are OK e . g . x { 2 } = adcarray ()) . Note that SIZE () and END are overloaded for adcarray objects and return the size ( or end index ) of the obj . Map . Data . Adc property ( or field ) . ------------------------------------------------------------------------- * Note : CHANGE : 23.12 . 06 The following exception has been introduced : If the adcarray object contains a vector , the obj (:) syntax returns the object as an adcarray containing a column vector . This allows us to maintain the advantage of the adcarray memory mapping in MATLAB supplied functions that call , e . g . , x = x (:) to ensure that x is aligned as a column vector On a 2 D or higher matrix , obj (:) still returns a double matrix ------------------------------------------------------------------------- Field access with '.' or using GET works as with other objects E . g . get ( obj , 'Scale' ) or obj . Map . Data . Adc returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Adc ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling or offseting ) . obj without subscription passes the object obj at the command prompt displays a summary of the contents of obj USING FUNC FUNC may be a handle to a simple function to transform the data ( e . g . @ abs ) . This function will be called whenever adcarrays return data via subsref . The untransformed output from subsref is automatically passed as the first input argument . If func is a cell array , FUNC { 2 : end } will be passed as additonal arguments to FUNC . e . g . FUNC = { @ detrend , 'linear' ) will invoke detrend ( data , 'linear' ) so x = obj ( 1 : 1000 ) will return x = detrend ( double ( x . Map . Data . Adc ( 1 : 1000 ) * x . Scale + obj . DC , 'linear' ) WRITING TO ADCARRAY PROPERTIES : Fields can be changed using '.' or SET e . g . obj . Func = @ abs or set ( obj , 'Scale' , 10 ) . The adcarray data field is intended to be primarily read only but write access to the obj . Map . Data . Adc property is available if the obj . Map . Writable function is 'true' ( Note that you will need to apply the inverse of func ( where appropriate ), remove the offset and scale the data ( by 1.0 / obj . Scale ) then cast to the appropriate class explicitly ) . Direct assignment to an adcarray as though if were a double precision array overwrites the adcarray with a double precision array - and therefore is generally pointless obj ( 1 : 10 ) = 1 where obj is an adcarray is equivalent to obj = obj () % Convert to double via SUBSREF ( scaled , offset and transformed ) obj ( 1 : 10 ) = 1 % set elements 1 : 10 in the double array to 1 This behaviour can be useful when passing adcarrays to standard MATLAB functions ( see ADCARRAY / SUBSASGN for further details ) HORZCAT and VERTCAT also give double precision results with adcarrays See also MEMMAPFILE , ADCARRAY / SUBSREF , ADCARRAY / SUBSASGN , ADCARRAY / GET , ADCARRAY / SET , ADCARRAY / HORZCAT , ADCARRAY / VERTCAT , ADCARRAY / DISPLAY , ADCARRAY / END , ADCARRAY / SIZE Author : Malcolm Lidierth Copyright \u00a9 2006 King \u0092 s College London Revisions : 01.10 . 06 Bytes swapping added 05.12 . 06 Coding tidied 05.11 . 07 Force char cast on Units when empty 19.03 . 08 Support structure input 03.01 . 10 Add default constructor Documentation for adcarray doc adcarray","title":"adcarray"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/adcarray.m/#adcarray","text":"ADCARRAY contructor for adcarray class objects ADCARRAY objects allow data to be accessed as though the adcarray was a double array while storing the data as a memmapfile object , or as an array of another class e . g . int16 . The data in an adcarray might typically be values from an analog - digital convertor that are stored in a file and mapped via the memmapfile object . An ADCARRAY object usually contains a memmapfile object , together with a scale and offset to convert the values stored on disc ( and pointed to by the memmapfile object ) to real world numbers which are returned as double precision . These can also be transformed by a function pointed to by a handle stored in the adcarray object . Referencing an ADCARRAY object as though it were a double precision array i . e . using obj ( ... ) returns a scaled , offset and transformed double precision array regardless of the native format of the data in the memmapfile object . These can be passed as input arguments to other MATLAB functions e . g . s = sum ( obj ()) . Also , the memmapfile object can be replaced by a structure where adcarrays are used to store data in MATLAB memory space without using memmapfile ( which removes the need for linkage to a disc file ) . ADCARRAY objects have seven properties MAP : [ 1 ] A memmapfile object containing the data or [ 2 ] A structure containing the data In either case , the data is available in obj . Map . Data . Adc or by using the obj () syntax ( see below ) SCALE : Multiplier to convert data to real world values DC : Value added to returned data after scaling FUNC : A function handle UNITS : A string indicating the real world units after scaling ( e . g . \u00b5 V ) LABELS : a call array of strings giving the real world meaning for each dimension of the MAP . DATA . ADC array e . g . { 'Time' 'Sensor number' } - default 'Not Set' . SWAPBYTES : true / false flag indicating whether disc data need to be byte swapped NOTE : SCALE and DC should be doubles but are not forced to double precision . If you use a different class , be aware that mixed - class arithmetic will be executed , e . g . by subsref , and the returned values may not be double . Creating adcarray objects : Examples : OBJ = ADCARRAY () creates a default object ( . Map is a structure ) OBJ = ADCARRAY ( IN ) creates an object where : obj . Map is a memmapfile object if IN is such as object . Note that data should be in IN . MAP . DATA . ADC - explicitly provide a format to memmapfile . m when creating IN to create the Data structure with a DATA . ADC field e . g . m = memmapfile ( 'mydata.dat' , 'format' ,{ 'int16' [ 20 200 200 ] 'Adc' }, ... 'repeat' , 1 ) or obj . Map is a structure if IN is not a memmapfile object , in which case the contents of IN will be placed in the . Data . Adc field . In this case . Data . Adc may be sparse . OBJ = ADCARRAY ( IN , SCALE ) OBJ = ADCARRAY ( IN , SCALE , DC ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS , LABELS ) OBJ = ADCARRAY ( IN , SCALE , DC , FUNC , UNITS , LABELS , SWAPBYTES ) set the relevant properties as described above . OBJ = ADCARRAY ( S ) casts structure s to adcarry class . s must have the appropriate fields . READING ADCARRAY PROPERTIES : ADCARRAY objects can be read as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:) ( but see * Note below ), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : end ) etc return double precision results after byte swapping if required , then applying the scale and offset to the appropriate elements of obj . Map . Data . Adc and transforming them via obj . Func i . e . obj ( ... ) is equivalent to : if obj . Swapbytes == true obj = swapbytes ( obj . Map . Data . Adc ( ... )); else obj = obj . Map . Data . Adc ( ... ); end obj = func ( double ( obj ) * obj . Scale + obj . DC ) It follows that you can not use this syntax to assign arrays of adcarrays e . g . x ( 2 ) = adcarray () is invalid ( though cell arrays of adcarrays are OK e . g . x { 2 } = adcarray ()) . Note that SIZE () and END are overloaded for adcarray objects and return the size ( or end index ) of the obj . Map . Data . Adc property ( or field ) . ------------------------------------------------------------------------- * Note : CHANGE : 23.12 . 06 The following exception has been introduced : If the adcarray object contains a vector , the obj (:) syntax returns the object as an adcarray containing a column vector . This allows us to maintain the advantage of the adcarray memory mapping in MATLAB supplied functions that call , e . g . , x = x (:) to ensure that x is aligned as a column vector On a 2 D or higher matrix , obj (:) still returns a double matrix ------------------------------------------------------------------------- Field access with '.' or using GET works as with other objects E . g . get ( obj , 'Scale' ) or obj . Map . Data . Adc returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Adc ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling or offseting ) . obj without subscription passes the object obj at the command prompt displays a summary of the contents of obj USING FUNC FUNC may be a handle to a simple function to transform the data ( e . g . @ abs ) . This function will be called whenever adcarrays return data via subsref . The untransformed output from subsref is automatically passed as the first input argument . If func is a cell array , FUNC { 2 : end } will be passed as additonal arguments to FUNC . e . g . FUNC = { @ detrend , 'linear' ) will invoke detrend ( data , 'linear' ) so x = obj ( 1 : 1000 ) will return x = detrend ( double ( x . Map . Data . Adc ( 1 : 1000 ) * x . Scale + obj . DC , 'linear' ) WRITING TO ADCARRAY PROPERTIES : Fields can be changed using '.' or SET e . g . obj . Func = @ abs or set ( obj , 'Scale' , 10 ) . The adcarray data field is intended to be primarily read only but write access to the obj . Map . Data . Adc property is available if the obj . Map . Writable function is 'true' ( Note that you will need to apply the inverse of func ( where appropriate ), remove the offset and scale the data ( by 1.0 / obj . Scale ) then cast to the appropriate class explicitly ) . Direct assignment to an adcarray as though if were a double precision array overwrites the adcarray with a double precision array - and therefore is generally pointless obj ( 1 : 10 ) = 1 where obj is an adcarray is equivalent to obj = obj () % Convert to double via SUBSREF ( scaled , offset and transformed ) obj ( 1 : 10 ) = 1 % set elements 1 : 10 in the double array to 1 This behaviour can be useful when passing adcarrays to standard MATLAB functions ( see ADCARRAY / SUBSASGN for further details ) HORZCAT and VERTCAT also give double precision results with adcarrays See also MEMMAPFILE , ADCARRAY / SUBSREF , ADCARRAY / SUBSASGN , ADCARRAY / GET , ADCARRAY / SET , ADCARRAY / HORZCAT , ADCARRAY / VERTCAT , ADCARRAY / DISPLAY , ADCARRAY / END , ADCARRAY / SIZE Author : Malcolm Lidierth Copyright \u00a9 2006 King \u0092 s College London Revisions : 01.10 . 06 Bytes swapping added 05.12 . 06 Coding tidied 05.11 . 07 Force char cast on Units when empty 19.03 . 08 Support structure input 03.01 . 10 Add default constructor Documentation for adcarray doc adcarray","title":"adcarray"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/display.m/","text":"display \u00b6 DISPLAY method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/display.m/#display","text":"DISPLAY method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/double.m/","text":"double \u00b6 DOUBLE methods overloaded for ADCARRAYS Example : x = double ( obj ); returns the data from obj . Map . Data . Adc as double precision after scaling and applying the offset ( and the function in obj . Func if one is specified ) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2007","title":"double"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/double.m/#double","text":"DOUBLE methods overloaded for ADCARRAYS Example : x = double ( obj ); returns the data from obj . Map . Data . Adc as double precision after scaling and applying the offset ( and the function in obj . Func if one is specified ) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2007","title":"double"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/end.m/","text":"end \u00b6 END method overloaded for adcarray objects For adcarray objects , END applies to the data in the Adcarray . Map . Data . Adc property . Thus : end ( obj (:, 2 )) is equivalent to end ( obj . Map . Data . Adc (:, 2 )) See also END Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"end"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/end.m/#end","text":"END method overloaded for adcarray objects For adcarray objects , END applies to the data in the Adcarray . Map . Data . Adc property . Thus : end ( obj (:, 2 )) is equivalent to end ( obj . Map . Data . Adc (:, 2 )) See also END Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"end"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/get.m/","text":"get \u00b6 GET method overloaded for adcarray objects Examples : GET ( OBJ ) displays properties A = GET ( OBJ ) returns a structure A = GET ( OBJ , PROP ) < m - by - n cell array > = GET ( OBJ , < property cell array > ) where PROP is a string or cell array of strings See also GET , ADCARRAY / SUBSREF , ADCARRAY / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/get.m/#get","text":"GET method overloaded for adcarray objects Examples : GET ( OBJ ) displays properties A = GET ( OBJ ) returns a structure A = GET ( OBJ , PROP ) < m - by - n cell array > = GET ( OBJ , < property cell array > ) where PROP is a string or cell array of strings See also GET , ADCARRAY / SUBSREF , ADCARRAY / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/horzcat.m/","text":"horzcat \u00b6 HORZCAT method overloaded for adcarray objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called by matlab when A1 , A2 etc includes an adcarray object See also HORZCAT , ADCARRAY / VERTCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"horzcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/horzcat.m/#horzcat","text":"HORZCAT method overloaded for adcarray objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called by matlab when A1 , A2 etc includes an adcarray object See also HORZCAT , ADCARRAY / VERTCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"horzcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/isreal.m/","text":"isreal \u00b6 ISREAL method overloaded for adcarray objects The builtin ISREAL returns false for adcarray objects . As this is called by some Mathworks supplied functions it can be a nuisance . This routine fixes the problem by returning true - adcarrays are always real valued Author : Malcolm Lidierth 02 / 07 Copyright \u00a9 The Author & King 's College London 2007","title":"isreal"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/isreal.m/#isreal","text":"ISREAL method overloaded for adcarray objects The builtin ISREAL returns false for adcarray objects . As this is called by some Mathworks supplied functions it can be a nuisance . This routine fixes the problem by returning true - adcarrays are always real valued Author : Malcolm Lidierth 02 / 07 Copyright \u00a9 The Author & King 's College London 2007","title":"isreal"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/issparse_.m/","text":"issparse_ \u00b6 issparse method for adcarray objects Example TF=issparse(obj) returns true is the contents of obj . Map . Data . Adc are sparse ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"issparse_"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/issparse_.m/#issparse_","text":"issparse method for adcarray objects Example TF=issparse(obj) returns true is the contents of obj . Map . Data . Adc are sparse ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"issparse_"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/length.m/","text":"length \u00b6 LENGTH function overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"length"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/length.m/#length","text":"LENGTH function overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"length"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/max.m/","text":"max \u00b6 MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"max"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/max.m/#max","text":"MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"max"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/min.m/","text":"min \u00b6 MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"min"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/min.m/#min","text":"MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"min"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/minus.m/","text":"minus \u00b6 MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"minus"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/minus.m/#minus","text":"MAX method overloaded for adcarray objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2009-","title":"minus"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/set.m/","text":"set \u00b6 SET method overloaded for adcarray objects Examples : A = SET ( OBJ ) returns a structure SET ( OBJ , 'PROP1' , VAL1 , 'PROP2' , VAL2 .... ) SET ( OBJ , < property cell array > , < property value array > ) sets the appropriate properties to the supplied values See also SET , ADCARRAY / SUBSREF , ADCARRAY / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/set.m/#set","text":"SET method overloaded for adcarray objects Examples : A = SET ( OBJ ) returns a structure SET ( OBJ , 'PROP1' , VAL1 , 'PROP2' , VAL2 .... ) SET ( OBJ , < property cell array > , < property value array > ) sets the appropriate properties to the supplied values See also SET , ADCARRAY / SUBSREF , ADCARRAY / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/size.m/","text":"size \u00b6 SIZE method overloaded for adcarray objects For adcarray objects SIZE applies to the data in the OBJ . MAP . DATA . ADC property . Thus : SIZE ( OBJ ) or SIZE ( OBJ ( ... )) is equivalent to SIZE ( OBJ . MAP . DATA . ADC ) or SIZE ( OBJ . MAP . DATA . ADC ( .. )) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/size.m/#size","text":"SIZE method overloaded for adcarray objects For adcarray objects SIZE applies to the data in the OBJ . MAP . DATA . ADC property . Thus : SIZE ( OBJ ) or SIZE ( OBJ ( ... )) is equivalent to SIZE ( OBJ . MAP . DATA . ADC ) or SIZE ( OBJ . MAP . DATA . ADC ( .. )) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/subsasgn.m/","text":"subsasgn \u00b6 SUBSASGN method overloaded for adcarray objects . Examples : OBJ . PROP = VAL OBJ . PROP1 . PROP2 = VAL etc . assigns the value B to the specified property of the adcarray object See ADCARRAY / ADCARRAY for a list of properties When a reference to an adcarray occurs to the left of an equals sign SUBSASGN converts all the data to double precision , scales it , applies the offset , executes obj . Func , does the assignment on the result and then returns it , i . e . obj ( ... ) = ... mycode ... is equivalent to obj = obj (); % Calls adcarray . subsref and returns a double precision array obj ( ... ) = ... mycode ... % Assigns values to the double array Note that the adcarray object is destroyed in the process . This behaviour is useful because it allows adcarrays to be passed as arguments to MATLAB functions ( though not builtins ) . If the function attempts to assign a value to the object , it will be converted to double ( which may cause out - of - memory problems with large data sets ) . Otherwise it will remain an adcarray , with the usual memory saving . See also SUBSASGN , ADCARRAY / SUBSREF , ADCARRAY / ADCARRAY , ADCARRAY / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006 Correction 21 / 7 / 06 - delete isfield ( val , 'Repeat' )","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/subsasgn.m/#subsasgn","text":"SUBSASGN method overloaded for adcarray objects . Examples : OBJ . PROP = VAL OBJ . PROP1 . PROP2 = VAL etc . assigns the value B to the specified property of the adcarray object See ADCARRAY / ADCARRAY for a list of properties When a reference to an adcarray occurs to the left of an equals sign SUBSASGN converts all the data to double precision , scales it , applies the offset , executes obj . Func , does the assignment on the result and then returns it , i . e . obj ( ... ) = ... mycode ... is equivalent to obj = obj (); % Calls adcarray . subsref and returns a double precision array obj ( ... ) = ... mycode ... % Assigns values to the double array Note that the adcarray object is destroyed in the process . This behaviour is useful because it allows adcarrays to be passed as arguments to MATLAB functions ( though not builtins ) . If the function attempts to assign a value to the object , it will be converted to double ( which may cause out - of - memory problems with large data sets ) . Otherwise it will remain an adcarray , with the usual memory saving . See also SUBSASGN , ADCARRAY / SUBSREF , ADCARRAY / ADCARRAY , ADCARRAY / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006 Correction 21 / 7 / 06 - delete isfield ( val , 'Repeat' )","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/subsref.m/","text":"subsref \u00b6 SUBSREF method overloaded for adcarray objects . READING ADCARRAY PROPERTIES : adcarray objects can be read or passed as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : 20 ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Adc and transforming them via obj . Func . Data will be byte swapped first if necessary i . e . obj ( ... ) is equivalent to : if obj . Swapbytes == true obj = swapbytes ( obj . Map . Data . Adc ( ... )); else obj = func ( double ( obj ) * obj . Scale + obj . DC ) or obj = Func { 1 }( double ( obj ) * obj . Scale + obj . DC , obj . Func { 2 : end }) if func is a cell array ( help adcarray for details ) It follows that you can not use '()' syntax to access arrays of adcarrays e . g . x ( 2 ) = adcarray () is invalid ( although you can access cell arrays of adcarrays ) . ------------------------------------------------------------------------- CHANGE : 23.12 . 06 The following exception has been introduced : If the adcarray object contains a vector , the obj (:) syntax returns the object as an adcarray containing a column vector . This allows us to maintain the advantage of the adcarray memory mapping in MATLAB supplied functions that call , e . g . , x = x (:) to ensure that x is aligned as a column vector On a 2 D or higher matrix , obj (:) still returns a double matrix ------------------------------------------------------------------------- Examples : A = OBJ (); A = OBJ ( 1 : 10 ); A = FUNCTION ( OBJ ()); Field access with '.' works as with other objects e . g . obj . Map . Data . Adc returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Adc ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling etc . ) . obj without subscription assigns / passes the object see ADCARRAY / SUBSASGN for further details [ e . g . A = FILTFILT ( OBJ );] obj at the command prompt displays a summary of the contents of obj See also ADCARRAY / SUBSASGN , ADCARRAY / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006- Revisions 23.12 . 06 obj (:) exception handling for vectors introduced 27.09 . 07 See within 15.30 . 08 Add byte swapping when accessing the memmapfile data directly as Map . Data . Adc ( ... )","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/subsref.m/#subsref","text":"SUBSREF method overloaded for adcarray objects . READING ADCARRAY PROPERTIES : adcarray objects can be read or passed as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : 20 ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Adc and transforming them via obj . Func . Data will be byte swapped first if necessary i . e . obj ( ... ) is equivalent to : if obj . Swapbytes == true obj = swapbytes ( obj . Map . Data . Adc ( ... )); else obj = func ( double ( obj ) * obj . Scale + obj . DC ) or obj = Func { 1 }( double ( obj ) * obj . Scale + obj . DC , obj . Func { 2 : end }) if func is a cell array ( help adcarray for details ) It follows that you can not use '()' syntax to access arrays of adcarrays e . g . x ( 2 ) = adcarray () is invalid ( although you can access cell arrays of adcarrays ) . ------------------------------------------------------------------------- CHANGE : 23.12 . 06 The following exception has been introduced : If the adcarray object contains a vector , the obj (:) syntax returns the object as an adcarray containing a column vector . This allows us to maintain the advantage of the adcarray memory mapping in MATLAB supplied functions that call , e . g . , x = x (:) to ensure that x is aligned as a column vector On a 2 D or higher matrix , obj (:) still returns a double matrix ------------------------------------------------------------------------- Examples : A = OBJ (); A = OBJ ( 1 : 10 ); A = FUNCTION ( OBJ ()); Field access with '.' works as with other objects e . g . obj . Map . Data . Adc returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Adc ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling etc . ) . obj without subscription assigns / passes the object see ADCARRAY / SUBSASGN for further details [ e . g . A = FILTFILT ( OBJ );] obj at the command prompt displays a summary of the contents of obj See also ADCARRAY / SUBSASGN , ADCARRAY / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006- Revisions 23.12 . 06 obj (:) exception handling for vectors introduced 27.09 . 07 See within 15.30 . 08 Add byte swapping when accessing the memmapfile data directly as Map . Data . Adc ( ... )","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/vertcat.m/","text":"vertcat \u00b6 VERTCAT method overloaded for adcarray objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called when A1 , A2 etc includes an adcarray object See also VERTCAT , ADCARRAY / HORZCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"vertcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40adcarray/vertcat.m/#vertcat","text":"VERTCAT method overloaded for adcarray objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called when A1 , A2 etc includes an adcarray object See also VERTCAT , ADCARRAY / HORZCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"vertcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/Contents.m/","text":"Contents \u00b6 @ JCONTROL Files delete - method overloaded for the JCONTROL class get - method overloaded for JCONTROL class getappdata - function overloaded for JCONTROL class isappdata - function oveloaded for the JCONTROL class jcontrol - constructor for JCONTROL class rmappdata - function oveloaded for the JCONTROL class set - method overloaded for JCONTROL class setappdata - function overloaded for JCONTROL class subsasgn - method overloaded for JCONTROL class subsref - method overloaded for jcontrol class ancestor - function overloaded as JCONTROL method","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/Contents.m/#contents","text":"@ JCONTROL Files delete - method overloaded for the JCONTROL class get - method overloaded for JCONTROL class getappdata - function overloaded for JCONTROL class isappdata - function oveloaded for the JCONTROL class jcontrol - constructor for JCONTROL class rmappdata - function oveloaded for the JCONTROL class set - method overloaded for JCONTROL class setappdata - function overloaded for JCONTROL class subsasgn - method overloaded for JCONTROL class subsref - method overloaded for jcontrol class ancestor - function overloaded as JCONTROL method","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/ancestor.m/","text":"ancestor \u00b6 ANCESTOR function overloaded as JCONTROL method Example : h = ancestor ( obj , type ) returns the appropriate ancestor of the obj . hgcontainer See also builtin / ancestor","title":"ancestor"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/ancestor.m/#ancestor","text":"ANCESTOR function overloaded as JCONTROL method Example : h = ancestor ( obj , type ) returns the appropriate ancestor of the obj . hgcontainer See also builtin / ancestor","title":"ancestor"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/close.m/","text":"close \u00b6 Close methods overloaded for JCONTROL objects Simply calls delete . Included as JCONTROL objects can sometimes be used to replace figures/waitbars etc where existing code may call close instead of delete . ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"close"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/close.m/#close","text":"Close methods overloaded for JCONTROL objects Simply calls delete . Included as JCONTROL objects can sometimes be used to replace figures/waitbars etc where existing code may call close instead of delete . ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"close"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/delete.m/","text":"delete \u00b6 DELETE method overloaded for the JCONTROL class DELETE acts on the hgcontainer of the target object . Call this on the parent JCONTROL to delete all its contents . Example: delete(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"delete"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/delete.m/#delete","text":"DELETE method overloaded for the JCONTROL class DELETE acts on the hgcontainer of the target object . Call this on the parent JCONTROL to delete all its contents . Example: delete(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"delete"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/get.m/","text":"get \u00b6 GET method overloaded for JCONTROL class Examples: a=get(obj) a=get(obj , PropertyName); If obj is a vector of JCONTROLs , a cell array will be returned See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/get.m/#get","text":"GET method overloaded for JCONTROL class Examples: a=get(obj) a=get(obj , PropertyName); If obj is a vector of JCONTROLs , a cell array will be returned See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/getappdata.m/","text":"getappdata \u00b6 GETAPPDATA function overloaded for JCONTROL class GETAPPDATA returns data from the application data area of the hgcontrol component of a JCONTROL Example: data=gatappdata(obj) data=getappdata(obj , FieldName) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA , JCONTROL/RMAPPDATA , GETAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"getappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/getappdata.m/#getappdata","text":"GETAPPDATA function overloaded for JCONTROL class GETAPPDATA returns data from the application data area of the hgcontrol component of a JCONTROL Example: data=gatappdata(obj) data=getappdata(obj , FieldName) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA , JCONTROL/RMAPPDATA , GETAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"getappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/isappdata.m/","text":"isappdata \u00b6 ISAPPDATA function oveloaded for the JCONTROL class Examples: isappdata(obj) isappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA ISAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"isappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/isappdata.m/#isappdata","text":"ISAPPDATA function oveloaded for the JCONTROL class Examples: isappdata(obj) isappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA ISAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"isappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/jcontrol.m/","text":"jcontrol \u00b6 JCONTROL constructor for JCONTROL class JCONTROL provides an easy way to integrate a full range of java GUIs from the java . awt and javax . swing libraries into MATLAB . Example : obj = JCONTROL ( Parent , Style ); obj = JCONTROL ( Parent , Style , PropertyName1 , PropertyValue1 , ... PropertyName2 , PropertyValue2 .... ); Inputs : Parent : the handle of a Matlab figure or other container for the resulting component ( see below ) Style : string describing a java component e . g . 'javax.swing.JPanel' , 'javax.swing.JButton' or a variable containing a java object PropertName / PropertyValue pairs : these are automatically assigned to the HG container or the java component as appropriate . Pre - create the java object if you need to pass arguments to the constructor e . g . javaobj = javax . swing ( ............... ); obj = jcontrol ( Parent , javaobj ); ------------------------------------------------------------------------- CHANGES 18.10 . 08 ------------------------------------------------------------------------- From R2008b onwards , hgjavacomponents may not parent other hgjavacomponents . To accommodate this change , jcontrols now need to be associated with a uipanel . These will be created automatically when needed but users may explicitly specify a uipanel when required , e . g . to create nested panels . Valid parents for a jcontrol are : The ML Root : A figure / uipanel will be created Figure : A uipanel will be created Jcontrol / Jcontrol hgcontainer ( hgjavacomponent ) The existing uipanel will be used uipanel The uipanel will be used as parent . Note that the Units and Position of the jcontrol will not be linked to the uipanel . This allows uipanels created explicitly by the user to be nested . The handle of the associated uipanel is returned in the 'uipanel' field of the jcontrol object . This field will be left empty if no linked uipanel is created ( if the specified parent was a uipanel ) . The handle is also added to the hgcontrol in a 'uipanel' property . These changes have been tested without problems on R2006a and R2008b . The new methods should be backwards compatible with old code but note that when instantiating a uipanel via the jcontrol constructor , you must specify Units before Position in the input list to ensure synchrony between the uipanel and the hgcontainer while they are being set up . The jcontrol subsasgn and set methods will maintain synchrony subsequently . Always set the Units and Position through these methods , not by accessing the uipanel directly . ------------------------------------------------------------------------- By default , JCONTROLs are returned with Units set to 'normalized' . USE : Build a GUI with repeated calls to JCONTROL in much the same way as with MATLAB 's uicontrol function e.g.: h = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'pixels' , ... 'Position' ,[ 100 100 200 200 ]); h ( 2 ) = jcontrol ( h ( 1 ), 'javax.swing.JComboBox' , ... 'Position' ,[ 0.1 0.8 0.8 0.1 ]); h ( 2 ) . addItem ( 'Item1' ); h ( 2 ) . addItem ( 'Item2' ); h ( 3 ) = jcontrol ( h ( 1 ), 'javax.swing.JCheckBox' , ... 'Position' ,[ 0.1 0.1 0.1 0.1 ], ... 'Label' , 'My check box' ); See the jcontrolDemo () for a fuller example . A JCONTROL aggregates the MATLAB handle graphics container and the Java component ( as returned by MATLAB 's JAVACOMPONENT function) into a single object . Access to the JCONTROL 's properties is provided by GET/SET calls. These automatically determine whether the target property is in the HG container or java object . myobject = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Name' , 'MyPanel' ); set ( myobject , 'Position' , [ 0.4 0.4 0.4 0.2 ], ... 'Enabled' , 0 ); pos = get ( myobject , 'Units' ); Note that you can mix HG container properties ( e . g . Units , Position ) and java component properties ( e . g . Name , Enabled ) in single calls to JCONTROL and SET . Use the HG container to control the Units , Position , and Visible properties MATLAB dot notation may also be used . This notation also provides access to the java object 's methods pos = myobject . Position ; sz = myObject . getSize ; myobject . setEnabled ( 1 ); myobject . setToolTipText ( 'My tip' ); myobject . setOpaque ( 1 ); -------------------------------------------------------------------------- UNITS , POSITION and VISIBLE properties Set these by accessing the JCONTROL or its container ( not the hgcontrol ) . MATLAB links these properties between the container and the java control , but unidirectionally . Note that JCONTROL methods always act on / return the Visible property of the container ( 'on' or 'off' ) which will also update the java control . Do not use the setVisible () methods . -------------------------------------------------------------------------- Overloaded class methods are case - insensitive for properties but case - sensitive for java methods CALLBACKS Setting up callbacks The simplest way to set up a callback is through the SET method myPanel = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Position' ,[ 0.3 0.3 0.5 0.5 ]); set ( myPanel , 'MouseClickedCallback' , 'MyCallback' ) or set ( myPanel , 'MouseClickedCallback' , @ MyCallback ); or set ( myPanel , 'MouseClickedCallback' , { @ MyCallback A B C ... }); The callback then takes the usual MATLAB form , e . g . function MyCallback ( hObject , EventData ) function MyCallback ( hObject , EventData , varargin ) Accessing JCONTROL objects in callbacks : The handle received by a callback will be that of the java control object contained in the JCONTROL , not the JCONTROL itself . In addition , GCO will return empty and GCBO will not return the parent figure handle . However , the JCONTROL constructor adds the HG container handle to the java component 's properties. This can be used to access the container and its parent figure from within the callback e . g . get ( hObject . hghandle ); % gets the HG container ancestor ( hObject . hghandle , 'figure' ) % gets the parent figure handle To cross - reference from the container , JCONTROL places a reference to the java control in the container 's UserData area e.g. hgc = findobj ( 'Tag' , 'MyCustomTag' ) javacontrol = get ( hgc , 'UserData' ); Accessing data in callbacks Data can be passed to a callback , as above , with optional input arguments . In addition , data that is specific to the control can be stored in the application data area of the control e . g . to return values dependent on the selection of a popup menu data = getappdata ( hObject , 'data' ); returnvalues = data ( hObject . getSelectedItem + 1 ); Note : + 1 because the item numbering is zero based for the java object . The HG container has a separate application data area . R2006a or higher only : GETAPPDATA , SETAPPDATA ISAPPDATA and RMAPPDATA methods have been overloaded for JCONTROL objects . These place / return data from the application data area of the java control . Take care if removing the whole application data area - TMW may place data in there too . The HG container has a separate application data area . Notes : If a property name occurs in both the HG container and the java object , the JCONTROL methods can not unambiguously identify the source / target and it must be defined explicitly by the user e . g . get ( myobject . hgcontainer , 'Opaque' ); set ( myobject . hgcontrol , 'Opaque' , 0 ); The JCONTROL methods test for ambiguity and issue an error message when it arises . Note that the test uses MATLAB 's isprop and is case insensitive . It may also detect properties not listed by the MATLAB builtin GET function for the hgcontrol such as Visible . The JCONTROL methods always act on the Visible property of the hgcontainer , letting MATLAB update the object automatically ( see above ) . The DeleteFcn property of the hgcontainer is set by the JAVACOMPONENT function . If this property is changed , the new callback must explicitly delete the hgcontrol . See also : jcontrol / get , jcontrol / set , jcontrol / subsasgn , jcontrol / subsref jcontrol / setappdata , jcontrol / getappdata , jcontrol / isappdata jcontrol / rmappdata , jcontrol / delete javacomponent , gco , gcbo -------------------------------------------------------------------------- Acknowledgements : The JCONTROL class was partly inspired by Yair Altman 's < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=14583&objectType=file\" > uicomponent </ a > function . The functions take different routes to achieve similar ends . JCONTROL is rather faster - which is significant when building complex GUIs , but UICOMPONENT accepts the same calling conventions as MATLAB 's UICONTROL while JCONTROL does not . -------------------------------------------------------------------------- ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 12.09 . 07 Allow pre - constructed java objects on input 18.10 . 08 Modified for R2008b compatability . Userdata property added Documentation for jcontrol doc jcontrol","title":"jcontrol"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/jcontrol.m/#jcontrol","text":"JCONTROL constructor for JCONTROL class JCONTROL provides an easy way to integrate a full range of java GUIs from the java . awt and javax . swing libraries into MATLAB . Example : obj = JCONTROL ( Parent , Style ); obj = JCONTROL ( Parent , Style , PropertyName1 , PropertyValue1 , ... PropertyName2 , PropertyValue2 .... ); Inputs : Parent : the handle of a Matlab figure or other container for the resulting component ( see below ) Style : string describing a java component e . g . 'javax.swing.JPanel' , 'javax.swing.JButton' or a variable containing a java object PropertName / PropertyValue pairs : these are automatically assigned to the HG container or the java component as appropriate . Pre - create the java object if you need to pass arguments to the constructor e . g . javaobj = javax . swing ( ............... ); obj = jcontrol ( Parent , javaobj ); ------------------------------------------------------------------------- CHANGES 18.10 . 08 ------------------------------------------------------------------------- From R2008b onwards , hgjavacomponents may not parent other hgjavacomponents . To accommodate this change , jcontrols now need to be associated with a uipanel . These will be created automatically when needed but users may explicitly specify a uipanel when required , e . g . to create nested panels . Valid parents for a jcontrol are : The ML Root : A figure / uipanel will be created Figure : A uipanel will be created Jcontrol / Jcontrol hgcontainer ( hgjavacomponent ) The existing uipanel will be used uipanel The uipanel will be used as parent . Note that the Units and Position of the jcontrol will not be linked to the uipanel . This allows uipanels created explicitly by the user to be nested . The handle of the associated uipanel is returned in the 'uipanel' field of the jcontrol object . This field will be left empty if no linked uipanel is created ( if the specified parent was a uipanel ) . The handle is also added to the hgcontrol in a 'uipanel' property . These changes have been tested without problems on R2006a and R2008b . The new methods should be backwards compatible with old code but note that when instantiating a uipanel via the jcontrol constructor , you must specify Units before Position in the input list to ensure synchrony between the uipanel and the hgcontainer while they are being set up . The jcontrol subsasgn and set methods will maintain synchrony subsequently . Always set the Units and Position through these methods , not by accessing the uipanel directly . ------------------------------------------------------------------------- By default , JCONTROLs are returned with Units set to 'normalized' . USE : Build a GUI with repeated calls to JCONTROL in much the same way as with MATLAB 's uicontrol function e.g.: h = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'pixels' , ... 'Position' ,[ 100 100 200 200 ]); h ( 2 ) = jcontrol ( h ( 1 ), 'javax.swing.JComboBox' , ... 'Position' ,[ 0.1 0.8 0.8 0.1 ]); h ( 2 ) . addItem ( 'Item1' ); h ( 2 ) . addItem ( 'Item2' ); h ( 3 ) = jcontrol ( h ( 1 ), 'javax.swing.JCheckBox' , ... 'Position' ,[ 0.1 0.1 0.1 0.1 ], ... 'Label' , 'My check box' ); See the jcontrolDemo () for a fuller example . A JCONTROL aggregates the MATLAB handle graphics container and the Java component ( as returned by MATLAB 's JAVACOMPONENT function) into a single object . Access to the JCONTROL 's properties is provided by GET/SET calls. These automatically determine whether the target property is in the HG container or java object . myobject = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Name' , 'MyPanel' ); set ( myobject , 'Position' , [ 0.4 0.4 0.4 0.2 ], ... 'Enabled' , 0 ); pos = get ( myobject , 'Units' ); Note that you can mix HG container properties ( e . g . Units , Position ) and java component properties ( e . g . Name , Enabled ) in single calls to JCONTROL and SET . Use the HG container to control the Units , Position , and Visible properties MATLAB dot notation may also be used . This notation also provides access to the java object 's methods pos = myobject . Position ; sz = myObject . getSize ; myobject . setEnabled ( 1 ); myobject . setToolTipText ( 'My tip' ); myobject . setOpaque ( 1 ); -------------------------------------------------------------------------- UNITS , POSITION and VISIBLE properties Set these by accessing the JCONTROL or its container ( not the hgcontrol ) . MATLAB links these properties between the container and the java control , but unidirectionally . Note that JCONTROL methods always act on / return the Visible property of the container ( 'on' or 'off' ) which will also update the java control . Do not use the setVisible () methods . -------------------------------------------------------------------------- Overloaded class methods are case - insensitive for properties but case - sensitive for java methods CALLBACKS Setting up callbacks The simplest way to set up a callback is through the SET method myPanel = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Position' ,[ 0.3 0.3 0.5 0.5 ]); set ( myPanel , 'MouseClickedCallback' , 'MyCallback' ) or set ( myPanel , 'MouseClickedCallback' , @ MyCallback ); or set ( myPanel , 'MouseClickedCallback' , { @ MyCallback A B C ... }); The callback then takes the usual MATLAB form , e . g . function MyCallback ( hObject , EventData ) function MyCallback ( hObject , EventData , varargin ) Accessing JCONTROL objects in callbacks : The handle received by a callback will be that of the java control object contained in the JCONTROL , not the JCONTROL itself . In addition , GCO will return empty and GCBO will not return the parent figure handle . However , the JCONTROL constructor adds the HG container handle to the java component 's properties. This can be used to access the container and its parent figure from within the callback e . g . get ( hObject . hghandle ); % gets the HG container ancestor ( hObject . hghandle , 'figure' ) % gets the parent figure handle To cross - reference from the container , JCONTROL places a reference to the java control in the container 's UserData area e.g. hgc = findobj ( 'Tag' , 'MyCustomTag' ) javacontrol = get ( hgc , 'UserData' ); Accessing data in callbacks Data can be passed to a callback , as above , with optional input arguments . In addition , data that is specific to the control can be stored in the application data area of the control e . g . to return values dependent on the selection of a popup menu data = getappdata ( hObject , 'data' ); returnvalues = data ( hObject . getSelectedItem + 1 ); Note : + 1 because the item numbering is zero based for the java object . The HG container has a separate application data area . R2006a or higher only : GETAPPDATA , SETAPPDATA ISAPPDATA and RMAPPDATA methods have been overloaded for JCONTROL objects . These place / return data from the application data area of the java control . Take care if removing the whole application data area - TMW may place data in there too . The HG container has a separate application data area . Notes : If a property name occurs in both the HG container and the java object , the JCONTROL methods can not unambiguously identify the source / target and it must be defined explicitly by the user e . g . get ( myobject . hgcontainer , 'Opaque' ); set ( myobject . hgcontrol , 'Opaque' , 0 ); The JCONTROL methods test for ambiguity and issue an error message when it arises . Note that the test uses MATLAB 's isprop and is case insensitive . It may also detect properties not listed by the MATLAB builtin GET function for the hgcontrol such as Visible . The JCONTROL methods always act on the Visible property of the hgcontainer , letting MATLAB update the object automatically ( see above ) . The DeleteFcn property of the hgcontainer is set by the JAVACOMPONENT function . If this property is changed , the new callback must explicitly delete the hgcontrol . See also : jcontrol / get , jcontrol / set , jcontrol / subsasgn , jcontrol / subsref jcontrol / setappdata , jcontrol / getappdata , jcontrol / isappdata jcontrol / rmappdata , jcontrol / delete javacomponent , gco , gcbo -------------------------------------------------------------------------- Acknowledgements : The JCONTROL class was partly inspired by Yair Altman 's < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=14583&objectType=file\" > uicomponent </ a > function . The functions take different routes to achieve similar ends . JCONTROL is rather faster - which is significant when building complex GUIs , but UICOMPONENT accepts the same calling conventions as MATLAB 's UICONTROL while JCONTROL does not . -------------------------------------------------------------------------- ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 12.09 . 07 Allow pre - constructed java objects on input 18.10 . 08 Modified for R2008b compatability . Userdata property added Documentation for jcontrol doc jcontrol","title":"jcontrol"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/rmappdata.m/","text":"rmappdata \u00b6 RMAPPDATA function oveloaded for the JCONTROL class Examples: rmappdata(obj) rmappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"rmappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/rmappdata.m/#rmappdata","text":"RMAPPDATA function oveloaded for the JCONTROL class Examples: rmappdata(obj) rmappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"rmappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/set.m/","text":"set \u00b6 SET method overloaded for JCONTROL class Examples : set ( obj , PropertyName , PropertyValue ) set ( obj , PropertyName1 , Value1 , PropertyName2 , Value2 .... ) The propertyname / valuename sequence can have an embedded cell array if that contains property / value pairs e . g standardvalues = { 'Units' , 'normalized' } set ( myobj , 'javax.swing.JPane' , ... 'ToolTipText' , 'MyTip' , ... standardvalues ); s Also : set ( obj , s ) set ( obj , pn , pm ) where s in a structure with fieldnames corresponding to property names and values corresponding to property values pn and pm and name / value cell vectors ( note pm may not be a matrix ) If obj is a vector of JCONTROLs , SET will act on each element . In this case , the specified properties must be present in all the JCONTROLs or an error will result See also : jcontrol ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/set.m/#set","text":"SET method overloaded for JCONTROL class Examples : set ( obj , PropertyName , PropertyValue ) set ( obj , PropertyName1 , Value1 , PropertyName2 , Value2 .... ) The propertyname / valuename sequence can have an embedded cell array if that contains property / value pairs e . g standardvalues = { 'Units' , 'normalized' } set ( myobj , 'javax.swing.JPane' , ... 'ToolTipText' , 'MyTip' , ... standardvalues ); s Also : set ( obj , s ) set ( obj , pn , pm ) where s in a structure with fieldnames corresponding to property names and values corresponding to property values pn and pm and name / value cell vectors ( note pm may not be a matrix ) If obj is a vector of JCONTROLs , SET will act on each element . In this case , the specified properties must be present in all the JCONTROLs or an error will result See also : jcontrol ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/setappdata.m/","text":"setappdata \u00b6 SETAPPDATA function overloaded for JCONTROL class SETAPPDATA places data in the application data area of the hgcontrol component of a JCONTROL Example: setappdata(obj , fieldname , data) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA JCONTROL/RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"setappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/setappdata.m/#setappdata","text":"SETAPPDATA function overloaded for JCONTROL class SETAPPDATA places data in the application data area of the hgcontrol component of a JCONTROL Example: setappdata(obj , fieldname , data) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA JCONTROL/RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"setappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/subsasgn.m/","text":"subsasgn \u00b6 SUBSASGN method overloaded for JCONTROL class subsasgn provides access to JCONTROL properties via MATLAB's dot notation Examples: obj . Units='characters'; obj . Enabled=1 obj . hgcontainer . Opaque='on' obj may be an element of a JCONTROL vector e . g . obj(3) . Units='pixels'; See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/subsasgn.m/#subsasgn","text":"SUBSASGN method overloaded for JCONTROL class subsasgn provides access to JCONTROL properties via MATLAB's dot notation Examples: obj . Units='characters'; obj . Enabled=1 obj . hgcontainer . Opaque='on' obj may be an element of a JCONTROL vector e . g . obj(3) . Units='pixels'; See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/subsref.m/","text":"subsref \u00b6 SUBSREF method overloaded for jcontrol class subsref provides access to jcontrol properties via MATLAB's dot notation Examples: obj . hgcontainer obj . hgcontrol . Name subsref also provides access to the java component's methods Example: obj . setToolTipText('MyText'); a=obj . getToolTipText(); See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/subsref.m/#subsref","text":"SUBSREF method overloaded for jcontrol class subsref provides access to jcontrol properties via MATLAB's dot notation Examples: obj . hgcontainer obj . hgcontrol . Name subsref also provides access to the java component's methods Example: obj . setToolTipText('MyText'); a=obj . getToolTipText(); See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/private/VisibleProperty.m/","text":"VisibleProperty \u00b6","title":"VisibleProperty"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol/private/VisibleProperty.m/#visibleproperty","text":"","title":"VisibleProperty"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/Contents.m/","text":"Contents \u00b6 @ JCONTROL Files delete - method overloaded for the JCONTROL class get - method overloaded for JCONTROL class getappdata - function overloaded for JCONTROL class isappdata - function oveloaded for the JCONTROL class jcontrol - constructor for JCONTROL class rmappdata - function oveloaded for the JCONTROL class set - method overloaded for JCONTROL class setappdata - function overloaded for JCONTROL class subsasgn - method overloaded for JCONTROL class subsref - method overloaded for jcontrol class ancestor - function overloaded as JCONTROL method","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/Contents.m/#contents","text":"@ JCONTROL Files delete - method overloaded for the JCONTROL class get - method overloaded for JCONTROL class getappdata - function overloaded for JCONTROL class isappdata - function oveloaded for the JCONTROL class jcontrol - constructor for JCONTROL class rmappdata - function oveloaded for the JCONTROL class set - method overloaded for JCONTROL class setappdata - function overloaded for JCONTROL class subsasgn - method overloaded for JCONTROL class subsref - method overloaded for jcontrol class ancestor - function overloaded as JCONTROL method","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/ancestor.m/","text":"ancestor \u00b6 ANCESTOR function overloaded as JCONTROL method Example : h = ancestor ( obj , type ) returns the appropriate ancestor of the obj . hgcontainer See also builtin / ancestor","title":"ancestor"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/ancestor.m/#ancestor","text":"ANCESTOR function overloaded as JCONTROL method Example : h = ancestor ( obj , type ) returns the appropriate ancestor of the obj . hgcontainer See also builtin / ancestor","title":"ancestor"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/close.m/","text":"close \u00b6 Close methods overloaded for JCONTROL objects Simply calls delete . Included as JCONTROL objects can sometimes be used to replace figures/waitbars etc where existing code may call close instead of delete . ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"close"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/close.m/#close","text":"Close methods overloaded for JCONTROL objects Simply calls delete . Included as JCONTROL objects can sometimes be used to replace figures/waitbars etc where existing code may call close instead of delete . ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"close"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/delete.m/","text":"delete \u00b6 DELETE method overloaded for the JCONTROL class DELETE acts on the hgcontainer of the target object . Call this on the parent JCONTROL to delete all its contents . Example: delete(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"delete"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/delete.m/#delete","text":"DELETE method overloaded for the JCONTROL class DELETE acts on the hgcontainer of the target object . Call this on the parent JCONTROL to delete all its contents . Example: delete(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"delete"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/get.m/","text":"get \u00b6 GET method overloaded for JCONTROL class Examples: a=get(obj) a=get(obj , PropertyName); If obj is a vector of JCONTROLs , a cell array will be returned See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/get.m/#get","text":"GET method overloaded for JCONTROL class Examples: a=get(obj) a=get(obj , PropertyName); If obj is a vector of JCONTROLs , a cell array will be returned See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/getappdata.m/","text":"getappdata \u00b6 GETAPPDATA function overloaded for JCONTROL class GETAPPDATA returns data from the application data area of the hgcontrol component of a JCONTROL Example: data=gatappdata(obj) data=getappdata(obj , FieldName) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA , JCONTROL/RMAPPDATA , GETAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"getappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/getappdata.m/#getappdata","text":"GETAPPDATA function overloaded for JCONTROL class GETAPPDATA returns data from the application data area of the hgcontrol component of a JCONTROL Example: data=gatappdata(obj) data=getappdata(obj , FieldName) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA , JCONTROL/RMAPPDATA , GETAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"getappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/isappdata.m/","text":"isappdata \u00b6 ISAPPDATA function oveloaded for the JCONTROL class Examples: isappdata(obj) isappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA ISAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"isappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/isappdata.m/#isappdata","text":"ISAPPDATA function oveloaded for the JCONTROL class Examples: isappdata(obj) isappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA ISAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"isappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/jcontrol.m/","text":"jcontrol \u00b6 JCONTROL constructor for JCONTROL class JCONTROL provides an easy way to integrate a full range of java GUIs from the java . awt and javax . swing libraries into MATLAB . Example : obj = JCONTROL ( Parent , Style ); obj = JCONTROL ( Parent , Style , PropertyName1 , PropertyValue1 , ... PropertyName2 , PropertyValue2 .... ); Inputs : Parent : the handle of a Matlab figure or other container for the resulting component ( see below ) Style : string describing a java component e . g . 'javax.swing.JPanel' , 'javax.swing.JButton' or a variable containing a java object PropertName / PropertyValue pairs : these are automatically assigned to the HG container or the java component as appropriate . Pre - create the java object if you need to pass arguments to the constructor e . g . javaobj = javax . swing ( ............... ); obj = jcontrol ( Parent , javaobj ); ------------------------------------------------------------------------- CHANGES 18.10 . 08 ------------------------------------------------------------------------- From R2008b onwards , hgjavacomponents may not parent other hgjavacomponents . To accommodate this change , jcontrols now need to be associated with a uipanel . These will be created automatically when needed but users may explicitly specify a uipanel when required , e . g . to create nested panels . Valid parents for a jcontrol are : The ML Root : A figure / uipanel will be created Figure : A uipanel will be created Jcontrol / Jcontrol hgcontainer ( hgjavacomponent ) The existing uipanel will be used uipanel The uipanel will be used as parent . Note that the Units and Position of the jcontrol will not be linked to the uipanel . This allows uipanels created explicitly by the user to be nested . The handle of the associated uipanel is returned in the 'uipanel' field of the jcontrol object . This field will be left empty if no linked uipanel is created ( if the specified parent was a uipanel ) . The handle is also added to the hgcontrol in a 'uipanel' property . These changes have been tested without problems on R2006a and R2008b . The new methods should be backwards compatible with old code but note that when instantiating a uipanel via the jcontrol constructor , you must specify Units before Position in the input list to ensure synchrony between the uipanel and the hgcontainer while they are being set up . The jcontrol subsasgn and set methods will maintain synchrony subsequently . Always set the Units and Position through these methods , not by accessing the uipanel directly . ------------------------------------------------------------------------- By default , JCONTROLs are returned with Units set to 'normalized' . USE : Build a GUI with repeated calls to JCONTROL in much the same way as with MATLAB 's uicontrol function e.g.: h = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'pixels' , ... 'Position' ,[ 100 100 200 200 ]); h ( 2 ) = jcontrol ( h ( 1 ), 'javax.swing.JComboBox' , ... 'Position' ,[ 0.1 0.8 0.8 0.1 ]); h ( 2 ) . addItem ( 'Item1' ); h ( 2 ) . addItem ( 'Item2' ); h ( 3 ) = jcontrol ( h ( 1 ), 'javax.swing.JCheckBox' , ... 'Position' ,[ 0.1 0.1 0.1 0.1 ], ... 'Label' , 'My check box' ); See the jcontrolDemo () for a fuller example . A JCONTROL aggregates the MATLAB handle graphics container and the Java component ( as returned by MATLAB 's JAVACOMPONENT function) into a single object . Access to the JCONTROL 's properties is provided by GET/SET calls. These automatically determine whether the target property is in the HG container or java object . myobject = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Name' , 'MyPanel' ); set ( myobject , 'Position' , [ 0.4 0.4 0.4 0.2 ], ... 'Enabled' , 0 ); pos = get ( myobject , 'Units' ); Note that you can mix HG container properties ( e . g . Units , Position ) and java component properties ( e . g . Name , Enabled ) in single calls to JCONTROL and SET . Use the HG container to control the Units , Position , and Visible properties MATLAB dot notation may also be used . This notation also provides access to the java object 's methods pos = myobject . Position ; sz = myObject . getSize ; myobject . setEnabled ( 1 ); myobject . setToolTipText ( 'My tip' ); myobject . setOpaque ( 1 ); -------------------------------------------------------------------------- UNITS , POSITION and VISIBLE properties Set these by accessing the JCONTROL or its container ( not the hgcontrol ) . MATLAB links these properties between the container and the java control , but unidirectionally . Note that JCONTROL methods always act on / return the Visible property of the container ( 'on' or 'off' ) which will also update the java control . Do not use the setVisible () methods . -------------------------------------------------------------------------- Overloaded class methods are case - insensitive for properties but case - sensitive for java methods CALLBACKS Setting up callbacks The simplest way to set up a callback is through the SET method myPanel = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Position' ,[ 0.3 0.3 0.5 0.5 ]); set ( myPanel , 'MouseClickedCallback' , 'MyCallback' ) or set ( myPanel , 'MouseClickedCallback' , @ MyCallback ); or set ( myPanel , 'MouseClickedCallback' , { @ MyCallback A B C ... }); The callback then takes the usual MATLAB form , e . g . function MyCallback ( hObject , EventData ) function MyCallback ( hObject , EventData , varargin ) Accessing JCONTROL objects in callbacks : The handle received by a callback will be that of the java control object contained in the JCONTROL , not the JCONTROL itself . In addition , GCO will return empty and GCBO will not return the parent figure handle . However , the JCONTROL constructor adds the HG container handle to the java component 's properties. This can be used to access the container and its parent figure from within the callback e . g . get ( hObject . hghandle ); % gets the HG container ancestor ( hObject . hghandle , 'figure' ) % gets the parent figure handle To cross - reference from the container , JCONTROL places a reference to the java control in the container 's UserData area e.g. hgc = findobj ( 'Tag' , 'MyCustomTag' ) javacontrol = get ( hgc , 'UserData' ); Accessing data in callbacks Data can be passed to a callback , as above , with optional input arguments . In addition , data that is specific to the control can be stored in the application data area of the control e . g . to return values dependent on the selection of a popup menu data = getappdata ( hObject , 'data' ); returnvalues = data ( hObject . getSelectedItem + 1 ); Note : + 1 because the item numbering is zero based for the java object . The HG container has a separate application data area . R2006a or higher only : GETAPPDATA , SETAPPDATA ISAPPDATA and RMAPPDATA methods have been overloaded for JCONTROL objects . These place / return data from the application data area of the java control . Take care if removing the whole application data area - TMW may place data in there too . The HG container has a separate application data area . Notes : If a property name occurs in both the HG container and the java object , the JCONTROL methods can not unambiguously identify the source / target and it must be defined explicitly by the user e . g . get ( myobject . hgcontainer , 'Opaque' ); set ( myobject . hgcontrol , 'Opaque' , 0 ); The JCONTROL methods test for ambiguity and issue an error message when it arises . Note that the test uses MATLAB 's isprop and is case insensitive . It may also detect properties not listed by the MATLAB builtin GET function for the hgcontrol such as Visible . The JCONTROL methods always act on the Visible property of the hgcontainer , letting MATLAB update the object automatically ( see above ) . The DeleteFcn property of the hgcontainer is set by the JAVACOMPONENT function . If this property is changed , the new callback must explicitly delete the hgcontrol . See also : jcontrol / get , jcontrol / set , jcontrol / subsasgn , jcontrol / subsref jcontrol / setappdata , jcontrol / getappdata , jcontrol / isappdata jcontrol / rmappdata , jcontrol / delete javacomponent , gco , gcbo -------------------------------------------------------------------------- Acknowledgements : The JCONTROL class was partly inspired by Yair Altman 's < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=14583&objectType=file\" > uicomponent </ a > function . The functions take different routes to achieve similar ends . JCONTROL is rather faster - which is significant when building complex GUIs , but UICOMPONENT accepts the same calling conventions as MATLAB 's UICONTROL while JCONTROL does not . -------------------------------------------------------------------------- ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 12.09 . 07 Allow pre - constructed java objects on input 18.10 . 08 Modified for R2008b compatability . Userdata property added","title":"jcontrol"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/jcontrol.m/#jcontrol","text":"JCONTROL constructor for JCONTROL class JCONTROL provides an easy way to integrate a full range of java GUIs from the java . awt and javax . swing libraries into MATLAB . Example : obj = JCONTROL ( Parent , Style ); obj = JCONTROL ( Parent , Style , PropertyName1 , PropertyValue1 , ... PropertyName2 , PropertyValue2 .... ); Inputs : Parent : the handle of a Matlab figure or other container for the resulting component ( see below ) Style : string describing a java component e . g . 'javax.swing.JPanel' , 'javax.swing.JButton' or a variable containing a java object PropertName / PropertyValue pairs : these are automatically assigned to the HG container or the java component as appropriate . Pre - create the java object if you need to pass arguments to the constructor e . g . javaobj = javax . swing ( ............... ); obj = jcontrol ( Parent , javaobj ); ------------------------------------------------------------------------- CHANGES 18.10 . 08 ------------------------------------------------------------------------- From R2008b onwards , hgjavacomponents may not parent other hgjavacomponents . To accommodate this change , jcontrols now need to be associated with a uipanel . These will be created automatically when needed but users may explicitly specify a uipanel when required , e . g . to create nested panels . Valid parents for a jcontrol are : The ML Root : A figure / uipanel will be created Figure : A uipanel will be created Jcontrol / Jcontrol hgcontainer ( hgjavacomponent ) The existing uipanel will be used uipanel The uipanel will be used as parent . Note that the Units and Position of the jcontrol will not be linked to the uipanel . This allows uipanels created explicitly by the user to be nested . The handle of the associated uipanel is returned in the 'uipanel' field of the jcontrol object . This field will be left empty if no linked uipanel is created ( if the specified parent was a uipanel ) . The handle is also added to the hgcontrol in a 'uipanel' property . These changes have been tested without problems on R2006a and R2008b . The new methods should be backwards compatible with old code but note that when instantiating a uipanel via the jcontrol constructor , you must specify Units before Position in the input list to ensure synchrony between the uipanel and the hgcontainer while they are being set up . The jcontrol subsasgn and set methods will maintain synchrony subsequently . Always set the Units and Position through these methods , not by accessing the uipanel directly . ------------------------------------------------------------------------- By default , JCONTROLs are returned with Units set to 'normalized' . USE : Build a GUI with repeated calls to JCONTROL in much the same way as with MATLAB 's uicontrol function e.g.: h = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'pixels' , ... 'Position' ,[ 100 100 200 200 ]); h ( 2 ) = jcontrol ( h ( 1 ), 'javax.swing.JComboBox' , ... 'Position' ,[ 0.1 0.8 0.8 0.1 ]); h ( 2 ) . addItem ( 'Item1' ); h ( 2 ) . addItem ( 'Item2' ); h ( 3 ) = jcontrol ( h ( 1 ), 'javax.swing.JCheckBox' , ... 'Position' ,[ 0.1 0.1 0.1 0.1 ], ... 'Label' , 'My check box' ); See the jcontrolDemo () for a fuller example . A JCONTROL aggregates the MATLAB handle graphics container and the Java component ( as returned by MATLAB 's JAVACOMPONENT function) into a single object . Access to the JCONTROL 's properties is provided by GET/SET calls. These automatically determine whether the target property is in the HG container or java object . myobject = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Name' , 'MyPanel' ); set ( myobject , 'Position' , [ 0.4 0.4 0.4 0.2 ], ... 'Enabled' , 0 ); pos = get ( myobject , 'Units' ); Note that you can mix HG container properties ( e . g . Units , Position ) and java component properties ( e . g . Name , Enabled ) in single calls to JCONTROL and SET . Use the HG container to control the Units , Position , and Visible properties MATLAB dot notation may also be used . This notation also provides access to the java object 's methods pos = myobject . Position ; sz = myObject . getSize ; myobject . setEnabled ( 1 ); myobject . setToolTipText ( 'My tip' ); myobject . setOpaque ( 1 ); -------------------------------------------------------------------------- UNITS , POSITION and VISIBLE properties Set these by accessing the JCONTROL or its container ( not the hgcontrol ) . MATLAB links these properties between the container and the java control , but unidirectionally . Note that JCONTROL methods always act on / return the Visible property of the container ( 'on' or 'off' ) which will also update the java control . Do not use the setVisible () methods . -------------------------------------------------------------------------- Overloaded class methods are case - insensitive for properties but case - sensitive for java methods CALLBACKS Setting up callbacks The simplest way to set up a callback is through the SET method myPanel = jcontrol ( gcf , 'javax.swing.JPanel' , ... 'Units' , 'normalized' , ... 'Position' ,[ 0.3 0.3 0.5 0.5 ]); set ( myPanel , 'MouseClickedCallback' , 'MyCallback' ) or set ( myPanel , 'MouseClickedCallback' , @ MyCallback ); or set ( myPanel , 'MouseClickedCallback' , { @ MyCallback A B C ... }); The callback then takes the usual MATLAB form , e . g . function MyCallback ( hObject , EventData ) function MyCallback ( hObject , EventData , varargin ) Accessing JCONTROL objects in callbacks : The handle received by a callback will be that of the java control object contained in the JCONTROL , not the JCONTROL itself . In addition , GCO will return empty and GCBO will not return the parent figure handle . However , the JCONTROL constructor adds the HG container handle to the java component 's properties. This can be used to access the container and its parent figure from within the callback e . g . get ( hObject . hghandle ); % gets the HG container ancestor ( hObject . hghandle , 'figure' ) % gets the parent figure handle To cross - reference from the container , JCONTROL places a reference to the java control in the container 's UserData area e.g. hgc = findobj ( 'Tag' , 'MyCustomTag' ) javacontrol = get ( hgc , 'UserData' ); Accessing data in callbacks Data can be passed to a callback , as above , with optional input arguments . In addition , data that is specific to the control can be stored in the application data area of the control e . g . to return values dependent on the selection of a popup menu data = getappdata ( hObject , 'data' ); returnvalues = data ( hObject . getSelectedItem + 1 ); Note : + 1 because the item numbering is zero based for the java object . The HG container has a separate application data area . R2006a or higher only : GETAPPDATA , SETAPPDATA ISAPPDATA and RMAPPDATA methods have been overloaded for JCONTROL objects . These place / return data from the application data area of the java control . Take care if removing the whole application data area - TMW may place data in there too . The HG container has a separate application data area . Notes : If a property name occurs in both the HG container and the java object , the JCONTROL methods can not unambiguously identify the source / target and it must be defined explicitly by the user e . g . get ( myobject . hgcontainer , 'Opaque' ); set ( myobject . hgcontrol , 'Opaque' , 0 ); The JCONTROL methods test for ambiguity and issue an error message when it arises . Note that the test uses MATLAB 's isprop and is case insensitive . It may also detect properties not listed by the MATLAB builtin GET function for the hgcontrol such as Visible . The JCONTROL methods always act on the Visible property of the hgcontainer , letting MATLAB update the object automatically ( see above ) . The DeleteFcn property of the hgcontainer is set by the JAVACOMPONENT function . If this property is changed , the new callback must explicitly delete the hgcontrol . See also : jcontrol / get , jcontrol / set , jcontrol / subsasgn , jcontrol / subsref jcontrol / setappdata , jcontrol / getappdata , jcontrol / isappdata jcontrol / rmappdata , jcontrol / delete javacomponent , gco , gcbo -------------------------------------------------------------------------- Acknowledgements : The JCONTROL class was partly inspired by Yair Altman 's < a href = \"http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=14583&objectType=file\" > uicomponent </ a > function . The functions take different routes to achieve similar ends . JCONTROL is rather faster - which is significant when building complex GUIs , but UICOMPONENT accepts the same calling conventions as MATLAB 's UICONTROL while JCONTROL does not . -------------------------------------------------------------------------- ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- ------------------------------------------------------------------------- Revisions : 12.09 . 07 Allow pre - constructed java objects on input 18.10 . 08 Modified for R2008b compatability . Userdata property added","title":"jcontrol"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/rmappdata.m/","text":"rmappdata \u00b6 RMAPPDATA function oveloaded for the JCONTROL class Examples: rmappdata(obj) rmappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"rmappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/rmappdata.m/#rmappdata","text":"RMAPPDATA function oveloaded for the JCONTROL class Examples: rmappdata(obj) rmappdata(obj , FieldName); See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/GETAPPDATA JCONTROL/ISAPPDATA RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"rmappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/set.m/","text":"set \u00b6 SET method overloaded for JCONTROL class Examples : set ( obj , PropertyName , PropertyValue ) set ( obj , PropertyName1 , Value1 , PropertyName2 , Value2 .... ) The propertyname / valuename sequence can have an embedded cell array if that contains property / value pairs e . g standardvalues = { 'Units' , 'normalized' } set ( myobj , 'javax.swing.JPane' , ... 'ToolTipText' , 'MyTip' , ... standardvalues ); s Also : set ( obj , s ) set ( obj , pn , pm ) where s in a structure with fieldnames corresponding to property names and values corresponding to property values pn and pm and name / value cell vectors ( note pm may not be a matrix ) If obj is a vector of JCONTROLs , SET will act on each element . In this case , the specified properties must be present in all the JCONTROLs or an error will result See also : jcontrol ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/set.m/#set","text":"SET method overloaded for JCONTROL class Examples : set ( obj , PropertyName , PropertyValue ) set ( obj , PropertyName1 , Value1 , PropertyName2 , Value2 .... ) The propertyname / valuename sequence can have an embedded cell array if that contains property / value pairs e . g standardvalues = { 'Units' , 'normalized' } set ( myobj , 'javax.swing.JPane' , ... 'ToolTipText' , 'MyTip' , ... standardvalues ); s Also : set ( obj , s ) set ( obj , pn , pm ) where s in a structure with fieldnames corresponding to property names and values corresponding to property values pn and pm and name / value cell vectors ( note pm may not be a matrix ) If obj is a vector of JCONTROLs , SET will act on each element . In this case , the specified properties must be present in all the JCONTROLs or an error will result See also : jcontrol ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/setappdata.m/","text":"setappdata \u00b6 SETAPPDATA function overloaded for JCONTROL class SETAPPDATA places data in the application data area of the hgcontrol component of a JCONTROL Example: setappdata(obj , fieldname , data) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA JCONTROL/RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"setappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/setappdata.m/#setappdata","text":"SETAPPDATA function overloaded for JCONTROL class SETAPPDATA places data in the application data area of the hgcontrol component of a JCONTROL Example: setappdata(obj , fieldname , data) See also: JCONTROL , JCONTROL/GETAPPDATA , JCONTROL/ISAPPDATA JCONTROL/RMAPPDATA ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"setappdata"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/subsasgn.m/","text":"subsasgn \u00b6 SUBSASGN method overloaded for JCONTROL class subsasgn provides access to JCONTROL properties via MATLAB's dot notation Examples: obj . Units='characters'; obj . Enabled=1 obj . hgcontainer . Opaque='on' obj may be an element of a JCONTROL vector e . g . obj(3) . Units='pixels'; See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/subsasgn.m/#subsasgn","text":"SUBSASGN method overloaded for JCONTROL class subsasgn provides access to JCONTROL properties via MATLAB's dot notation Examples: obj . Units='characters'; obj . Enabled=1 obj . hgcontainer . Opaque='on' obj may be an element of a JCONTROL vector e . g . obj(3) . Units='pixels'; See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 06/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/subsref.m/","text":"subsref \u00b6 SUBSREF method overloaded for jcontrol class subsref provides access to jcontrol properties via MATLAB's dot notation Examples: obj . hgcontainer obj . hgcontrol . Name subsref also provides access to the java component's methods Example: obj . setToolTipText('MyText'); a=obj . getToolTipText(); See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/subsref.m/#subsref","text":"SUBSREF method overloaded for jcontrol class subsref provides access to jcontrol properties via MATLAB's dot notation Examples: obj . hgcontainer obj . hgcontrol . Name subsref also provides access to the java component's methods Example: obj . setToolTipText('MyText'); a=obj . getToolTipText(); See also: jcontrol ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/private/VisibleProperty.m/","text":"VisibleProperty \u00b6","title":"VisibleProperty"},{"location":"reference/lib/sigTOOL/CORE/utils/%40jcontrol__/private/VisibleProperty.m/#visibleproperty","text":"","title":"VisibleProperty"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convIndex2Time.m/","text":"convIndex2Time \u00b6 convIndex2Time returns the sample time ( s ) of waveform elements Examples: Using indices time = convIndex2Time ( channel , SampleNumber ) or using subscripts: time = convIndex2Time ( channel , Epoch , SampleNumberWithinEpoch ) where: channel is a sigTOOL channel object When SampleNumber is supplied , this is the 1 - D index into the channel adc field ( adc need not be 1 - dimensional so this method can be used regardless of the dimensions of the adc matrix ). Alternatively , subscripts may be used where Epoch and SampleNumberWithinEpoch are the subscripts of the element that the sample time is required for e . g . convIndex2Time ( channel , 10 , 8 ) returns the time of the 8 th sample in epoch 10. This is limited to vectors and 2 - D matrices . To convert between subscripts and indices use ind2sub and sub2ind See also convTime2ValidIndex , ind2sub , sub2ind SampleNumber , Epoch and SampleNumberWithinEpoch may be column vectors with multiple indices . In that case time will a vector of sample times . -------------------------------------------------------------------------- Author: Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King ' s College London 2006 - 7 --------------------------------------------------------------------------","title":"convIndex2Time"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convIndex2Time.m/#convindex2time","text":"convIndex2Time returns the sample time ( s ) of waveform elements Examples: Using indices time = convIndex2Time ( channel , SampleNumber ) or using subscripts: time = convIndex2Time ( channel , Epoch , SampleNumberWithinEpoch ) where: channel is a sigTOOL channel object When SampleNumber is supplied , this is the 1 - D index into the channel adc field ( adc need not be 1 - dimensional so this method can be used regardless of the dimensions of the adc matrix ). Alternatively , subscripts may be used where Epoch and SampleNumberWithinEpoch are the subscripts of the element that the sample time is required for e . g . convIndex2Time ( channel , 10 , 8 ) returns the time of the 8 th sample in epoch 10. This is limited to vectors and 2 - D matrices . To convert between subscripts and indices use ind2sub and sub2ind See also convTime2ValidIndex , ind2sub , sub2ind SampleNumber , Epoch and SampleNumberWithinEpoch may be column vectors with multiple indices . In that case time will a vector of sample times . -------------------------------------------------------------------------- Author: Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King ' s College London 2006 - 7 --------------------------------------------------------------------------","title":"convIndex2Time"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2PhysicalEpochs.m/","text":"convTime2PhysicalEpochs \u00b6 convTime2PhysicalEpochs returns physical epoch numbers within a time range Example : epochs = convTime2PhysicalEpochs ( channel , start , stop ) where channel is a sigTOOL channel object start & stop are the beginning and end times Returns physical epoch numbers where start <= channel . tim ( :, 1 ) <= stop Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2PhysicalEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2PhysicalEpochs.m/#convtime2physicalepochs","text":"convTime2PhysicalEpochs returns physical epoch numbers within a time range Example : epochs = convTime2PhysicalEpochs ( channel , start , stop ) where channel is a sigTOOL channel object start & stop are the beginning and end times Returns physical epoch numbers where start <= channel . tim ( :, 1 ) <= stop Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2PhysicalEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2PhysicalIndex.m/","text":"convTime2PhysicalIndex \u00b6 convTime2PhysicalIndex converts time to linear indices into a waveform matrix Example : idx = convTime2PhysicalIndex ( channel , time ) idx = convTime2PhysicalIndex ( channel , start , stop ) channel is a sigTOOL channel array cell element time or start & stop are the times to convert idx contains the start and stop indices in columns 1 and 2 respectively When a single time is specified , idx is the index into adc for the sample at the specified time or the first sample afterwards When start and stop are given , idx are indices into the adc field such that sampling occurred between the limits start <= t < stop . With episodic or framed waveforms , idx will be a matrix of indices with one row for each period contained in the interval start to stop . e . g . idx = convTime2PhysicalIndex ( channels { 1 } , 0 , 500000 ); might return idx = 1 16001 16002 32002 32003 48003 48004 64004 64005 80005 Access the first period with : data = channels { 1 }. adc ( idx ( 1 , 1 ) : idx ( 1 , 2 )); convTime2PhysicalIndex differs from findVectorIndices in that the returned indices are linear indices into the adc matrix , not indices into the column vector representing a specific epoch See also ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2PhysicalIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2PhysicalIndex.m/#convtime2physicalindex","text":"convTime2PhysicalIndex converts time to linear indices into a waveform matrix Example : idx = convTime2PhysicalIndex ( channel , time ) idx = convTime2PhysicalIndex ( channel , start , stop ) channel is a sigTOOL channel array cell element time or start & stop are the times to convert idx contains the start and stop indices in columns 1 and 2 respectively When a single time is specified , idx is the index into adc for the sample at the specified time or the first sample afterwards When start and stop are given , idx are indices into the adc field such that sampling occurred between the limits start <= t < stop . With episodic or framed waveforms , idx will be a matrix of indices with one row for each period contained in the interval start to stop . e . g . idx = convTime2PhysicalIndex ( channels { 1 } , 0 , 500000 ); might return idx = 1 16001 16002 32002 32003 48003 48004 64004 64005 80005 Access the first period with : data = channels { 1 }. adc ( idx ( 1 , 1 ) : idx ( 1 , 2 )); convTime2PhysicalIndex differs from findVectorIndices in that the returned indices are linear indices into the adc matrix , not indices into the column vector representing a specific epoch See also ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2PhysicalIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2ValidEpochs.m/","text":"convTime2ValidEpochs \u00b6 convTime2ValidEpochs returns valid epoch numbers within a time range Example : epochs = convTime2ValidEpochs ( chan , start , stop ) where chan is a sigTOOL channel object start & stop are the beginning and end times for the search . Returns valid epoch numbers where start <= chan . tim ( :, 1 ) < stop Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2ValidEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2ValidEpochs.m/#convtime2validepochs","text":"convTime2ValidEpochs returns valid epoch numbers within a time range Example : epochs = convTime2ValidEpochs ( chan , start , stop ) where chan is a sigTOOL channel object start & stop are the beginning and end times for the search . Returns valid epoch numbers where start <= chan . tim ( :, 1 ) < stop Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2ValidEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2ValidIndex.m/","text":"convTime2ValidIndex \u00b6 convTime2ValidIndex converts time to linear indices into a waveform matrix Only indices for valid data epochs will be returned Example : idx = convTime2ValidIndex ( channel , time ) idx = convTime2ValidIndex ( channel , start , stop ) channel is a sigTOOL channel object time or start & stop are the times to convert idx contains the start and stop indices in columns 1 and 2 respectively When a single time is specified , idx is the index into adc for the sample at the specified time or the first sample afterwards When start and stop are given , idx are indices into the adc field such that sampling occurred between the limits start <= t < stop . With episodic or framed waveforms , idx will be a matrix of indices with one row for each period contained in the interval start to stop . e . g . if channels { 1 } contains episodes of length 16001 , idx = convTime2ValidIndex ( channels { 1 } , 0 , 5 ); might return idx = 1 16001 16002 32002 32003 48003 48004 64004 64005 80005 Access the first period with : data = channels { 1 }. adc ( idx ( 1 , 1 ) : idx ( 1 , 2 )); convTime2ValidIndex differs from findVectorIndices in that : 1 . It returns indices only for valid epochs 2 . It returns indices that are linear indices into the adc matrix , not indices into the vector representing a specific epoch . See also findVectorIndices , ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2ValidIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/convTime2ValidIndex.m/#convtime2validindex","text":"convTime2ValidIndex converts time to linear indices into a waveform matrix Only indices for valid data epochs will be returned Example : idx = convTime2ValidIndex ( channel , time ) idx = convTime2ValidIndex ( channel , start , stop ) channel is a sigTOOL channel object time or start & stop are the times to convert idx contains the start and stop indices in columns 1 and 2 respectively When a single time is specified , idx is the index into adc for the sample at the specified time or the first sample afterwards When start and stop are given , idx are indices into the adc field such that sampling occurred between the limits start <= t < stop . With episodic or framed waveforms , idx will be a matrix of indices with one row for each period contained in the interval start to stop . e . g . if channels { 1 } contains episodes of length 16001 , idx = convTime2ValidIndex ( channels { 1 } , 0 , 5 ); might return idx = 1 16001 16002 32002 32003 48003 48004 64004 64005 80005 Access the first period with : data = channels { 1 }. adc ( idx ( 1 , 1 ) : idx ( 1 , 2 )); convTime2ValidIndex differs from findVectorIndices in that : 1 . It returns indices only for valid epochs 2 . It returns indices that are linear indices into the adc matrix , not indices into the vector representing a specific epoch . See also findVectorIndices , ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"convTime2ValidIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/display.m/","text":"display \u00b6 display method for overloaded for the scchannel class ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/display.m/#display","text":"display method for overloaded for the scchannel class ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhase.m/","text":"extractPhase \u00b6 scchannel/extractPhase is a function. out = extractPhase(trig, events)","title":"extractPhase"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhase.m/#extractphase","text":"scchannel/extractPhase is a function. out = extractPhase(trig, events)","title":"extractPhase"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalEpochData.m/","text":"extractPhysicalEpochData \u00b6 extractPhysicalEpochData returns the adc data in an episodically sampled scchannel object [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch ) [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch1 , epoch2 ) [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch1 , step , epoch2 ) Inputs : channel is a scchannel object containing episodic data epoch is the required epoch ( e . g . 1 , 2 ) or range of epochs ( e . g . 1 : 10 ) Note that the ' end ' statement can not be used with this form epoch1 and epoch2 allow the the use of the end statement but it must be included as a string e . g . getEpochData ( channel , 2 , ' end ' ) returns epochs 2 : end where ' end ' refers to the last valid epoch . step if specified sets the increment e . g . getPhysicalEpochData ( channel , 2 , 2 , ' end ' ) returns epochs 2 : 2 : end where ' end ' refers to the last valid epoch as above . Ouputs : data contains the scaled adc data in double precision with each epoch represented in columns npoints and epochs are optional outputs . Each is a row vector . npoints gives the number of valid data points in each column epochs gives the physical epoch number of the returned data .","title":"extractPhysicalEpochData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalEpochData.m/#extractphysicalepochdata","text":"extractPhysicalEpochData returns the adc data in an episodically sampled scchannel object [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch ) [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch1 , epoch2 ) [ data npoints epochs ] = extractPhysicalEpochData ( channel , epoch1 , step , epoch2 ) Inputs : channel is a scchannel object containing episodic data epoch is the required epoch ( e . g . 1 , 2 ) or range of epochs ( e . g . 1 : 10 ) Note that the ' end ' statement can not be used with this form epoch1 and epoch2 allow the the use of the end statement but it must be included as a string e . g . getEpochData ( channel , 2 , ' end ' ) returns epochs 2 : end where ' end ' refers to the last valid epoch . step if specified sets the increment e . g . getPhysicalEpochData ( channel , 2 , 2 , ' end ' ) returns epochs 2 : 2 : end where ' end ' refers to the last valid epoch as above . Ouputs : data contains the scaled adc data in double precision with each epoch represented in columns npoints and epochs are optional outputs . Each is a row vector . npoints gives the number of valid data points in each column epochs gives the physical epoch number of the returned data .","title":"extractPhysicalEpochData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalEpochTimes.m/","text":"extractPhysicalEpochTimes \u00b6 extractPhysicalEpochTimes returns the tim data in a channel object [ data epochs ] =extractPhysicalEpochTimes(channel , epoch) [ data epochs ] =extractPhysicalEpochTimes(channel , epoch1 , epoch2) [ data epochs ] =extractPhysicalEpochTimes(channel , epoch1 , step , epoch2) ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"extractPhysicalEpochTimes"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalEpochTimes.m/#extractphysicalepochtimes","text":"extractPhysicalEpochTimes returns the tim data in a channel object [ data epochs ] =extractPhysicalEpochTimes(channel , epoch) [ data epochs ] =extractPhysicalEpochTimes(channel , epoch1 , epoch2) [ data epochs ] =extractPhysicalEpochTimes(channel , epoch1 , step , epoch2) ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"extractPhysicalEpochTimes"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalFrames.m/","text":"extractPhysicalFrames \u00b6 extractPhysicalFrames extracts framed adc data from valid epochs Example : [ data tb epochs trig ] = extractPhysicalFrames ( channel , trig , duration , pretime ) where channel is a sigTOOL channel object trigger is a vector of trigger time duration is the duration of the sweeep pretime is the pre - trigger time All times are in units defined by getTimeUnits ( channel ) [ usually seconds ] Returns data a double matrix . Each coloumn is a frame of data tb the timebase for each frame of data ( pretime to duration - pretime ) in seconds epochs the physical numbers of the epochs from which data was taken for each frame trig an updated copy of the input , with invalid trigger times omitted Note that , in the case of multiplexed channels , extractValidFrames returns data for the currently selected subchannel as set in channel . CurrentSubchannel . See also scchannel / getTimeUnits ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"extractPhysicalFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractPhysicalFrames.m/#extractphysicalframes","text":"extractPhysicalFrames extracts framed adc data from valid epochs Example : [ data tb epochs trig ] = extractPhysicalFrames ( channel , trig , duration , pretime ) where channel is a sigTOOL channel object trigger is a vector of trigger time duration is the duration of the sweeep pretime is the pre - trigger time All times are in units defined by getTimeUnits ( channel ) [ usually seconds ] Returns data a double matrix . Each coloumn is a frame of data tb the timebase for each frame of data ( pretime to duration - pretime ) in seconds epochs the physical numbers of the epochs from which data was taken for each frame trig an updated copy of the input , with invalid trigger times omitted Note that , in the case of multiplexed channels , extractValidFrames returns data for the currently selected subchannel as set in channel . CurrentSubchannel . See also scchannel / getTimeUnits ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"extractPhysicalFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidEpochData.m/","text":"extractValidEpochData \u00b6 getEpochData returns the adc data in an episodically sampled scchannel object [ data npoints epochs ] = extractValidEpochData ( channel , epoch ) [ data npoints epochs ] = extractValidEpochData ( channel , epoch1 , epoch2 ) [ data npoints epochs ] = extractValidEpochData ( channel , epoch1 , step , epoch2 ) If EventFilter . Mode is ' on ' the specified epoch numbers will be translated to valid epochs for which EventFilter . Flag == true . Thus with EventFilter . Flags = [ 0 1 0 1 0 1 0 1 0 1 ], passing epochs 1 : 3 on input would return data from the first 3 valid epochs i . e 2 , 4 and 6 . Inputs : channel is a scchannel object containing episodic data epoch is the required epoch ( e . g . 1 , 2 ) or range of epochs ( e . g . 1 : 10 ) Note that the ' end ' statement can not be used with this form epoch1 and epoch2 allow the the use of the end statement but it must be included as a string e . g . getEpochData ( channel , 2 , ' end ' ) returns epochs 2 : end where end refers to the last valid epoch . step if specified sets the increment e . g . getEpochData ( channel , 2 , 2 , ' end ' ) returns epochs 2 : 2 : end where ' end ' refers to the last valid epoch as above . Ouputs : data contains the scaled adc data in double precision with each epoch represented in columns npoints and epochs are optional outputs . Each is a row vector . npoints gives the number of valid data points in each column epochs gives the physical epoch number of the returned data .","title":"extractValidEpochData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidEpochData.m/#extractvalidepochdata","text":"getEpochData returns the adc data in an episodically sampled scchannel object [ data npoints epochs ] = extractValidEpochData ( channel , epoch ) [ data npoints epochs ] = extractValidEpochData ( channel , epoch1 , epoch2 ) [ data npoints epochs ] = extractValidEpochData ( channel , epoch1 , step , epoch2 ) If EventFilter . Mode is ' on ' the specified epoch numbers will be translated to valid epochs for which EventFilter . Flag == true . Thus with EventFilter . Flags = [ 0 1 0 1 0 1 0 1 0 1 ], passing epochs 1 : 3 on input would return data from the first 3 valid epochs i . e 2 , 4 and 6 . Inputs : channel is a scchannel object containing episodic data epoch is the required epoch ( e . g . 1 , 2 ) or range of epochs ( e . g . 1 : 10 ) Note that the ' end ' statement can not be used with this form epoch1 and epoch2 allow the the use of the end statement but it must be included as a string e . g . getEpochData ( channel , 2 , ' end ' ) returns epochs 2 : end where end refers to the last valid epoch . step if specified sets the increment e . g . getEpochData ( channel , 2 , 2 , ' end ' ) returns epochs 2 : 2 : end where ' end ' refers to the last valid epoch as above . Ouputs : data contains the scaled adc data in double precision with each epoch represented in columns npoints and epochs are optional outputs . Each is a row vector . npoints gives the number of valid data points in each column epochs gives the physical epoch number of the returned data .","title":"extractValidEpochData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidEpochTimes.m/","text":"extractValidEpochTimes \u00b6 getValidEpochTimes returns the tim data in a channel object [ data epochs ] =extractValidEpochTimes(channel , epoch) [ data epochs ] =extractValidEpochTimes(channel , epoch1 , epoch2) [ data epochs ] =extractValidEpochTimes(channel , epoch1 , step , epoch2) ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"extractValidEpochTimes"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidEpochTimes.m/#extractvalidepochtimes","text":"getValidEpochTimes returns the tim data in a channel object [ data epochs ] =extractValidEpochTimes(channel , epoch) [ data epochs ] =extractValidEpochTimes(channel , epoch1 , epoch2) [ data epochs ] =extractValidEpochTimes(channel , epoch1 , step , epoch2) ------------------------------------------------------------------------- Author: Malcolm Lidierth 09/06 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 -------------------------------------------------------------------------","title":"extractValidEpochTimes"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidFrames.m/","text":"extractValidFrames \u00b6 extractValidFrames extracts framed adc data from valid epochs Example : [ data tb epochs trig ] = extractValidFrames ( channel , trig , duration , pretime ) where channel is a sigTOOL channel object trigger is a vector of trigger time duration is the duration of the sweeep pretime is the pre - trigger time All times are in units defined by getTimeUnits ( channel ) [ usually seconds ] Returns data a double matrix . Each coloumn is a frame of data tb the timebase for each frame of data ( pretime to duration - pretime ) in seconds epochs the physical numbers of the epochs from which data was taken for each frame trig an updated copy of the input , with invalid trigger times omitted Note that , in the case of multiplexed channels , extractValidFrames returns data for the currently selected subchannel as set in channel . CurrentSubchannel . See also scchannel / getTimeUnits ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"extractValidFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/extractValidFrames.m/#extractvalidframes","text":"extractValidFrames extracts framed adc data from valid epochs Example : [ data tb epochs trig ] = extractValidFrames ( channel , trig , duration , pretime ) where channel is a sigTOOL channel object trigger is a vector of trigger time duration is the duration of the sweeep pretime is the pre - trigger time All times are in units defined by getTimeUnits ( channel ) [ usually seconds ] Returns data a double matrix . Each coloumn is a frame of data tb the timebase for each frame of data ( pretime to duration - pretime ) in seconds epochs the physical numbers of the epochs from which data was taken for each frame trig an updated copy of the input , with invalid trigger times omitted Note that , in the case of multiplexed channels , extractValidFrames returns data for the currently selected subchannel as set in channel . CurrentSubchannel . See also scchannel / getTimeUnits ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"extractValidFrames"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findFirstChannel.m/","text":"findFirstChannel \u00b6 findFirstChannel method returns the index of the first valid channel on input Example : idx = findFirstChannel ( channels { : } ); findFirstChannel ( channels { : } ) returns 1 if the first element contains an scchannel object findFirstChannel ( channels { 54:102 } ) returns 1 if the element 54 contains an scchannel object findFirstChannel ( [] , '' , 10 , channels { : } ) returns 4 if the channels { 1 } contains an scchannel object Returns zero if no scchannel objects are present on input . The findFirstChannel method is shadowed by a function which deals with cases where no scchannel object is contained in the input ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"findFirstChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findFirstChannel.m/#findfirstchannel","text":"findFirstChannel method returns the index of the first valid channel on input Example : idx = findFirstChannel ( channels { : } ); findFirstChannel ( channels { : } ) returns 1 if the first element contains an scchannel object findFirstChannel ( channels { 54:102 } ) returns 1 if the element 54 contains an scchannel object findFirstChannel ( [] , '' , 10 , channels { : } ) returns 4 if the channels { 1 } contains an scchannel object Returns zero if no scchannel objects are present on input . The findFirstChannel method is shadowed by a function which deals with cases where no scchannel object is contained in the input ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"findFirstChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findMaxPostTime.m/","text":"findMaxPostTime \u00b6 findMaxPostTime scchannel method findMaxPostTime returns the maximum post - trigger time for which data is available in all epochs given a set of trigger times Example : duration = findMaxPostTime ( chan , trig ) chan is an scchannel object trig is a time or vector of times duration will be the maximum available post - trigger time based on the times in trig . This is the minimum of the times available from all epochs ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions 26 . 09 . 09 Revised for continuous waveforms .","title":"findMaxPostTime"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findMaxPostTime.m/#findmaxposttime","text":"findMaxPostTime scchannel method findMaxPostTime returns the maximum post - trigger time for which data is available in all epochs given a set of trigger times Example : duration = findMaxPostTime ( chan , trig ) chan is an scchannel object trig is a time or vector of times duration will be the maximum available post - trigger time based on the times in trig . This is the minimum of the times available from all epochs ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions 26 . 09 . 09 Revised for continuous waveforms .","title":"findMaxPostTime"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findMaxPreTime.m/","text":"findMaxPreTime \u00b6 findMaxPreTime scchannel method findMaxPreTime returns the maximum pre - trigger time for which data is available in all epochs given a set of trigger times Example : duration = findMaxPreTime ( channel , trigers ) channel is an scchannel object triggers is a time or vector of times duration will be the maximum available pre - trigger time based on the times in triggers . This is the minimum of the times available from all epochs ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"findMaxPreTime"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findMaxPreTime.m/#findmaxpretime","text":"findMaxPreTime scchannel method findMaxPreTime returns the maximum pre - trigger time for which data is available in all epochs given a set of trigger times Example : duration = findMaxPreTime ( channel , trigers ) channel is an scchannel object triggers is a time or vector of times duration will be the maximum available pre - trigger time based on the times in triggers . This is the minimum of the times available from all epochs ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"findMaxPreTime"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findPhysicalEpochs.m/","text":"findPhysicalEpochs \u00b6 findPhysicalEpochs returns the physical epochs that a time falls within Example : epochs = findPhysicalEpochs ( chanel , time ); where channel is a sigTOOL channel object time is a scalar or vector of timestamps and epochs is a size ( time ) vector , containing the relevant epoch for each timestamp in time . If a timestamp does not fall within an epoch , epochs will contain zero . A +/ - 1 sample interval jitter is allowed to account for sequentially sampled waveform channels where samples are not simultaneous .","title":"findPhysicalEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findPhysicalEpochs.m/#findphysicalepochs","text":"findPhysicalEpochs returns the physical epochs that a time falls within Example : epochs = findPhysicalEpochs ( chanel , time ); where channel is a sigTOOL channel object time is a scalar or vector of timestamps and epochs is a size ( time ) vector , containing the relevant epoch for each timestamp in time . If a timestamp does not fall within an epoch , epochs will contain zero . A +/ - 1 sample interval jitter is allowed to account for sequentially sampled waveform channels where samples are not simultaneous .","title":"findPhysicalEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findPhysicalFrameIndices.m/","text":"findPhysicalFrameIndices \u00b6 findPhysicalFrameIndices returns the indices of valid frames Example : [ idx epochs trigger ] = findPhysicalFrameIndices ( channel , trigger , duration , pretime ) where channel is a sigTOOL channels object trigger is a vector of trigger times duration is the duration of the sweep pre - time is the pre - trigger time All times are in the same units ( as returned by getTimeUnits ( channel )) Returns idx a 2 - column vector with the start and end row indices for each trigger epochs the epochs ( columns ) that idx refers to trigger an updated copy of the input , with invalid trigger times omitted ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"findPhysicalFrameIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findPhysicalFrameIndices.m/#findphysicalframeindices","text":"findPhysicalFrameIndices returns the indices of valid frames Example : [ idx epochs trigger ] = findPhysicalFrameIndices ( channel , trigger , duration , pretime ) where channel is a sigTOOL channels object trigger is a vector of trigger times duration is the duration of the sweep pre - time is the pre - trigger time All times are in the same units ( as returned by getTimeUnits ( channel )) Returns idx a 2 - column vector with the start and end row indices for each trigger epochs the epochs ( columns ) that idx refers to trigger an updated copy of the input , with invalid trigger times omitted ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 -------------------------------------------------------------------------","title":"findPhysicalFrameIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findValidEpochs.m/","text":"findValidEpochs \u00b6 findValidEpochs returns the valid epochs that a time falls within Example : epochs = findValidEpochs ( chanel , time ); where channel is a sigTOOL channel object time is a scalar or vector of timestamps and epochs is a size ( time ) vector , containing the relevant epoch for each timestamp in time . If a timestamp does not fall within an epoch , epochs will contain zero","title":"findValidEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findValidEpochs.m/#findvalidepochs","text":"findValidEpochs returns the valid epochs that a time falls within Example : epochs = findValidEpochs ( chanel , time ); where channel is a sigTOOL channel object time is a scalar or vector of timestamps and epochs is a size ( time ) vector , containing the relevant epoch for each timestamp in time . If a timestamp does not fall within an epoch , epochs will contain zero","title":"findValidEpochs"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findValidFrameIndices.m/","text":"findValidFrameIndices \u00b6 findValidFrameIndices returns the indices of valid frames Example : [ idx epochs trigger ] = findValidFrameIndices ( channel , trigger , duration , pretime ) where channel is a sigTOOL channels object trigger is a vector of trigger times duration is the duration of the sweep pre - time is the pre - trigger time All times are in the same units ( as returned by getTimeUnits ( channel )) Returns idx a 2 - column vector with the start and end row indices for each trigger epochs the epochs ( columns ) that idx refers to trigger an updated copy of the input , with invalid trigger times omitted ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 ------------------------------------------------------------------------- Revisions : 26 . 09 . 09 See within","title":"findValidFrameIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findValidFrameIndices.m/#findvalidframeindices","text":"findValidFrameIndices returns the indices of valid frames Example : [ idx epochs trigger ] = findValidFrameIndices ( channel , trigger , duration , pretime ) where channel is a sigTOOL channels object trigger is a vector of trigger times duration is the duration of the sweep pre - time is the pre - trigger time All times are in the same units ( as returned by getTimeUnits ( channel )) Returns idx a 2 - column vector with the start and end row indices for each trigger epochs the epochs ( columns ) that idx refers to trigger an updated copy of the input , with invalid trigger times omitted ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 08 Copyright \u00a9 The Author & King ' s College London 2008 ------------------------------------------------------------------------- Revisions : 26 . 09 . 09 See within","title":"findValidFrameIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findVectorIndices.m/","text":"findVectorIndices \u00b6 findVectorIndices converts time to the indices into a waveform vector Example : [ n1 n2 epoch ] = findVectorIndices ( channel , start , stop ) matrix = findVectorIndices ( channel , start , stop ) where : channel is a sigTOOL channel object start is the time of the first sample and must fall within a valid data epoch for the channel or an error will result stop is valid the time to search to for valid data n1 and n2 are the indices into the vector ( epoch ) corresponding to the times : start <= t < stop for continuous waveforms or start <= t <= stop for episodic waveforms and will be limited to ( n1 >= 1 ) and ( n2 <= epoch length ). start and stop may be vectors , in which case n1 , n2 and epoch will be vectors with one entry for each of the specified data periods . If only one output is requested , this will be a 3-column matrix containing n1 , n2 and epoch in each row . -------------------------------------------------------------------------- Continuous waveforms -------------------------------------------------------------------------- If channel contains a continuous waveform ( i . e . a single vector of adc data ), n1 and n2 are simply linear indices into the the vector and epoch will always be equal to 1 . n1 and n2 will always be aligned on subchannel of multiplexed data . -------------------------------------------------------------------------- Episodic sampled waveforms -------------------------------------------------------------------------- Epoch and n1 , n2 can be used for subscripted indexing into the adc field . n1 and n2 give the rows and epoch the columns . Thus , n1 and n2 are the indices into the column vector of data representing the epoch e . g . [ n1 n2 epoch ] = findVectorIndices ( channels { 1 } , 0 . 2 , 0 . 3 ) The relevant adc data may be extracted with : data = channels { 1 }. adc ( n1 : n2 , epoch ) The exact sample times may be retrieved using convIndex2Time e . g t1 = convIndex2Time ( channels { 1 } , n1 , epoch ) With episodically sampled multiplexed data , n1 will always be aligned on subchannel 1 . n2 will be aligned on subchannel 1 unless stop exceeds the epoch time in which case n2 will be aligned on the highest numbered subchannel and will be limited to the length of the data . This makes data extraction simpler , e . g . to extract subchannel 2 of 4 : [ n1 n2 epochs ] = findVectorIndices ( channels { 1 } , 0 . 2 , 0 . 3 ); data = channels { 1 }. adc ( n1 + 1 : 4 : n2 , epochs ) See also convIndex2Time , ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006-8 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"findVectorIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/findVectorIndices.m/#findvectorindices","text":"findVectorIndices converts time to the indices into a waveform vector Example : [ n1 n2 epoch ] = findVectorIndices ( channel , start , stop ) matrix = findVectorIndices ( channel , start , stop ) where : channel is a sigTOOL channel object start is the time of the first sample and must fall within a valid data epoch for the channel or an error will result stop is valid the time to search to for valid data n1 and n2 are the indices into the vector ( epoch ) corresponding to the times : start <= t < stop for continuous waveforms or start <= t <= stop for episodic waveforms and will be limited to ( n1 >= 1 ) and ( n2 <= epoch length ). start and stop may be vectors , in which case n1 , n2 and epoch will be vectors with one entry for each of the specified data periods . If only one output is requested , this will be a 3-column matrix containing n1 , n2 and epoch in each row . -------------------------------------------------------------------------- Continuous waveforms -------------------------------------------------------------------------- If channel contains a continuous waveform ( i . e . a single vector of adc data ), n1 and n2 are simply linear indices into the the vector and epoch will always be equal to 1 . n1 and n2 will always be aligned on subchannel of multiplexed data . -------------------------------------------------------------------------- Episodic sampled waveforms -------------------------------------------------------------------------- Epoch and n1 , n2 can be used for subscripted indexing into the adc field . n1 and n2 give the rows and epoch the columns . Thus , n1 and n2 are the indices into the column vector of data representing the epoch e . g . [ n1 n2 epoch ] = findVectorIndices ( channels { 1 } , 0 . 2 , 0 . 3 ) The relevant adc data may be extracted with : data = channels { 1 }. adc ( n1 : n2 , epoch ) The exact sample times may be retrieved using convIndex2Time e . g t1 = convIndex2Time ( channels { 1 } , n1 , epoch ) With episodically sampled multiplexed data , n1 will always be aligned on subchannel 1 . n2 will be aligned on subchannel 1 unless stop exceeds the epoch time in which case n2 will be aligned on the highest numbered subchannel and will be limited to the length of the data . This makes data extraction simpler , e . g . to extract subchannel 2 of 4 : [ n1 n2 epochs ] = findVectorIndices ( channels { 1 } , 0 . 2 , 0 . 3 ); data = channels { 1 }. adc ( n1 + 1 : 4 : n2 , epochs ) See also convIndex2Time , ind2sub , sub2ind ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006-8 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"findVectorIndices"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/get.m/","text":"get \u00b6 get method for overloaded for the scchannel class ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/get.m/#get","text":"get method for overloaded for the scchannel class ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getData.m/","text":"getData \u00b6 getData returns the data for a specified time period Data are returned for the period START <= t < STOP Example : channelout = getData ( channel , start , stop ) channelout = getData ( channel , [ start stop ]) channel is an scchannel object start and stop are the times marking the beginning and end of the required time window . channelout on output is an scchannel object . Waveform data in channelout will be trimmed to the limits START <= t < STOP . When the channel is a ' Custom ' channeltype , all epochs with START <= tim ( : , 1 ) < STOP will be returned . The epochs are defined by the highest dimension of adc . Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"getData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getData.m/#getdata","text":"getData returns the data for a specified time period Data are returned for the period START <= t < STOP Example : channelout = getData ( channel , start , stop ) channelout = getData ( channel , [ start stop ]) channel is an scchannel object start and stop are the times marking the beginning and end of the required time window . channelout on output is an scchannel object . Waveform data in channelout will be trimmed to the limits START <= t < STOP . When the channel is a ' Custom ' channeltype , all epochs with START <= tim ( : , 1 ) < STOP will be returned . The epochs are defined by the highest dimension of adc . Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"getData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getFileName.m/","text":"getFileName \u00b6 getSourceName method for the scchannel class Examples out = getFileName ( obj ) ; out = getFileName ( channels {:} ) ; out = getFileName ( channels {:}, mode ) ; out = getFileName ( channels {:}, ext , mode ) ; Returns the names of the files from which the data are mapped as a cell column of strings If ext is specified as a string , only files with that extension will be returned . Note that wildcards are not supported . If mode is false or empty : Where the file is not specified in scchannel object ( because data are in RAM ) , or does not match ext , the entry for that channel will be returned as an empty string . If mode is true : Empty entries will be removed from the returned cell array ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getFileName"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getFileName.m/#getfilename","text":"getSourceName method for the scchannel class Examples out = getFileName ( obj ) ; out = getFileName ( channels {:} ) ; out = getFileName ( channels {:}, mode ) ; out = getFileName ( channels {:}, ext , mode ) ; Returns the names of the files from which the data are mapped as a cell column of strings If ext is specified as a string , only files with that extension will be returned . Note that wildcards are not supported . If mode is false or empty : Where the file is not specified in scchannel object ( because data are in RAM ) , or does not match ext , the entry for that channel will be returned as an empty string . If mode is true : Empty entries will be removed from the returned cell array ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getFileName"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getGroupNumber.m/","text":"getGroupNumber \u00b6 scchannel / getGroupNumber is a function . grp = getGroupNumber ( varargin )","title":"getGroupNumber"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getGroupNumber.m/#getgroupnumber","text":"scchannel / getGroupNumber is a function . grp = getGroupNumber ( varargin )","title":"getGroupNumber"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getPhase.m/","text":"getPhase \u00b6 getPhase returns the phase of an event during a cycle Examples : phase = getPhase ( trigchannel , eventchannel ) phase = getPhase ( trigchannel , eventchannel , start , stop ) returns the phase of the events in eventchannel in relation to the cycles defined by the events in trigchannel If defined , start and stop give the time period to use . Otherwise these default to start = 0 and stop = Inf . The output , phase , is a double precision vector . For each element , the fractional part represents the phase while the non - fractional part represents the number of the valid cycle that each event occurred in . Thus phase = 2 . 75 indicates that an event occurred 3 / 4 of the way through the second valid cycle in the period start to stop . Only valid events in eventchannel will be used . For triggers , only valid events will be used to mark the start of a cycle but all physical events will be searched for the end of cycle marker ( i . e for the start of the subsequent cycle ) . This is useful when there are breaks in the data e . g . if there are 10 cycles but the 10 th was interrupted , mark 1 - 9 as valid . Only these will be used for triggers but the onset of the interupted 10 th cycle will be used to determine the length of the 9 th cycle for calculating phase correctly . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"getPhase"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getPhase.m/#getphase","text":"getPhase returns the phase of an event during a cycle Examples : phase = getPhase ( trigchannel , eventchannel ) phase = getPhase ( trigchannel , eventchannel , start , stop ) returns the phase of the events in eventchannel in relation to the cycles defined by the events in trigchannel If defined , start and stop give the time period to use . Otherwise these default to start = 0 and stop = Inf . The output , phase , is a double precision vector . For each element , the fractional part represents the phase while the non - fractional part represents the number of the valid cycle that each event occurred in . Thus phase = 2 . 75 indicates that an event occurred 3 / 4 of the way through the second valid cycle in the period start to stop . Only valid events in eventchannel will be used . For triggers , only valid events will be used to mark the start of a cycle but all physical events will be searched for the end of cycle marker ( i . e for the start of the subsequent cycle ) . This is useful when there are breaks in the data e . g . if there are 10 cycles but the 10 th was interrupted , mark 1 - 9 as valid . Only these will be used for triggers but the onset of the interupted 10 th cycle will be used to determine the length of the 9 th cycle for calculating phase correctly . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"getPhase"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getPhysicalTriggers.m/","text":"getPhysicalTriggers \u00b6 getPhysicalTriggers returns all trigger times over a time period Example : trig = getPhysicalTriggers ( channel , start , stop ) [ trig markers ] = getPhysicalTriggers ( channel , start , stop ) where channel is an scchannel object start is the start time for the search stop is the stop time for the search trig is a vector of trigger time markers , when specified , are the marker data associated with the each trigger Returns all triggers where start <= channel . tim ( : , 1 ) <= stop Trigger times are those in column 1 of channel . tim if it has 1 or 2 columns or those in column 2 if it has 3 columns ( i . e . an explicit trigger time is present ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- Revisions : 16.08.08 Bug fix , wrongly tested length of tim instead of number of rows Corrected for Version 0.83 16.05.09 Add optional marker output","title":"getPhysicalTriggers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getPhysicalTriggers.m/#getphysicaltriggers","text":"getPhysicalTriggers returns all trigger times over a time period Example : trig = getPhysicalTriggers ( channel , start , stop ) [ trig markers ] = getPhysicalTriggers ( channel , start , stop ) where channel is an scchannel object start is the start time for the search stop is the stop time for the search trig is a vector of trigger time markers , when specified , are the marker data associated with the each trigger Returns all triggers where start <= channel . tim ( : , 1 ) <= stop Trigger times are those in column 1 of channel . tim if it has 1 or 2 columns or those in column 2 if it has 3 columns ( i . e . an explicit trigger time is present ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- Revisions : 16.08.08 Bug fix , wrongly tested length of tim instead of number of rows Corrected for Version 0.83 16.05.09 Add optional marker output","title":"getPhysicalTriggers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSampleInterval.m/","text":"getSampleInterval \u00b6 getSampleInterval returns the sampling interval in a scchannel object Example: interval=getSampleInterval(channel) interval is returned in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 03 . 08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getSampleInterval"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSampleInterval.m/#getsampleinterval","text":"getSampleInterval returns the sampling interval in a scchannel object Example: interval=getSampleInterval(channel) interval is returned in seconds ------------------------------------------------------------------------- Author: Malcolm Lidierth 03 . 08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getSampleInterval"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSampleRate.m/","text":"getSampleRate \u00b6 getSampleRate returns the sample rate in a scchannel object Example: Fs=getSampleRate(channel) Fs is returned as samples/second ------------------------------------------------------------------------- Author: Malcolm Lidierth 03 . 08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getSampleRate"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSampleRate.m/#getsamplerate","text":"getSampleRate returns the sample rate in a scchannel object Example: Fs=getSampleRate(channel) Fs is returned as samples/second ------------------------------------------------------------------------- Author: Malcolm Lidierth 03 . 08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getSampleRate"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSourceChannel.m/","text":"getSourceChannel \u00b6 getSourceChannel method for scchannels Example : schan = getSourceChannel ( obj ); schan = getSourceChannel ( obj1 , obj2 , [] , obj3 ); Typically , getSourceChannel will be used to analyze a cell array of scchannels : schan = getSourceChannel ( channels { : } ) The output is a row vector of source channel numbers . Zero is returned if a channel has no source or the cell array entry is empty ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getSourceChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSourceChannel.m/#getsourcechannel","text":"getSourceChannel method for scchannels Example : schan = getSourceChannel ( obj ); schan = getSourceChannel ( obj1 , obj2 , [] , obj3 ); Typically , getSourceChannel will be used to analyze a cell array of scchannels : schan = getSourceChannel ( channels { : } ) The output is a row vector of source channel numbers . Zero is returned if a channel has no source or the cell array entry is empty ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getSourceChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSourceName.m/","text":"getSourceName \u00b6 getSourceName method for the scchannel class Examples out = getSourceName ( obj ) ; out = getSourceName ( channels {:} ) ; out = getSourceName ( channels {:}, mode ) ; out = getSourceName ( channels {:}, ext , mode ) ; Returns the names of the original source files from which the data were read as a cell column of strings If ext is specified as a string , only files with that extension will be returned . Note that wildcards are not supported . If mode is false or empty : Where the source file is not specified in scchannel object , or does not match ext , the entry for that channel will be returned as an empty string . If mode is true : Empty entries will be removed from the returned cell array ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getSourceName"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getSourceName.m/#getsourcename","text":"getSourceName method for the scchannel class Examples out = getSourceName ( obj ) ; out = getSourceName ( channels {:} ) ; out = getSourceName ( channels {:}, mode ) ; out = getSourceName ( channels {:}, ext , mode ) ; Returns the names of the original source files from which the data were read as a cell column of strings If ext is specified as a string , only files with that extension will be returned . Note that wildcards are not supported . If mode is false or empty : Where the source file is not specified in scchannel object , or does not match ext , the entry for that channel will be returned as an empty string . If mode is true : Empty entries will be removed from the returned cell array ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 10 Copyright \u00a9 The Author & King ' s College London 2010- -------------------------------------------------------------------------","title":"getSourceName"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getTimeUnits.m/","text":"getTimeUnits \u00b6 getTimeUnits returns the units used to represent time in the tim field of an scchannel object as a string Example: str=getTimeUnits(channel) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getTimeUnits"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getTimeUnits.m/#gettimeunits","text":"getTimeUnits returns the units used to represent time in the tim field of an scchannel object as a string Example: str=getTimeUnits(channel) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"getTimeUnits"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getTimeVector.m/","text":"getTimeVector \u00b6 getTimeVector generates a vector or matrix of sample times for a wavform channel Example : t = getTimeVector ( channel ) where : t the output matrix containing the timebase , one value if t for each sample in the waveform channel channel a waveform channel as an scchannel object Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"getTimeVector"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getTimeVector.m/#gettimevector","text":"getTimeVector generates a vector or matrix of sample times for a wavform channel Example : t = getTimeVector ( channel ) where : t the output matrix containing the timebase , one value if t for each sample in the waveform channel channel a waveform channel as an scchannel object Toolboxes required : None -------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 -------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"getTimeVector"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getValidEpochNumbers.m/","text":"getValidEpochNumbers \u00b6 getValidEpochNumbers returns the physical numbers for valid epochs epochs = getValidEpochNumbers ( channel ) returns all valid epoch numbers epochs = getValidEpochNumbers ( channel , n ) returns the nth valid epoch number epochs = getValidEpochNumbers ( channel , n1 , n2 ) returns the n1th through n2th valid epoch numbers epochs = getValidEpochNumbers ( channel , n1 , step , n2 ) returns every step valid epoch between the n1th and n2th valid epoch numbers","title":"getValidEpochNumbers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getValidEpochNumbers.m/#getvalidepochnumbers","text":"getValidEpochNumbers returns the physical numbers for valid epochs epochs = getValidEpochNumbers ( channel ) returns all valid epoch numbers epochs = getValidEpochNumbers ( channel , n ) returns the nth valid epoch number epochs = getValidEpochNumbers ( channel , n1 , n2 ) returns the n1th through n2th valid epoch numbers epochs = getValidEpochNumbers ( channel , n1 , step , n2 ) returns every step valid epoch between the n1th and n2th valid epoch numbers","title":"getValidEpochNumbers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getValidTriggers.m/","text":"getValidTriggers \u00b6 getValidTriggers returns all valid trigger times over a time period Example : trig = getValidTriggers ( channel , start , stop ) [ trig markers ] = getValidTriggers ( channel , start , stop ) where channel is an scchannel object start is the start time for the search stop is the stop time for the search trig is a vector of trigger time markers , when specified , are the marker data associated with the each valid trigger Returns triggers for all valid events / epoochs where start <= channel . tim ( : , 1 ) <= stop Trigger times are those in column 1 of channel . tim if it has 1 or 2 columns or those in column 2 if it has 3 columns ( i . e . an explicit trigger time is present ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- Revisions : 16.05.09 Add optional marker output","title":"getValidTriggers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/getValidTriggers.m/#getvalidtriggers","text":"getValidTriggers returns all valid trigger times over a time period Example : trig = getValidTriggers ( channel , start , stop ) [ trig markers ] = getValidTriggers ( channel , start , stop ) where channel is an scchannel object start is the start time for the search stop is the stop time for the search trig is a vector of trigger time markers , when specified , are the marker data associated with the each valid trigger Returns triggers for all valid events / epoochs where start <= channel . tim ( : , 1 ) <= stop Trigger times are those in column 1 of channel . tim if it has 1 or 2 columns or those in column 2 if it has 3 columns ( i . e . an explicit trigger time is present ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- Revisions : 16.05.09 Add optional marker output","title":"getValidTriggers"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/inspect.m/","text":"inspect \u00b6 inspect method for scchannel objects Examples : s = inspect ( obj ) returns a structure that can then be inspected using the MATLAB array editor . Custom defined objects in each field of obj are also cast to structures ( and the fieldname changed to indicate this ) . memmapfile objects remain as objects and are not editable within the array editor inspect ( obj ) places the structure in ' ans ' in the base workspace and opens it in the array editor ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King \u0092 s College London 2008 - -------------------------------------------------------------------------","title":"inspect"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/inspect.m/#inspect","text":"inspect method for scchannel objects Examples : s = inspect ( obj ) returns a structure that can then be inspected using the MATLAB array editor . Custom defined objects in each field of obj are also cast to structures ( and the fieldname changed to indicate this ) . memmapfile objects remain as objects and are not editable within the array editor inspect ( obj ) places the structure in ' ans ' in the base workspace and opens it in the array editor ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King \u0092 s College London 2008 - -------------------------------------------------------------------------","title":"inspect"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isInSynch.m/","text":"isInSynch \u00b6 isInSynch method for scchannel objects Example TF=isInSynch(chan1 , chan2) where chan1 and chan2 are scchanel objects isInSynch returns true if the adc data in the channels share the same sampling rate and the beginning and end of each epoch are within 1 sample interval of each other ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"isInSynch"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isInSynch.m/#isinsynch","text":"isInSynch method for scchannel objects Example TF=isInSynch(chan1 , chan2) where chan1 and chan2 are scchanel objects isInSynch returns true if the adc data in the channels share the same sampling rate and the beginning and end of each epoch are within 1 sample interval of each other ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"isInSynch"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isMultiplexed.m/","text":"isMultiplexed \u00b6 isMultiplexed returns true if any of the channels contain multiplexed adc data Example: TF=isMultiplexed(chan1 , chan2 ,... ); ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"isMultiplexed"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isMultiplexed.m/#ismultiplexed","text":"isMultiplexed returns true if any of the channels contain multiplexed adc data Example: TF=isMultiplexed(chan1 , chan2 ,... ); ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"isMultiplexed"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isSwapNeeded.m/","text":"isSwapNeeded \u00b6 isSwapNeeded method for scchannel objects Example TF = isSwapNeeded ( obj ) returns true if data in the Map . Data . Adc need to be byte swapped on the current platform , false otherwise isSwapNeeded should rarely be needed . If data are accessed through the scchannel / subsref or adcarray / subsref methods , byte swapping will be done automatically as required . Only , if you extract the memmapfile object ( e . g . using get ) will you need to know the byte order .","title":"isSwapNeeded"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/isSwapNeeded.m/#isswapneeded","text":"isSwapNeeded method for scchannel objects Example TF = isSwapNeeded ( obj ) returns true if data in the Map . Data . Adc need to be byte swapped on the current platform , false otherwise isSwapNeeded should rarely be needed . If data are accessed through the scchannel / subsref or adcarray / subsref methods , byte swapping will be done automatically as required . Only , if you extract the memmapfile object ( e . g . using get ) will you need to know the byte order .","title":"isSwapNeeded"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/plot.m/","text":"plot \u00b6 plot method overloaded for scchannel class Example: figurehandle=plot(object) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 ------------------------------------------------------------------------- Revisions: Version 0 . 81 introduced a bug calling setappdata (fixed in 0 . 82)","title":"plot"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/plot.m/#plot","text":"plot method overloaded for scchannel class Example: figurehandle=plot(object) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 ------------------------------------------------------------------------- Revisions: Version 0 . 81 introduced a bug calling setappdata (fixed in 0 . 82)","title":"plot"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/scchannel.m/","text":"scchannel \u00b6 scchannel constructor for sigTOOL channel object Example : obj = scchannel ( s ) returns an scschannel object given a sigTOOL channel structure as input scchannel object methods fall into 4 classes : convXXXXXXXX getXXXXXXXXX findXXXXXXXX and extractXXXXXXXX When the input is a time , or time range conv and get methods will convert the supplied start time ( s ) to the next time coincident with a sample on the channel . The find methods work similarly to the get methods , but there are restrictions on the supplied inputs . Generally they require the supplied start or trigger times to fall within an epoch if data are episodic . If they do not , find methods will either : [ 1 ] return zero , typically e . g . when the expected returned value is an epoch number or [ 2 ] throw an error e . g . when the expected value is an index . extractXXXXXX methods are higher level , convenience , methods used to extract data from the scchannel objects findMaxPreTime findVectorIndices getPhysicalTriggers getValidTriggers convIndex2Time Documentation for scchannel doc scchannel","title":"scchannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/scchannel.m/#scchannel","text":"scchannel constructor for sigTOOL channel object Example : obj = scchannel ( s ) returns an scschannel object given a sigTOOL channel structure as input scchannel object methods fall into 4 classes : convXXXXXXXX getXXXXXXXXX findXXXXXXXX and extractXXXXXXXX When the input is a time , or time range conv and get methods will convert the supplied start time ( s ) to the next time coincident with a sample on the channel . The find methods work similarly to the get methods , but there are restrictions on the supplied inputs . Generally they require the supplied start or trigger times to fall within an epoch if data are episodic . If they do not , find methods will either : [ 1 ] return zero , typically e . g . when the expected returned value is an epoch number or [ 2 ] throw an error e . g . when the expected value is an index . extractXXXXXX methods are higher level , convenience , methods used to extract data from the scchannel objects findMaxPreTime findVectorIndices getPhysicalTriggers getValidTriggers convIndex2Time Documentation for scchannel doc scchannel","title":"scchannel"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/set.m/","text":"set \u00b6 set method for overloaded for the scchannel class Example: obj=set(obj , property , val) see the builtin set for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/set.m/#set","text":"set method for overloaded for the scchannel class Example: obj=set(obj , property , val) see the builtin set for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/size.m/","text":"size \u00b6 size method for overloaded for the scchannel class Example: varargout=size(obj , varargin) see the builtin size for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/size.m/#size","text":"size method for overloaded for the scchannel class Example: varargout=size(obj , varargin) see the builtin size for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/subsasgn.m/","text":"subsasgn \u00b6 subsasgn method for overloaded for the scchannel class Example: obj=subsasgn(obj , index , val) see the builtin subsasgn for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/subsasgn.m/#subsasgn","text":"subsasgn method for overloaded for the scchannel class Example: obj=subsasgn(obj , index , val) see the builtin subsasgn for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/subsref.m/","text":"subsref \u00b6 subsref method for overloaded for the scchannel class Example: obj=subsref(obj , index , val) see the builtin subsref for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/subsref.m/#subsref","text":"subsref method for overloaded for the scchannel class Example: obj=subsref(obj , index , val) see the builtin subsref for details ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/private/ConvertTimeToIndex.m/","text":"ConvertTimeToIndex \u00b6","title":"ConvertTimeToIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40scchannel/private/ConvertTimeToIndex.m/#converttimetoindex","text":"","title":"ConvertTimeToIndex"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/filesaveas.m/","text":"filesaveas \u00b6 FileSaveAs method for sigTOOLDataView objects Example: filesaveas(obj) Used to generate graphics output ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 ------------------------------------------------------------------------- filesaveas can mess up hgjavacomponent objects so manage them through printprepare and postprinttidy","title":"filesaveas"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/filesaveas.m/#filesaveas","text":"FileSaveAs method for sigTOOLDataView objects Example: filesaveas(obj) Used to generate graphics output ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - 2008 ------------------------------------------------------------------------- filesaveas can mess up hgjavacomponent objects so manage them through printprepare and postprinttidy","title":"filesaveas"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/get.m/","text":"get \u00b6 get method for sigTOOLResultView objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/get.m/#get","text":"get method for sigTOOLResultView objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/postprinttidy.m/","text":"postprinttidy \u00b6 postprinttidy methods for sigTOOLDataView objects serves as helper for print / export functions Example : postprinttidy ( obj , AxesPanel , annot , pos )","title":"postprinttidy"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/postprinttidy.m/#postprinttidy","text":"postprinttidy methods for sigTOOLDataView objects serves as helper for print / export functions Example : postprinttidy ( obj , AxesPanel , annot , pos )","title":"postprinttidy"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/print.m/","text":"print \u00b6 print method for sigTOOLResultView objects Example : print ( obj , option1 , option2 ...... )","title":"print"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/print.m/#print","text":"print method for sigTOOLResultView objects Example : print ( obj , option1 , option2 ...... )","title":"print"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/printprepare.m/","text":"printprepare \u00b6 printprepare helper function for sigTOOLResultView prints Example : [ fhandle , AxesPanel , annot , pos ] = printprepare ( obj )","title":"printprepare"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/printprepare.m/#printprepare","text":"printprepare helper function for sigTOOLResultView prints Example : [ fhandle , AxesPanel , annot , pos ] = printprepare ( obj )","title":"printprepare"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/printpreview.m/","text":"printpreview \u00b6 printpreview method for sigTOOLResultView objects Example : printpreview ( obj )","title":"printpreview"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/printpreview.m/#printpreview","text":"printpreview method for sigTOOLResultView objects Example : printpreview ( obj )","title":"printpreview"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/sigTOOLDataView.m/","text":"sigTOOLDataView \u00b6 sigTOOLDataView constructor Example : obj = sigTOOLDataView ( fhandle ) where fhandle is the handle of a figure created via the scchannel / plot method 30.01 . 10 Remove references from result view Documentation for sigTOOLDataView doc sigTOOLDataView","title":"sigTOOLDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLDataView/sigTOOLDataView.m/#sigtooldataview","text":"sigTOOLDataView constructor Example : obj = sigTOOLDataView ( fhandle ) where fhandle is the handle of a figure created via the scchannel / plot method 30.01 . 10 Remove references from result view Documentation for sigTOOLDataView doc sigTOOLDataView","title":"sigTOOLDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/display.m/","text":"display \u00b6 display method for sigTOOLResultData objects","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/display.m/#display","text":"display method for sigTOOLResultData objects","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/get.m/","text":"get \u00b6 get method for sigTOOLResultData objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/get.m/#get","text":"get method for sigTOOLResultData objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/plot.m/","text":"plot \u00b6 plot method overloaded for sigTOOLResultData objects Example h=plot(data) create a new sigTOOLResultView figure h=plot(figurehandle , result) refreshes an existing sigTOOLResultView figure using the result object in result ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"plot"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/plot.m/#plot","text":"plot method overloaded for sigTOOLResultData objects Example h=plot(data) create a new sigTOOLResultView figure h=plot(figurehandle , result) refreshes an existing sigTOOLResultView figure using the result object in result ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"plot"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/set.m/","text":"set \u00b6 set method for sigTOOLResultData objects Example: out=set(obj , field1 , value1 , field2 , value2 ..... ) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/set.m/#set","text":"set method for sigTOOLResultData objects Example: out=set(obj , field1 , value1 , field2 , value2 ..... ) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/sigTOOLResultData.m/","text":"sigTOOLResultData \u00b6 sigTOOLResultData constructor Overloaded methods : Revisions : 11.09 . 09 Add datasourcetitle field Documentation for sigTOOLResultData doc sigTOOLResultData","title":"sigTOOLResultData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/sigTOOLResultData.m/#sigtoolresultdata","text":"sigTOOLResultData constructor Overloaded methods : Revisions : 11.09 . 09 Add datasourcetitle field Documentation for sigTOOLResultData doc sigTOOLResultData","title":"sigTOOLResultData"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/subsasgn.m/","text":"subsasgn \u00b6 subsasgn method for sigTOOLResultData objects Example: out=subsasgn(obj , index , value) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/subsasgn.m/#subsasgn","text":"subsasgn method for sigTOOLResultData objects Example: out=subsasgn(obj , index , value) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/subsref.m/","text":"subsref \u00b6 subsref method for sigTOOLResultData objects Example: out=subsref(obj , index) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultData/subsref.m/#subsref","text":"subsref method for sigTOOLResultData objects Example: out=subsref(obj , index) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/filesaveas.m/","text":"filesaveas \u00b6 filesaveas method for sigTOOLResultView objects Example: filesaveas(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"filesaveas"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/filesaveas.m/#filesaveas","text":"filesaveas method for sigTOOLResultView objects Example: filesaveas(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"filesaveas"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/get.m/","text":"get \u00b6 get method for sigTOOLResultView objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/get.m/#get","text":"get method for sigTOOLResultView objects Example: out=get(obj , field) ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/postprinttidy.m/","text":"postprinttidy \u00b6 postprinttidy methods for sigTOOLResultView objects serves as helper for print/export functions Example: postprinttidy(obj , AxesPanel , annot , pos , displaymode) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"postprinttidy"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/postprinttidy.m/#postprinttidy","text":"postprinttidy methods for sigTOOLResultView objects serves as helper for print/export functions Example: postprinttidy(obj , AxesPanel , annot , pos , displaymode) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"postprinttidy"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/print.m/","text":"print \u00b6 print method for sigTOOLResultView objects Example: print(obj , option1 , option2 ...... ) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"print"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/print.m/#print","text":"print method for sigTOOLResultView objects Example: print(obj , option1 , option2 ...... ) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"print"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/printprepare.m/","text":"printprepare \u00b6 printprepare helper function for sigTOOLResultView prints Example: [ fhandle , AxesPanel , annot , pos ] =printprepare(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"printprepare"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/printprepare.m/#printprepare","text":"printprepare helper function for sigTOOLResultView prints Example: [ fhandle , AxesPanel , annot , pos ] =printprepare(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"printprepare"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/printpreview.m/","text":"printpreview \u00b6 printpreview method for sigTOOLResultView objects Example: printpreview(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"printpreview"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/printpreview.m/#printpreview","text":"printpreview method for sigTOOLResultView objects Example: printpreview(obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"printpreview"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/sigTOOLResultView.m/","text":"sigTOOLResultView \u00b6 sigTOOLResultView constructor Example: obj=sigTOOLResultView(rhandle) where rhandle is the handle of a figure created via the sigTOOLResultData/plot method ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - ------------------------------------------------------------------------- Documentation for sigTOOLResultView doc sigTOOLResultView","title":"sigTOOLResultView"},{"location":"reference/lib/sigTOOL/CORE/utils/%40sigTOOLResultView/sigTOOLResultView.m/#sigtoolresultview","text":"sigTOOLResultView constructor Example: obj=sigTOOLResultView(rhandle) where rhandle is the handle of a figure created via the sigTOOLResultData/plot method ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - ------------------------------------------------------------------------- Documentation for sigTOOLResultView doc sigTOOLResultView","title":"sigTOOLResultView"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/display.m/","text":"display \u00b6 DISPLAY method overloaded for tstamp objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/display.m/#display","text":"DISPLAY method overloaded for tstamp objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"display"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/end.m/","text":"end \u00b6 END method overloaded for tstamp objects For tstamp objects , END applies to the data in the timesarray . Map . Data . Stamps property . Thus : end ( obj (:, 2 )) is equivalent to end ( obj . Map . Data . Stamps (:, 2 )) See also END Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"end"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/end.m/#end","text":"END method overloaded for tstamp objects For tstamp objects , END applies to the data in the timesarray . Map . Data . Stamps property . Thus : end ( obj (:, 2 )) is equivalent to end ( obj . Map . Data . Stamps (:, 2 )) See also END Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"end"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/get.m/","text":"get \u00b6 GET method overloaded for tstamp objects Examples : GET ( OBJ ) displays properties A = GET ( OBJ ) returns a structure A = GET ( OBJ , PROP ) < m - by - n cell array > = GET ( OBJ , < property cell array > ) where PROP is a string or cell array of strings See also GET , TSTAMP / SUBSREF , TSTAMP / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/get.m/#get","text":"GET method overloaded for tstamp objects Examples : GET ( OBJ ) displays properties A = GET ( OBJ ) returns a structure A = GET ( OBJ , PROP ) < m - by - n cell array > = GET ( OBJ , < property cell array > ) where PROP is a string or cell array of strings See also GET , TSTAMP / SUBSREF , TSTAMP / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"get"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/horzcat.m/","text":"horzcat \u00b6 HORZCAT method overloaded for tstamp objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called by matlab when A1 , A2 etc includes an tstamp object See also HORZCAT , TSTAMP / VERTCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"horzcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/horzcat.m/#horzcat","text":"HORZCAT method overloaded for tstamp objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called by matlab when A1 , A2 etc includes an tstamp object See also HORZCAT , TSTAMP / VERTCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"horzcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/length.m/","text":"length \u00b6 LENGTH method overloaded for tstamp objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006-7","title":"length"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/length.m/#length","text":"LENGTH method overloaded for tstamp objects Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006-7","title":"length"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/set.m/","text":"set \u00b6 SET method overloaded for tstamp objects Examples : A = SET ( OBJ ) returns a structure SET ( OBJ , 'PROP1' , VAL1 , 'PROP2' , VAL2 .... ) SET ( OBJ , < property cell array > , < property value array > ) sets the appropriate properties to the supplied values See also SET , TSTAMP / SUBSREF , TSTAMP / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/set.m/#set","text":"SET method overloaded for tstamp objects Examples : A = SET ( OBJ ) returns a structure SET ( OBJ , 'PROP1' , VAL1 , 'PROP2' , VAL2 .... ) SET ( OBJ , < property cell array > , < property value array > ) sets the appropriate properties to the supplied values See also SET , TSTAMP / SUBSREF , TSTAMP / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"set"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/size.m/","text":"size \u00b6 SIZE method overloaded for tstamp objects For tstamp objects SIZE applies to the data in the OBJ . MAP . DATA . STAMPS property . Thus : SIZE ( OBJ ) or SIZE ( OBJ ( ... )) is equivalent to SIZE ( OBJ . MAP . DATA . Stamps ) or SIZE ( OBJ . MAP . DATA . STAMPS ( .. )) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/size.m/#size","text":"SIZE method overloaded for tstamp objects For tstamp objects SIZE applies to the data in the OBJ . MAP . DATA . STAMPS property . Thus : SIZE ( OBJ ) or SIZE ( OBJ ( ... )) is equivalent to SIZE ( OBJ . MAP . DATA . Stamps ) or SIZE ( OBJ . MAP . DATA . STAMPS ( .. )) Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"size"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/subsasgn.m/","text":"subsasgn \u00b6 SUBSASGN method overloaded for tstamp objects . Examples : OBJ . PROP = VAL OBJ . PROP1 . PROP2 = VAL etc . assigns the value B to the specified property of the tstamp object See TSTAMP / TSTAMP for a list of properties Note : Treating obj as a double precision array i . e . using OBJ ( ... ) = x is not expected to be used in code specifically designed for tstamps but works as follows : SUBSASGN converts all the data to double precision , scales it , applies the offset , executes obj . Func , does the assignment on the result and then returns it , i . e . obj ( ... ) = ... mycode ... is equivalent to obj = obj (); % Calls tstamp . subsref and returns a double precision array obj ( ... ) = ... mycode ... % Assigns values to the double array Note that the tstamp object is destroyed This behaviour is sometimes useful as it allows tstamp objects to be passed as inputs to some MATLAB functions that were not designed to take them e . g . , y = filtfilt ( a , b , obj ) where obj contains an MxN array executes a line in filtfilt : y = obj ; that will make a copy of the object ( no call to SUBSASGN ) . Then for i = 1 : n % loop over columns y (:, i ) = filtfilt ( b , a , obj (:, i )); end calls SUBSASGN which converts y to double precision on its first iteration . Throughout , obj remains an tstamp object accessed via SUBSREF so this is more memory efficient than y = filtfilt ( a , b , obj ()) where both obj and y are stored throughout as double precision arrays . See also SUBSASGN , TSTAMP / SUBSREF , TSTAMP / TSTAMP , TSTAMP / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006 Correction 21 / 7 / 06 - delete isfield ( val , 'Repeat' )","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/subsasgn.m/#subsasgn","text":"SUBSASGN method overloaded for tstamp objects . Examples : OBJ . PROP = VAL OBJ . PROP1 . PROP2 = VAL etc . assigns the value B to the specified property of the tstamp object See TSTAMP / TSTAMP for a list of properties Note : Treating obj as a double precision array i . e . using OBJ ( ... ) = x is not expected to be used in code specifically designed for tstamps but works as follows : SUBSASGN converts all the data to double precision , scales it , applies the offset , executes obj . Func , does the assignment on the result and then returns it , i . e . obj ( ... ) = ... mycode ... is equivalent to obj = obj (); % Calls tstamp . subsref and returns a double precision array obj ( ... ) = ... mycode ... % Assigns values to the double array Note that the tstamp object is destroyed This behaviour is sometimes useful as it allows tstamp objects to be passed as inputs to some MATLAB functions that were not designed to take them e . g . , y = filtfilt ( a , b , obj ) where obj contains an MxN array executes a line in filtfilt : y = obj ; that will make a copy of the object ( no call to SUBSASGN ) . Then for i = 1 : n % loop over columns y (:, i ) = filtfilt ( b , a , obj (:, i )); end calls SUBSASGN which converts y to double precision on its first iteration . Throughout , obj remains an tstamp object accessed via SUBSREF so this is more memory efficient than y = filtfilt ( a , b , obj ()) where both obj and y are stored throughout as double precision arrays . See also SUBSASGN , TSTAMP / SUBSREF , TSTAMP / TSTAMP , TSTAMP / SET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006 Correction 21 / 7 / 06 - delete isfield ( val , 'Repeat' )","title":"subsasgn"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/subsref.m/","text":"subsref \u00b6 SUBSREF method overloaded for tstamp objects . READING TSTAMP PROPERTIES : tstamp objects can be read or passed as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : 20 ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Stamps and transforming them via obj . Func i . e . a = obj ( ... ) is equivalent to a = func ( double ( obj . Map . Data . Stamps ( ... )) * obj . Scale + obj . Shift ) It follows that you can not use this syntax to access arrays of tstamps e . g . x ( 2 ) = tstamp () is invalid ( although you can access cell arrays of tstamps ) . Examples : A = OBJ (); A = OBJ ( 1 : 10 ); A = FUNCTION ( OBJ ()); Field access with '.' works as with other objects e . g . obj . Map . Data . Stamps returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Stamps ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling etc . ) . obj without subscription assigns / passes the object see TSTAMP / SUBSASGN for further details [ e . g . A = FILTFILT ( OBJ );] obj at the command prompt displays a summary of the contents of obj See also TSTAMP / SUBSASGN , TSTAMP / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/subsref.m/#subsref","text":"SUBSREF method overloaded for tstamp objects . READING TSTAMP PROPERTIES : tstamp objects can be read or passed as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : 20 ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Stamps and transforming them via obj . Func i . e . a = obj ( ... ) is equivalent to a = func ( double ( obj . Map . Data . Stamps ( ... )) * obj . Scale + obj . Shift ) It follows that you can not use this syntax to access arrays of tstamps e . g . x ( 2 ) = tstamp () is invalid ( although you can access cell arrays of tstamps ) . Examples : A = OBJ (); A = OBJ ( 1 : 10 ); A = FUNCTION ( OBJ ()); Field access with '.' works as with other objects e . g . obj . Map . Data . Stamps returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Stamps ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling etc . ) . obj without subscription assigns / passes the object see TSTAMP / SUBSASGN for further details [ e . g . A = FILTFILT ( OBJ );] obj at the command prompt displays a summary of the contents of obj See also TSTAMP / SUBSASGN , TSTAMP / GET Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"subsref"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/tstamp.m/","text":"tstamp \u00b6 TSTAMP contructor for tstamp class objects TSTAMP objects allow data to be accessed as though the tstamp was a double array while storing the data in more compact form , including as a memmapfile object . TSTAMP objects are similar to ADCARRAY objects but are designed for storing timestamps rather than waveforms . An TSTAMP object usually contains a memmapfile object , together with a scale and time offset ( shift ) to convert the values stored on disc ( and pointed to by the memmapfile object ) to real world values which are returned as double precision . These can also be transformed by a function pointed to by a handle stored in the tstamp object . Referencing a TSTAMP object as though it were a double precision array i . e . using obj ( ... ) returns a scaled , shifted and transformed double precision array regardless of the native format of the data in the . Data . Time field . These can be passed as input arguments to other MATLAB functions e . g . s = sum ( obj ()) . Also , the memmapfile object can be replaced by a structure where tstamps are used to store data in MATLAB memory space without using memmapfile ( which removes the need for linkage to a disc file ) . TSTAMP objects have six properties MAP : [ 1 ] A memmapfile object containing the data or [ 2 ] A structure containing the data In either case , the data is available in obj . Map . Data . Stamps or by using the obj () syntax ( see below ) SCALE : Multiplier to convert data to basic clock units . When the scaled values are multiplied by Units ( see below ) the timestamps will be in seconds i . e . obj . Map . Data . Stamps * Scale * Units gives the time in seconds SHIFT : Value added to returned data after scaling . This is usually zero . If non - zero it should be scaled in basic clock ticks to allow conversion to seconds using Units . FUNC : A function handle UNITS : The multiplier needed to convert the scaled values to seconds e . g : 1 if the scaled values are in seconds ( default ) 10 ^- 3 ........................ millisconds 10 ^- 6 ........................ microseconds etc . 86400. ........................ days 3600. ......................... hours 60. ........................... minutes Other values may also be used e . g . if the basic clock tick is 1.25 microseconds , Units would be 1.25 * 10 ^- 6. SWAP : true / false flag indicating whether disc data need to be byte swapped Creating tstamp objects : Examples : OBJ = TSTAMP () creates a default object ( . Map is a structure ) OBJ = TSTAMP ( IN ) creates an object where : obj . Map is a memmapfile object if IN is such as object . Note that data should be in IN . MAP . DATA . STAMPS - explicitly provide a format to memmapfile . m when creating IN to create the Data structure with a DATA . STAMPS field e . g . m = memmapfile ( 'mydata.dat' , 'format' ,{ 'int16' [ 20 200 200 ] 'Stamps' }, ... 'repeat' , 1 ) or obj . Map is a structure if IN is not a memmapfile object , in which case the contents if IN will be placed in the . Data . Stamps field OBJ = TSTAMP ( IN , SCALE ) OBJ = TSTAMP ( IN , SCALE , SHIFT ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC , UNITS ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC , UNITS , SWAPBYTES ) set the relevant properties as described above . OBJ = TSTAMP ( S ) casts structure s to tstamp class . s must have the appropriate fields . READING TSTAMP PROPERTIES : TSTAMP objects can be read as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : end ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Stamps and transforming them via obj . Func i . e . obj ( ... ) is equivalent to func ( double ( obj . Map . Data . Stamps ( ... )) * obj . Scale + obj . Shift ) It follows that you can not use this syntax to access arrays of tstamps e . g . x ( 2 ) = tstamp () is invalid ( though cell arrays of tstamps are OK e . g . x { 2 } = tstamp ()) . Note that SIZE () and END are overloaded for tstamp objects and return the size ( or end index ) of the obj . Map . Data . Stamps field . Field access with '.' or using GET works as with other objects E . g . get ( obj , 'Scale' ) or obj . Map . Data . Stamps returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Stamps ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling or offseting ) . obj without subscription passes the object obj at the command prompt displays a summary of the contents of obj USING FUNC FUNC may be a handle to a simple function to transform the data . Markers The marker field is added to a tstamp on creation but is always set empty . Values should be added to the marker field through the set or subsasgn methods See also adcarray Author : Malcolm Lidierth Copyright \u00a9 2006 King \u0092 s College London Revisions : 05.12 . 06 Coding tidied 03.01 . 10 Add default constructor Documentation for tstamp doc tstamp","title":"tstamp"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/tstamp.m/#tstamp","text":"TSTAMP contructor for tstamp class objects TSTAMP objects allow data to be accessed as though the tstamp was a double array while storing the data in more compact form , including as a memmapfile object . TSTAMP objects are similar to ADCARRAY objects but are designed for storing timestamps rather than waveforms . An TSTAMP object usually contains a memmapfile object , together with a scale and time offset ( shift ) to convert the values stored on disc ( and pointed to by the memmapfile object ) to real world values which are returned as double precision . These can also be transformed by a function pointed to by a handle stored in the tstamp object . Referencing a TSTAMP object as though it were a double precision array i . e . using obj ( ... ) returns a scaled , shifted and transformed double precision array regardless of the native format of the data in the . Data . Time field . These can be passed as input arguments to other MATLAB functions e . g . s = sum ( obj ()) . Also , the memmapfile object can be replaced by a structure where tstamps are used to store data in MATLAB memory space without using memmapfile ( which removes the need for linkage to a disc file ) . TSTAMP objects have six properties MAP : [ 1 ] A memmapfile object containing the data or [ 2 ] A structure containing the data In either case , the data is available in obj . Map . Data . Stamps or by using the obj () syntax ( see below ) SCALE : Multiplier to convert data to basic clock units . When the scaled values are multiplied by Units ( see below ) the timestamps will be in seconds i . e . obj . Map . Data . Stamps * Scale * Units gives the time in seconds SHIFT : Value added to returned data after scaling . This is usually zero . If non - zero it should be scaled in basic clock ticks to allow conversion to seconds using Units . FUNC : A function handle UNITS : The multiplier needed to convert the scaled values to seconds e . g : 1 if the scaled values are in seconds ( default ) 10 ^- 3 ........................ millisconds 10 ^- 6 ........................ microseconds etc . 86400. ........................ days 3600. ......................... hours 60. ........................... minutes Other values may also be used e . g . if the basic clock tick is 1.25 microseconds , Units would be 1.25 * 10 ^- 6. SWAP : true / false flag indicating whether disc data need to be byte swapped Creating tstamp objects : Examples : OBJ = TSTAMP () creates a default object ( . Map is a structure ) OBJ = TSTAMP ( IN ) creates an object where : obj . Map is a memmapfile object if IN is such as object . Note that data should be in IN . MAP . DATA . STAMPS - explicitly provide a format to memmapfile . m when creating IN to create the Data structure with a DATA . STAMPS field e . g . m = memmapfile ( 'mydata.dat' , 'format' ,{ 'int16' [ 20 200 200 ] 'Stamps' }, ... 'repeat' , 1 ) or obj . Map is a structure if IN is not a memmapfile object , in which case the contents if IN will be placed in the . Data . Stamps field OBJ = TSTAMP ( IN , SCALE ) OBJ = TSTAMP ( IN , SCALE , SHIFT ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC , UNITS ) OBJ = TSTAMP ( IN , SCALE , SHIFT , FUNC , UNITS , SWAPBYTES ) set the relevant properties as described above . OBJ = TSTAMP ( S ) casts structure s to tstamp class . s must have the appropriate fields . READING TSTAMP PROPERTIES : TSTAMP objects can be read as though they were simple double precision matrices using the '()' subscriptor . Thus , obj (), obj (:), obj ( 1 : 10 ), obj ( 2 , 1 : 5 , 10 : end ) etc return double precision results after applying the scale and offset to the appropriate elements of obj . Map . Data . Stamps and transforming them via obj . Func i . e . obj ( ... ) is equivalent to func ( double ( obj . Map . Data . Stamps ( ... )) * obj . Scale + obj . Shift ) It follows that you can not use this syntax to access arrays of tstamps e . g . x ( 2 ) = tstamp () is invalid ( though cell arrays of tstamps are OK e . g . x { 2 } = tstamp ()) . Note that SIZE () and END are overloaded for tstamp objects and return the size ( or end index ) of the obj . Map . Data . Stamps field . Field access with '.' or using GET works as with other objects E . g . get ( obj , 'Scale' ) or obj . Map . Data . Stamps returns the stored result in its native class . Subscription of fields using '()' also works normally , thus a = obj . Map . Data . Stamps ( 1 : 10 ) returns the first 10 elements of data ( in the native format without scaling or offseting ) . obj without subscription passes the object obj at the command prompt displays a summary of the contents of obj USING FUNC FUNC may be a handle to a simple function to transform the data . Markers The marker field is added to a tstamp on creation but is always set empty . Values should be added to the marker field through the set or subsasgn methods See also adcarray Author : Malcolm Lidierth Copyright \u00a9 2006 King \u0092 s College London Revisions : 05.12 . 06 Coding tidied 03.01 . 10 Add default constructor Documentation for tstamp doc tstamp","title":"tstamp"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/vertcat.m/","text":"vertcat \u00b6 VERTCAT method overloaded for tstamp objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called when A1 , A2 etc includes an tstamp object See also VERTCAT , TSTAMP / HORZCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"vertcat"},{"location":"reference/lib/sigTOOL/CORE/utils/%40tstamp/vertcat.m/#vertcat","text":"VERTCAT method overloaded for tstamp objects Example : C = vertcat ( A1 , A2 , ... ) returns a double precision array C . Called when A1 , A2 etc includes an tstamp object See also VERTCAT , TSTAMP / HORZCAT Author : Malcolm Lidierth Copyright \u00a9 The Author & King 's College London 2006","title":"vertcat"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CreateCursor.m/","text":"CreateCursor \u00b6 scCreateCursor creates or replaces a vertical cursor Examples n = CreateCursor () n = CreateCursor ( fighandle ) n = CreateCursor ( fighandle , CursorNumber ) n = CreateCursor ( fighandle , CursorNumber , AxesList ) n = CreateCursor ( fighandle , CursorNumber , AxesList , UserFunction ) Cursors are specific to a figure . If the figure handle is not specified in fhandle , the current figure ( returned by gcf ) will be used . CursorNumber is any positive number . If not specified the lowest numbered free cursor number will be used . AxesList , if supplied and not empty , is vector of axes handles and will restrict the drawing of cursors to the specified axes . Note that cursor numbers must be unique to any MATLAB figure but using this feature , cursors 1 and 2 , for example , could be applied to one set of axes while 3 and 4 are applied to a second set . UserFunction , if specified is a function handle or a cell array containing a function handle in the first element . The function will be called when there is a ButtonUpEvent following movement of the cursor . if UserFunction is a cell array , the 2 nd and subsequent elements will be passed to the function as arguments . Returns n , the number of the cursor created in the relevant figure . A record is kept of the cursors in the figure ' s application data area . Cursor n occupies the nth element of a cell array . Each element is a structure containing the following fields : Handles : a list of objects associated with this cursor - one line for each axes and one or more text objects IsActive : true if this cursor is currently being moved . False otherwise . For manual cursors , IsActive is set by a button down on the cursor and cleared by a button up . Functions that affect the position of a cursor must explicitly update all the objects listed in Handles . A cursor is not presently an object itself . Revisions : 27 . 02 . 07 add restoration of gca 30 . 01 . 08 add uicontextmenu . Speed up UpdateCursorPosition . 14 . 11 . 09 add UserFunction argument 15 . 11 . 09 update text label only on button up - improves speed ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"CreateCursor"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CreateCursor.m/#createcursor","text":"scCreateCursor creates or replaces a vertical cursor Examples n = CreateCursor () n = CreateCursor ( fighandle ) n = CreateCursor ( fighandle , CursorNumber ) n = CreateCursor ( fighandle , CursorNumber , AxesList ) n = CreateCursor ( fighandle , CursorNumber , AxesList , UserFunction ) Cursors are specific to a figure . If the figure handle is not specified in fhandle , the current figure ( returned by gcf ) will be used . CursorNumber is any positive number . If not specified the lowest numbered free cursor number will be used . AxesList , if supplied and not empty , is vector of axes handles and will restrict the drawing of cursors to the specified axes . Note that cursor numbers must be unique to any MATLAB figure but using this feature , cursors 1 and 2 , for example , could be applied to one set of axes while 3 and 4 are applied to a second set . UserFunction , if specified is a function handle or a cell array containing a function handle in the first element . The function will be called when there is a ButtonUpEvent following movement of the cursor . if UserFunction is a cell array , the 2 nd and subsequent elements will be passed to the function as arguments . Returns n , the number of the cursor created in the relevant figure . A record is kept of the cursors in the figure ' s application data area . Cursor n occupies the nth element of a cell array . Each element is a structure containing the following fields : Handles : a list of objects associated with this cursor - one line for each axes and one or more text objects IsActive : true if this cursor is currently being moved . False otherwise . For manual cursors , IsActive is set by a button down on the cursor and cleared by a button up . Functions that affect the position of a cursor must explicitly update all the objects listed in Handles . A cursor is not presently an object itself . Revisions : 27 . 02 . 07 add restoration of gca 30 . 01 . 08 add uicontextmenu . Speed up UpdateCursorPosition . 14 . 11 . 09 add UserFunction argument 15 . 11 . 09 update text label only on button up - improves speed ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"CreateCursor"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CursorDemo.m/","text":"CursorDemo \u00b6 demo function for cursors Example : type CursorDemo at the command line","title":"CursorDemo"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CursorDemo.m/#cursordemo","text":"demo function for cursors Example : type CursorDemo at the command line","title":"CursorDemo"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CursorWindowButtonMotionFcn.m/","text":"CursorWindowButtonMotionFcn \u00b6 CursorWindowButtonMotionFcn - figure motion callback to support cursors Example : To activate , use set ( figurehandle , 'WindowButtonMotionFcn' , { @CursorWindowButtonMotionFcn } ); This property is set automatically by CreateCursor CursorWindowButtonMotionFcn does not need to be active - if is interferes with graphics rendering clear the WindowButtonMotionFcn property CursorWindowButtonMotionFcn displays the cursor movement pointer when the cursor location is over a line object that belongs to a cursor created by CreateCursor . Over a cursor means within 3 pixels of it . Note : When the pointer is not over a cursor CursorWindowButtonMotionFcn resets the cursor to the default arrow . It will not restore the pointer to e . g . an hour glass . ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007 ------------------------------------------------------------------------- Changes : 22 / 5 / 07 whichaxes now handles non - cell rect 30 / 01 / 08 now handles axes contained in a uipanel","title":"CursorWindowButtonMotionFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/CursorWindowButtonMotionFcn.m/#cursorwindowbuttonmotionfcn","text":"CursorWindowButtonMotionFcn - figure motion callback to support cursors Example : To activate , use set ( figurehandle , 'WindowButtonMotionFcn' , { @CursorWindowButtonMotionFcn } ); This property is set automatically by CreateCursor CursorWindowButtonMotionFcn does not need to be active - if is interferes with graphics rendering clear the WindowButtonMotionFcn property CursorWindowButtonMotionFcn displays the cursor movement pointer when the cursor location is over a line object that belongs to a cursor created by CreateCursor . Over a cursor means within 3 pixels of it . Note : When the pointer is not over a cursor CursorWindowButtonMotionFcn resets the cursor to the default arrow . It will not restore the pointer to e . g . an hour glass . ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 07 Copyright \u00a9 The Author & King ' s College London 2007 ------------------------------------------------------------------------- Changes : 22 / 5 / 07 whichaxes now handles non - cell rect 30 / 01 / 08 now handles axes contained in a uipanel","title":"CursorWindowButtonMotionFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/DeleteCursor.m/","text":"DeleteCursor \u00b6 DeleteCursor deletes a cursor created by CreateCursor Examples: scDeleteCursor(CursorNumber) scDeleteCursor(fhandle , CursorNumber) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 ------------------------------------------------------------------------- Revisions: 21 . 08 . 08 return cleanly when specified cursor does not exist 09 . 03 . 09 improve 21 . 08 . 08 fix","title":"DeleteCursor"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/DeleteCursor.m/#deletecursor","text":"DeleteCursor deletes a cursor created by CreateCursor Examples: scDeleteCursor(CursorNumber) scDeleteCursor(fhandle , CursorNumber) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 ------------------------------------------------------------------------- Revisions: 21 . 08 . 08 return cleanly when specified cursor does not exist 09 . 03 . 09 improve 21 . 08 . 08 fix","title":"DeleteCursor"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/GetCursorLocation.m/","text":"GetCursorLocation \u00b6 GetCursorLocation returns the position of a cursor in x - axis units Example: x=GetCursorLocation(CursorNumber) x=GetCursorLocation(fhandle , CursorNumber) fhandle defaults to the current figure if not supplied or empty Returns x , the x - axis position for the cursor in the figure -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 --------------------------------------------------------------------------","title":"GetCursorLocation"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/GetCursorLocation.m/#getcursorlocation","text":"GetCursorLocation returns the position of a cursor in x - axis units Example: x=GetCursorLocation(CursorNumber) x=GetCursorLocation(fhandle , CursorNumber) fhandle defaults to the current figure if not supplied or empty Returns x , the x - axis position for the cursor in the figure -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 --------------------------------------------------------------------------","title":"GetCursorLocation"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/SetCursorLocation.m/","text":"SetCursorLocation \u00b6 SetCursorPos sets the position of a cursor in x - axis units Example: x=SetCursorLocation(CursorNumber , Position) x=SetCursorLocation(fhandle , CursorNumber , Position) fhandle defaults to the current figure if not supplied or empty Sets the x - axis position for the cursor in the figure -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 --------------------------------------------------------------------------","title":"SetCursorLocation"},{"location":"reference/lib/sigTOOL/CORE/utils/Cursors/SetCursorLocation.m/#setcursorlocation","text":"SetCursorPos sets the position of a cursor in x - axis units Example: x=SetCursorLocation(CursorNumber , Position) x=SetCursorLocation(fhandle , CursorNumber , Position) fhandle defaults to the current figure if not supplied or empty Sets the x - axis position for the cursor in the figure -------------------------------------------------------------------------- Author: Malcolm Lidierth 01/07 Copyright \u00a9 The Author & King's College London 2007 --------------------------------------------------------------------------","title":"SetCursorLocation"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCleanUpAxes.m/","text":"scCleanUpAxes \u00b6 Delete text","title":"scCleanUpAxes"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCleanUpAxes.m/#sccleanupaxes","text":"Delete text","title":"scCleanUpAxes"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCreateDataView.m/","text":"scCreateDataView \u00b6 scCreateDataView generates a strip chart data view in sigTOOL Example : [ AxesList ]= CreateDataView ( fhandle ) Inputs : fhandle = handle of the target figure Outputs : AxesList = vector containing handles for each of the axes Creates a strip chart with one set of axes for each channel in the 'channel' field of fhandle 's application data area. scCreateDataView calls scCreateFigControls to add the uicontrols. See also scCreateFigControls ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/06 Copyright \u00a9 The Author & King' s College London 2006 - 2007 ------------------------------------------------------------------------- Revisions : 23.09.09 Limit channel title display to 8 characters 05.11.09 See within","title":"scCreateDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCreateDataView.m/#sccreatedataview","text":"scCreateDataView generates a strip chart data view in sigTOOL Example : [ AxesList ]= CreateDataView ( fhandle ) Inputs : fhandle = handle of the target figure Outputs : AxesList = vector containing handles for each of the axes Creates a strip chart with one set of axes for each channel in the 'channel' field of fhandle 's application data area. scCreateDataView calls scCreateFigControls to add the uicontrols. See also scCreateFigControls ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/06 Copyright \u00a9 The Author & King' s College London 2006 - 2007 ------------------------------------------------------------------------- Revisions : 23.09.09 Limit channel title display to 8 characters 05.11.09 See within","title":"scCreateDataView"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCreateFigControls.m/","text":"scCreateFigControls \u00b6 scCreateFigControls displays standard uicontrols for a sigTOOL data view scCreateFigControls adds controls to a strip chart created with scCreateDataView() Example: scCreateFigControls(fhandle , MaxTime) MaxTime = maximum x - axis value (default 100) ------------------------------------------------------------------------- Author: Malcolm Lidierth 05/05 Copyright \u00a9 The Author & King's College London 2005 - 2007 -------------------------------------------------------------------------","title":"scCreateFigControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scCreateFigControls.m/#sccreatefigcontrols","text":"scCreateFigControls displays standard uicontrols for a sigTOOL data view scCreateFigControls adds controls to a strip chart created with scCreateDataView() Example: scCreateFigControls(fhandle , MaxTime) MaxTime = maximum x - axis value (default 100) ------------------------------------------------------------------------- Author: Malcolm Lidierth 05/05 Copyright \u00a9 The Author & King's College London 2005 - 2007 -------------------------------------------------------------------------","title":"scCreateFigControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scDataViewDrawChannelList.m/","text":"scDataViewDrawChannelList \u00b6 scDataViewDrawChannelList draws channels to a sigTOOL data view Example scDataViewDrawChannelList(fhandle , ChannelList) fhandle is the figure handle ChannelList is the list of channels to draw ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scDataViewDrawChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scDataViewDrawChannelList.m/#scdataviewdrawchannellist","text":"scDataViewDrawChannelList draws channels to a sigTOOL data view Example scDataViewDrawChannelList(fhandle , ChannelList) fhandle is the figure handle ChannelList is the list of channels to draw ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scDataViewDrawChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scDataViewDrawData.m/","text":"scDataViewDrawData \u00b6 scDataViewDrawData draws or updates the sigTOOL data view Examples : scDataViewDrawData ( fhandle ) scDataViewDrawData ( fhandle , render ) update the data display in the sigTOOL data view with the specified handle . The optional render flag , if specified , will override the setting of DataView . PreRenderDataView from the scPreferences . mat file . Pre - rendering of data reduces the number of data points drawn to match the screen resolution . Render should be logical ( true or false ) . -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King ' s College London 2006 -------------------------------------------------------------------------- Revisions : 22 . 10 . 08 See within 27 . 01 . 10 Fix bug : wrong numbering of active ( green ) markers","title":"scDataViewDrawData"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scDataViewDrawData.m/#scdataviewdrawdata","text":"scDataViewDrawData draws or updates the sigTOOL data view Examples : scDataViewDrawData ( fhandle ) scDataViewDrawData ( fhandle , render ) update the data display in the sigTOOL data view with the specified handle . The optional render flag , if specified , will override the setting of DataView . PreRenderDataView from the scPreferences . mat file . Pre - rendering of data reduces the number of data points drawn to match the screen resolution . Render should be logical ( true or false ) . -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King ' s College London 2006 -------------------------------------------------------------------------- Revisions : 22 . 10 . 08 See within 27 . 01 . 10 Fix bug : wrong numbering of active ( green ) markers","title":"scDataViewDrawData"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scGetFigureType.m/","text":"scGetFigureType \u00b6 scGetFigureType returns the sigTOOL figure type from the Tag This is the Tag with ' : ' appended to the end . Example : string = scGetFigureType ( fhandle )","title":"scGetFigureType"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scGetFigureType.m/#scgetfiguretype","text":"scGetFigureType returns the sigTOOL figure type from the Tag This is the Tag with ' : ' appended to the end . Example : string = scGetFigureType ( fhandle )","title":"scGetFigureType"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scIncreaseXRange.m/","text":"scIncreaseXRange \u00b6 scIncreaseXRange callback: increases the x - axis range in a sigTOOL data view Example scIncreaseXRange(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scIncreaseXRange"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scIncreaseXRange.m/#scincreasexrange","text":"scIncreaseXRange callback: increases the x - axis range in a sigTOOL data view Example scIncreaseXRange(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scIncreaseXRange"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scInsertLogo.m/","text":"scInsertLogo \u00b6 scInsertLogo places the sigTOOL logo in a data view","title":"scInsertLogo"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scInsertLogo.m/#scinsertlogo","text":"scInsertLogo places the sigTOOL logo in a data view","title":"scInsertLogo"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scMarkerButtonDownFcn.m/","text":"scMarkerButtonDownFcn \u00b6 scMarkerButtonDownFcn provides a gateway to user - specified functions Example : scMarkerButtonDownFcn ( FIN ) passes control to the function specified by FIN . FIN must be a string ( i . e a function name ). When scMarkerButtonDownFcn is called as a callback , it will examine the application data area for the calling object . If this contains a ' Data ' field , this will be passed to the function specified by FIN as its input . The ' Data ' field be a 2 elemnt vector contaning [ channelnumber index ] where index is the index into the highest dimension of the data on the channel e . g . for a video channel on channel 1 , to examine frame number 22 ' Data ' should be [ 1 22 ] scMarkerButtonDownFcn is used as a callback routine for objects in the sigTOOL data view and passes control to a user specified function ( FIN ). FIN is specified in the channel { X }. hdr . channeltypeFcn field which should be set by the ImportXXXX function for the relevant channel type e . g . for image data chan { 1 }. hdr . channeltypeFcn will be set to ' scViewImageData ' . Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions : 26.01.10 Correct help . Function handles not supported","title":"scMarkerButtonDownFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scMarkerButtonDownFcn.m/#scmarkerbuttondownfcn","text":"scMarkerButtonDownFcn provides a gateway to user - specified functions Example : scMarkerButtonDownFcn ( FIN ) passes control to the function specified by FIN . FIN must be a string ( i . e a function name ). When scMarkerButtonDownFcn is called as a callback , it will examine the application data area for the calling object . If this contains a ' Data ' field , this will be passed to the function specified by FIN as its input . The ' Data ' field be a 2 elemnt vector contaning [ channelnumber index ] where index is the index into the highest dimension of the data on the channel e . g . for a video channel on channel 1 , to examine frame number 22 ' Data ' should be [ 1 22 ] scMarkerButtonDownFcn is used as a callback routine for objects in the sigTOOL data view and passes control to a user specified function ( FIN ). FIN is specified in the channel { X }. hdr . channeltypeFcn field which should be set by the ImportXXXX function for the relevant channel type e . g . for image data chan { 1 }. hdr . channeltypeFcn will be set to ' scViewImageData ' . Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions : 26.01.10 Correct help . Function handles not supported","title":"scMarkerButtonDownFcn"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scReduceXRange.m/","text":"scReduceXRange \u00b6 scReduceXRange callback: reduces the x - axis range in a sigTOOL data view Example scReduceXRange(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scReduceXRange"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scReduceXRange.m/#screducexrange","text":"scReduceXRange callback: reduces the x - axis range in a sigTOOL data view Example scReduceXRange(hObject , EventData) standard callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scReduceXRange"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scResizeFigControls.m/","text":"scResizeFigControls \u00b6 scResizeFigControls resizes the uicontrols in the current figure Example scResizeFigControls ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scResizeFigControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scResizeFigControls.m/#scresizefigcontrols","text":"scResizeFigControls resizes the uicontrols in the current figure Example scResizeFigControls ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scResizeFigControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scSliderAct.m/","text":"scSliderAct \u00b6 Callback routine for XAxisSlider control ML 05 / 05","title":"scSliderAct"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scSliderAct.m/#scslideract","text":"Callback routine for XAxisSlider control ML 05 / 05","title":"scSliderAct"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scUpdateAxisControls.m/","text":"scUpdateAxisControls \u00b6 scUpdateAxisControls updates the x-axis controls in a sigTOOL data view","title":"scUpdateAxisControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scUpdateAxisControls.m/#scupdateaxiscontrols","text":"scUpdateAxisControls updates the x-axis controls in a sigTOOL data view","title":"scUpdateAxisControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scViewImageData.m/","text":"scViewImageData \u00b6 scViewImageData draws and image associated with a sigTOOL marker scViewImageData is called by scMarkerButtonDownFcn when a marker is selected with the mouse in the sigTOOL data view.","title":"scViewImageData"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scViewImageData.m/#scviewimagedata","text":"scViewImageData draws and image associated with a sigTOOL marker scViewImageData is called by scMarkerButtonDownFcn when a marker is selected with the mouse in the sigTOOL data view.","title":"scViewImageData"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scXAxisControls.m/","text":"scXAxisControls \u00b6 scXAxisControls creates data view x - axis controls Example: scXAxisControls(Panel , MaxTime) Panel is the sigTOOL data view or uipanel handle MaxTime is the maximum time in the data file ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scXAxisControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/scXAxisControls.m/#scxaxiscontrols","text":"scXAxisControls creates data view x - axis controls Example: scXAxisControls(Panel , MaxTime) Panel is the sigTOOL data view or uipanel handle MaxTime is the maximum time in the data file ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"scXAxisControls"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scChannelManager.m/","text":"scChannelManager \u00b6 scChannelManager creates the channel manager for a sigTOOL data view Example: [ tp , cs , tree ] = scChannelManager ( fhandle ) scChannelManager returns the handles / jcontrols for the panel , scrollpane and tree . These handles are also added to the ChannelManager field of the figure ' s application data area e . g . Panel: [ 1 x1 jcontrol ] ScrollPane: [ 1 x1 jcontrol ] Tree: [ 1 x1 javax . swing . JTree ] The channel tree is drag enabled so you can drag and drop channel selections into other sigTOOL GUI items . The channel manager GUI provides access to the following ( embedded ) functions COPY: Places the current channel selection in the system clipboard DRAW: Draws the currently selected channels INSPECT *: Places a copy of the present ( singly ) selected channel structure ( note not object ) in the base workspace and opens it in the MATLAB array editor . This can be used to view the data settings . Note that editing values will have no affect on the data stored in the data view . REMAP releases virtual memory assigned to the data channels for this , and all other , open sigTOOL files COMMIT: For the selected channels , this commits memory mapped data stored on disc to RAM ( in both tim and adc fields ). The commit function will return harmlessly if you receive an out of memory error . Selected channels are commited in numerical order . * TODO: replace this behaviour with a JTable ------------------------------------------------------------------------- Author: Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - ------------------------------------------------------------------------- Revisions: 08.11.09 See within","title":"scChannelManager"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scChannelManager.m/#scchannelmanager","text":"scChannelManager creates the channel manager for a sigTOOL data view Example: [ tp , cs , tree ] = scChannelManager ( fhandle ) scChannelManager returns the handles / jcontrols for the panel , scrollpane and tree . These handles are also added to the ChannelManager field of the figure ' s application data area e . g . Panel: [ 1 x1 jcontrol ] ScrollPane: [ 1 x1 jcontrol ] Tree: [ 1 x1 javax . swing . JTree ] The channel tree is drag enabled so you can drag and drop channel selections into other sigTOOL GUI items . The channel manager GUI provides access to the following ( embedded ) functions COPY: Places the current channel selection in the system clipboard DRAW: Draws the currently selected channels INSPECT *: Places a copy of the present ( singly ) selected channel structure ( note not object ) in the base workspace and opens it in the MATLAB array editor . This can be used to view the data settings . Note that editing values will have no affect on the data stored in the data view . REMAP releases virtual memory assigned to the data channels for this , and all other , open sigTOOL files COMMIT: For the selected channels , this commits memory mapped data stored on disc to RAM ( in both tim and adc fields ). The commit function will return harmlessly if you receive an out of memory error . Selected channels are commited in numerical order . * TODO: replace this behaviour with a JTable ------------------------------------------------------------------------- Author: Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - ------------------------------------------------------------------------- Revisions: 08.11.09 See within","title":"scChannelManager"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scChannelTreeRowToChannelList.m/","text":"scChannelTreeRowToChannelList \u00b6 scChannelTreeRowToChannelList returns a channel list from the channel tree ChanList = scChannelTreeRowToChannelList ( fhandle , rows ) fhandle is the handle of a sigTOOL data view rows are the indices of the rows in the JTree For the following tree : FileName Row 0 [ 1 ] Chan #1 1 [ 2 ] Chan #2 2 [ 3 ] Chan #3 3 adc 4 tim 5 mrk 6 [ 32 ] Chan #32 7 [ 33 ] Chan #33 8 [ 34 ] Chan #34 9 scChannelTreeRowToChannelList ( handle ,[ 1 : 7 , 9 ] would return [ 1 2 3 32 34 ]. Note that row indices change on - the - fly depending on how the JTree has been expanded . scChannelTreeRowToChannelList takes account of this . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - -------------------------------------------------------------------------","title":"scChannelTreeRowToChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scChannelTreeRowToChannelList.m/#scchanneltreerowtochannellist","text":"scChannelTreeRowToChannelList returns a channel list from the channel tree ChanList = scChannelTreeRowToChannelList ( fhandle , rows ) fhandle is the handle of a sigTOOL data view rows are the indices of the rows in the JTree For the following tree : FileName Row 0 [ 1 ] Chan #1 1 [ 2 ] Chan #2 2 [ 3 ] Chan #3 3 adc 4 tim 5 mrk 6 [ 32 ] Chan #32 7 [ 33 ] Chan #33 8 [ 34 ] Chan #34 9 scChannelTreeRowToChannelList ( handle ,[ 1 : 7 , 9 ] would return [ 1 2 3 32 34 ]. Note that row indices change on - the - fly depending on how the JTree has been expanded . scChannelTreeRowToChannelList takes account of this . ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - -------------------------------------------------------------------------","title":"scChannelTreeRowToChannelList"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scGetChannelTree.m/","text":"scGetChannelTree \u00b6 ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"scGetChannelTree"},{"location":"reference/lib/sigTOOL/CORE/utils/DataView/ChannelManager/scGetChannelTree.m/#scgetchanneltree","text":"------------------------------------------------------------------------- Author: Malcolm Lidierth 08/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"scGetChannelTree"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/scSendToExternalInterface.m/","text":"scSendToExternalInterface \u00b6 scSendToExternalInterface exports sigTOOL data to an external program Example: scSendToExternalInterface(fhandle , externalfunc) fhandle is the handle of the sigTOOL figure to export data from externalfunc is the handle to a function that does the work ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scSendToExternalInterface"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/scSendToExternalInterface.m/#scsendtoexternalinterface","text":"scSendToExternalInterface exports sigTOOL data to an external program Example: scSendToExternalInterface(fhandle , externalfunc) fhandle is the handle of the sigTOOL figure to export data from externalfunc is the handle to a function that does the work ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"scSendToExternalInterface"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/scSendToSigBrowse.m/","text":"scSendToSigBrowse \u00b6 scSendToSigBrowse sends a waveform channel to TMW's spTOOL Revisions: 27.12.09 Updated to use scchannel methods","title":"scSendToSigBrowse"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/scSendToSigBrowse.m/#scsendtosigbrowse","text":"scSendToSigBrowse sends a waveform channel to TMW's spTOOL Revisions: 27.12.09 Updated to use scchannel methods","title":"scSendToSigBrowse"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToExcel.m/","text":"scSendToExcel \u00b6 scSendToExcel exports data to an Excel spreadsheet Example : scSendToExcel ( hObject ) where hObject is the handle of the source axes / uipanel / figure For details see 'Examples of using MATLAB as an automation client' in the MATLAB help All data are exported to Excel from the clicked axes , uipanel or figure . If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 -------------------------------------------------------------------------","title":"scSendToExcel"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToExcel.m/#scsendtoexcel","text":"scSendToExcel exports data to an Excel spreadsheet Example : scSendToExcel ( hObject ) where hObject is the handle of the source axes / uipanel / figure For details see 'Examples of using MATLAB as an automation client' in the MATLAB help All data are exported to Excel from the clicked axes , uipanel or figure . If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 -------------------------------------------------------------------------","title":"scSendToExcel"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToOrigin.m/","text":"scSendToOrigin \u00b6 scscSendToOriginSendToExcel exports data to an Oigin project Example : scSendToOrigin ( hObject ) where hObject is the handle of the source axes / uipanel / figure For details see 'Examples of using MATLAB as an automation client' in the MATLAB help and the OriginLabs example file located at ... Origin Root folder .../ Samples / Automation Server / MATLAB / CreatePlotInOrigin . m All data are exported to Excel from the clicked axes , uipanel or figure . If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . All sheets will be contained in one Work Book ( Book1 ) . Sheet1 is always left empty . Origin supports only one open project . If there are unsaved changes in a current project you will be prompted to save them . ------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King 's College London 2006- -------------------------------------------------------------------------","title":"scSendToOrigin"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToOrigin.m/#scsendtoorigin","text":"scscSendToOriginSendToExcel exports data to an Oigin project Example : scSendToOrigin ( hObject ) where hObject is the handle of the source axes / uipanel / figure For details see 'Examples of using MATLAB as an automation client' in the MATLAB help and the OriginLabs example file located at ... Origin Root folder .../ Samples / Automation Server / MATLAB / CreatePlotInOrigin . m All data are exported to Excel from the clicked axes , uipanel or figure . If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . All sheets will be contained in one Work Book ( Book1 ) . Sheet1 is always left empty . Origin supports only one open project . If there are unsaved changes in a current project you will be prompted to save them . ------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 06 Copyright \u00a9 The Author & King 's College London 2006- -------------------------------------------------------------------------","title":"scSendToOrigin"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToSigmaPlot.m/","text":"scSendToSigmaPlot \u00b6 scSendToSigmaPlot sends data from a sigTOOL result view to SigmaPlot Example : scSendToSigmaPlot ( hObject ) hObject is either : the handle of a figure ( data on all axes will be plotted ) the handle of a single set of axes to plot scSendToSigmaPlot invokes SigmaPlot and passes the data scSendToSigmaPlot requires Windows ActiveX support If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 ------------------------------------------------------------------------- Revised 01.08 Multiple frames / worksheets supported","title":"scSendToSigmaPlot"},{"location":"reference/lib/sigTOOL/CORE/utils/Export/Send%20To/scSendToSigmaPlot.m/#scsendtosigmaplot","text":"scSendToSigmaPlot sends data from a sigTOOL result view to SigmaPlot Example : scSendToSigmaPlot ( hObject ) hObject is either : the handle of a figure ( data on all axes will be plotted ) the handle of a single set of axes to plot scSendToSigmaPlot invokes SigmaPlot and passes the data scSendToSigmaPlot requires Windows ActiveX support If the data from the exported axes include only a single frame , data will be exported to a single worksheet . With multiple frames , data from each set of axes will be exported to a separate worksheet . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 ------------------------------------------------------------------------- Revised 01.08 Multiple frames / worksheets supported","title":"scSendToSigmaPlot"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AddDimension.m/","text":"AddDimension \u00b6 AddDimension adds a trailing singleton dimension to a variable in a MAT - file Example : AddDimension ( FILENAME , VARNAME ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing that data to add to VARNAME E . g . If VARNAME is a 100 x100x3 matrix , AddDimension makes it a 100 x100x3x1 matrix ( on disc - MATLAB 's LOAD, WHOS, SIZE etc will remove the singleton dimension ) . Subsequent calls to AppendMatrix will then add data to the fourth dimension creating . Restrictions : VARNAME must be the name of the final variable in FILENAME . VARNAME must be the name of a pre - existing variable . FileName must be a v6 MAT - file __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AddDimension"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AddDimension.m/#adddimension","text":"AddDimension adds a trailing singleton dimension to a variable in a MAT - file Example : AddDimension ( FILENAME , VARNAME ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing that data to add to VARNAME E . g . If VARNAME is a 100 x100x3 matrix , AddDimension makes it a 100 x100x3x1 matrix ( on disc - MATLAB 's LOAD, WHOS, SIZE etc will remove the singleton dimension ) . Subsequent calls to AppendMatrix will then add data to the fourth dimension creating . Restrictions : VARNAME must be the name of the final variable in FILENAME . VARNAME must be the name of a pre - existing variable . FileName must be a v6 MAT - file __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AddDimension"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendColumns.m/","text":"AppendColumns \u00b6 AppendColumns appends a 2 D matrix to an existing 2 D matrix in a MAT - file Example : AppendMatrix ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is a column vector or 2 D matrix containing the data to add to VARNAME AppendColumns horizontally concatenates the contents of VARNAME and NEWDATA Restrictions : VARNAME must be the name of the final variable in FILENAME . NEWNAME and VARNAME must have the same number of rows . The class of VARNAME on disc must be the same as NEWNAME ( use RestoreDiscClass after a MATLAB save call ,) and both must be real valued . AppendColumns produces an identical result to the more general AppendMatrix which may be used with higher dimensions matrices __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendColumns"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendColumns.m/#appendcolumns","text":"AppendColumns appends a 2 D matrix to an existing 2 D matrix in a MAT - file Example : AppendMatrix ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is a column vector or 2 D matrix containing the data to add to VARNAME AppendColumns horizontally concatenates the contents of VARNAME and NEWDATA Restrictions : VARNAME must be the name of the final variable in FILENAME . NEWNAME and VARNAME must have the same number of rows . The class of VARNAME on disc must be the same as NEWNAME ( use RestoreDiscClass after a MATLAB save call ,) and both must be real valued . AppendColumns produces an identical result to the more general AppendMatrix which may be used with higher dimensions matrices __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendColumns"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendMatrix.m/","text":"AppendMatrix \u00b6 AppendMatrix appends the contents of a matrix to a variable in a MAT - file Example : AppendMatrix ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing the data to add to VARNAME The data in NEWDATA are added to the highest existing dimension of VARNAME . E . g . if VARNAME is a 100 x100x21 matrix on disc and NEWNAME is 100 x100x3 , the resulting VARNAME will be 100 x100x24 . AppendMatrix can also add a submatrix following a call to AddDimension e . g . : x = zeros ( 2 , 2 , 2 ) save myfile x - v6 AddDimension ( 'myfile' , 'x' ) % Create a 2 x2x2x1 matrix in the file AddMatrix ( 'myfile' , 'x' , x ) % place x in x (:,:,:, 2 ) load myfile x AddMatrix ( 'myfile' , 'x' , x ) % adds x to x (:,:,:, 3 : 4 ) Restrictions : VARNAME must be the name of the final variable in FILENAME . NEWNAME and VARNAME must have identical dimensions below the highest dimension of VARNAME . The class of VARNAME on disc must be the same as NEWNAME ( use RestoreDiscClass if need be ) and both must be real valued . To append data to a vector , use AppendVector instead For 2 D matrices , AppendColumns and AppendMatrix produce identical results See Also RestoreDiscClass , AppendVector , AppendColumns __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendMatrix"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendMatrix.m/#appendmatrix","text":"AppendMatrix appends the contents of a matrix to a variable in a MAT - file Example : AppendMatrix ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing the data to add to VARNAME The data in NEWDATA are added to the highest existing dimension of VARNAME . E . g . if VARNAME is a 100 x100x21 matrix on disc and NEWNAME is 100 x100x3 , the resulting VARNAME will be 100 x100x24 . AppendMatrix can also add a submatrix following a call to AddDimension e . g . : x = zeros ( 2 , 2 , 2 ) save myfile x - v6 AddDimension ( 'myfile' , 'x' ) % Create a 2 x2x2x1 matrix in the file AddMatrix ( 'myfile' , 'x' , x ) % place x in x (:,:,:, 2 ) load myfile x AddMatrix ( 'myfile' , 'x' , x ) % adds x to x (:,:,:, 3 : 4 ) Restrictions : VARNAME must be the name of the final variable in FILENAME . NEWNAME and VARNAME must have identical dimensions below the highest dimension of VARNAME . The class of VARNAME on disc must be the same as NEWNAME ( use RestoreDiscClass if need be ) and both must be real valued . To append data to a vector , use AppendVector instead For 2 D matrices , AppendColumns and AppendMatrix produce identical results See Also RestoreDiscClass , AppendVector , AppendColumns __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendMatrix"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendVector.m/","text":"AppendVector \u00b6 AppendVector adds a vector to an existing vector in a MAT - file Example : AppendVector ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing that data to add to VARNAME Restrictions : VARNAME must be the name of the final variable in FILENAME . VARNAME must be the name of a pre - existing vector and NEWNAME must be vector . NEWNAME (:) will be added to the longest dimsension of VARNAME preserving row / column vector organization __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendVector"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/AppendVector.m/#appendvector","text":"AppendVector adds a vector to an existing vector in a MAT - file Example : AppendVector ( FILENAME , VARNAME , NEWDATA ) FILENAME is a string with the name of the file ( which should be a v6 MAT - file ) . VARNAME is a string with the name of the target variable . NEWDATA is the matrix containing that data to add to VARNAME Restrictions : VARNAME must be the name of the final variable in FILENAME . VARNAME must be the name of a pre - existing vector and NEWNAME must be vector . NEWNAME (:) will be added to the longest dimsension of VARNAME preserving row / column vector organization __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendVector"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/CheckIsLastEntry.m/","text":"CheckIsLastEntry \u00b6 CheckIsLastEntry checks that a variable is the last entry in a MAT - file Example : flag = CheckIsLastEntry ( FILENAME , VARNAME ) FILENAME is the name of the MAT - file VARNAME is the variable name Returns FLAG == true if check proves OK , false otherwise __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King 's College London 2006 __________________________________________________________________________","title":"CheckIsLastEntry"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/CheckIsLastEntry.m/#checkislastentry","text":"CheckIsLastEntry checks that a variable is the last entry in a MAT - file Example : flag = CheckIsLastEntry ( FILENAME , VARNAME ) FILENAME is the name of the MAT - file VARNAME is the variable name Returns FLAG == true if check proves OK , false otherwise __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King 's College London 2006 __________________________________________________________________________","title":"CheckIsLastEntry"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/Contents.m/","text":"Contents \u00b6 MAT Files AddDimension - AddDimension adds a trailing singleton dimension to a variable in a AppendColumns - AppendColumns appends a 2 D matrix to an existing 2 D matrix in a MAT - file AppendMatrix - AppendMatrix appends the contents of a matrix to a variable in a MAT - file AppendVector - AppendVector adds a vector to an existing vector in a MAT - file CheckIsLastEntry - CheckIsLastEntry checks that a variable is the last entry in a MAT - file CreateMatrix - CreateMatrix is presently unused endian - endian returns the endian format for the specified MAT file GetLastEntry - GetLastEntry checks that a variable is the last entry in a MAT - file MATOpen - MATOpen opens a MAT file in appropriate endian mode and returns a handle RestoreDiscClass - RestoreDiscClass changes the class of the data in a MAT file ( v6 ) VarRename - VarRename overwrites a variable name in a Level 5 Version 6 MAT - File where - returns byte offsets to the variables in a - v6 MAT - file .","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/Contents.m/#contents","text":"MAT Files AddDimension - AddDimension adds a trailing singleton dimension to a variable in a AppendColumns - AppendColumns appends a 2 D matrix to an existing 2 D matrix in a MAT - file AppendMatrix - AppendMatrix appends the contents of a matrix to a variable in a MAT - file AppendVector - AppendVector adds a vector to an existing vector in a MAT - file CheckIsLastEntry - CheckIsLastEntry checks that a variable is the last entry in a MAT - file CreateMatrix - CreateMatrix is presently unused endian - endian returns the endian format for the specified MAT file GetLastEntry - GetLastEntry checks that a variable is the last entry in a MAT - file MATOpen - MATOpen opens a MAT file in appropriate endian mode and returns a handle RestoreDiscClass - RestoreDiscClass changes the class of the data in a MAT file ( v6 ) VarRename - VarRename overwrites a variable name in a Level 5 Version 6 MAT - File where - returns byte offsets to the variables in a - v6 MAT - file .","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/CreateMatrix.m/","text":"CreateMatrix \u00b6 CreateMatrix is presently unused CreateMatrix creates a new variable in a MAT - file ( v6 ) Example : CreateMatrix ( filename , var ) CreateMatrix ( filename , var , varsz ) FILENAME is the name of the target MAT - file , which will be created if it does not already exist . VAR is the variable to create . It may be any standard MATLAB class and may be complex . It may not be a cell , structure or object . The contents of VAR will be written to the target MAT - file . VAR must be the first elements of the final variable - correctly ordered in memory . The variable in the file will then be padded to the required number of elements to match VARSZ . ( Note : with complex data , the padding is not guaranteed to be zero - padding - some pad elements may be set to eps ( class ( var )) . Note that a variable with the same name as VAR may not already be present if FILENAME already exists . VARSZ is the target size of VAR Use : Suppose we wish to write 180 frames of a video to a MAT file . Each frame is a 100 x100x3 RGB image ( total of 43200000 bytes for the video ) . Then using AVIREAD to load each frame in turn : f = aviread ( 'myvideo.avi' , 1 ); % Read frame 1 CreateMatrix ( 'mymatfile.mat' , f ,[ 1000 1000 3 180 ]); for n = 2 : 180 f = aviread ( 'myvideo.avi' , n ); SavePartMatrix ( 'mymatfile.mat' , f ); end __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"CreateMatrix"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/CreateMatrix.m/#creatematrix","text":"CreateMatrix is presently unused CreateMatrix creates a new variable in a MAT - file ( v6 ) Example : CreateMatrix ( filename , var ) CreateMatrix ( filename , var , varsz ) FILENAME is the name of the target MAT - file , which will be created if it does not already exist . VAR is the variable to create . It may be any standard MATLAB class and may be complex . It may not be a cell , structure or object . The contents of VAR will be written to the target MAT - file . VAR must be the first elements of the final variable - correctly ordered in memory . The variable in the file will then be padded to the required number of elements to match VARSZ . ( Note : with complex data , the padding is not guaranteed to be zero - padding - some pad elements may be set to eps ( class ( var )) . Note that a variable with the same name as VAR may not already be present if FILENAME already exists . VARSZ is the target size of VAR Use : Suppose we wish to write 180 frames of a video to a MAT file . Each frame is a 100 x100x3 RGB image ( total of 43200000 bytes for the video ) . Then using AVIREAD to load each frame in turn : f = aviread ( 'myvideo.avi' , 1 ); % Read frame 1 CreateMatrix ( 'mymatfile.mat' , f ,[ 1000 1000 3 180 ]); for n = 2 : 180 f = aviread ( 'myvideo.avi' , n ); SavePartMatrix ( 'mymatfile.mat' , f ); end __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"CreateMatrix"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/GetLastEntry.m/","text":"GetLastEntry \u00b6 GetLastEntry checks that a variable is the last entry in a MAT - file Example : VARNAME = GetLastEntry ( FILENAME ) FILENAME is the name of the MAT - file __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"GetLastEntry"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/GetLastEntry.m/#getlastentry","text":"GetLastEntry checks that a variable is the last entry in a MAT - file Example : VARNAME = GetLastEntry ( FILENAME ) FILENAME is the name of the MAT - file __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"GetLastEntry"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/MATOpen.m/","text":"MATOpen \u00b6 MATOpen opens a MAT file in appropriate endian mode and returns a handle Example : [ FH , SWAP ] = MATOPEN ( FILENAME , PERMISSION ) FH is the returned file handle PERMISSION is the permission string for FOPEN SWAP is set true if the byte order is different to the default of the host platform The \"appropriate\" endian order is either : The system default endian if FILENAME does not exist The existing endian order for the file if FILENAME does exist See also endian Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions : 16.03 . 08 Remove endian as varname now function endian is defined","title":"MATOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/MATOpen.m/#matopen","text":"MATOpen opens a MAT file in appropriate endian mode and returns a handle Example : [ FH , SWAP ] = MATOPEN ( FILENAME , PERMISSION ) FH is the returned file handle PERMISSION is the permission string for FOPEN SWAP is set true if the byte order is different to the default of the host platform The \"appropriate\" endian order is either : The system default endian if FILENAME does not exist The existing endian order for the file if FILENAME does exist See also endian Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions : 16.03 . 08 Remove endian as varname now function endian is defined","title":"MATOpen"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/RestoreDiscClass.m/","text":"RestoreDiscClass \u00b6 RestoreDiscClass changes the class of the data in a MAT file ( v6 ) Example : filename = RestoreDiscClass ( FILENAME , VARNAME ) FILENAME : The target file . Must be a v6 MAT - file VARNAME : string with the variable name VARNAME must be a standard matrix ( numeric ( including complex ), logical or char ) but may not be sparse . RestoreDiscClass works with both real and complex variables The MATLAB builin SAVE command casts data to the smallest class possible without causing loss of data . LOAD then casts back to the original class . RestoreDiscClass casts the data on disc to the original class . The target variable must be the final variable in the MAT - file i . e . it must be at the end of the file RestoreDiscClass should be called before using any of the AppendXXXXX functions to ensure that adequate bytes have been set aside to store the appended data without loss . FILENAME is returned by RestoreDiscClass prefixed with full path details . This can be used to avoid confusion if multiple files with the same name occur and no path is specified expicitly ( although this would normally only cause problems if there are MAT files in the \\ private folder of the MAT - utilities ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________ Revisions : 04.11 . 07 Reposition code for no change : now faster","title":"RestoreDiscClass"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/RestoreDiscClass.m/#restorediscclass","text":"RestoreDiscClass changes the class of the data in a MAT file ( v6 ) Example : filename = RestoreDiscClass ( FILENAME , VARNAME ) FILENAME : The target file . Must be a v6 MAT - file VARNAME : string with the variable name VARNAME must be a standard matrix ( numeric ( including complex ), logical or char ) but may not be sparse . RestoreDiscClass works with both real and complex variables The MATLAB builin SAVE command casts data to the smallest class possible without causing loss of data . LOAD then casts back to the original class . RestoreDiscClass casts the data on disc to the original class . The target variable must be the final variable in the MAT - file i . e . it must be at the end of the file RestoreDiscClass should be called before using any of the AppendXXXXX functions to ensure that adequate bytes have been set aside to store the appended data without loss . FILENAME is returned by RestoreDiscClass prefixed with full path details . This can be used to avoid confusion if multiple files with the same name occur and no path is specified expicitly ( although this would normally only cause problems if there are MAT files in the \\ private folder of the MAT - utilities ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________ Revisions : 04.11 . 07 Reposition code for no change : now faster","title":"RestoreDiscClass"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/VarRename.m/","text":"VarRename \u00b6 VarRename overwrites a variable name in a Level 5 Version 6 MAT - File or returns the number of bytes reserved for the name . Example : BYTES = VARRENAME ( 'MYFILE' , 'MICKY' ) returns the number of bytes available for the name of the existing variable 'MICKY' FLAG = VARRENAME ( 'MYFILE' , 'MICKY' , 'MICKEY' ) replaces the existing name with the new name if there is space . Returns 0 if the rename has taken place , - 1 otherwise __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"VarRename"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/VarRename.m/#varrename","text":"VarRename overwrites a variable name in a Level 5 Version 6 MAT - File or returns the number of bytes reserved for the name . Example : BYTES = VARRENAME ( 'MYFILE' , 'MICKY' ) returns the number of bytes available for the name of the existing variable 'MICKY' FLAG = VARRENAME ( 'MYFILE' , 'MICKY' , 'MICKEY' ) replaces the existing name with the new name if there is space . Returns 0 if the rename has taken place , - 1 otherwise __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"VarRename"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/endian.m/","text":"endian \u00b6 endian returns the endian format for the specified MAT file Example : endianformat = endian ( filename ) filename is string endianformat will be returned as ' ieee.le ' or ' ieee-be ' ( or [] if undetermined ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 __________________________________________________________________________","title":"endian"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/endian.m/#endian","text":"endian returns the endian format for the specified MAT file Example : endianformat = endian ( filename ) filename is string endianformat will be returned as ' ieee.le ' or ' ieee-be ' ( or [] if undetermined ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 __________________________________________________________________________","title":"endian"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/where.m/","text":"where \u00b6 WHERE returns byte offsets to the variables in a - v6 MAT - file . The output from WHERE is similar to that of WHOS but can be used to map variables in a a MAT - file and therefore to read / write to them using fread / fwrite or memmapfile . WHERE can be used on Level 5 & 7 MAT - files but only maps those variables stored in Level 5 format up to - v6 . Gzip compressed data saved with SAVE - v7 will be skipped over and not mapped . Files saved with SAVE - v7 . 3 ( introduced in R2006b ) presently cause WHERE to terminate . Examples : WHERE ( FILENAME ), WHERE ( FILENAME , VARNAME ) and WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) display the results S = WHERE ( FILENAME ) S = WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) S = WHERE ( FILENAME , VARNAME ) [ S , SWAP ] = WHERE ( FILENAME ) [ S , SWAP ] = WHERE ( FILENAME , VARNAME ) [ S , SWAP ] = WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) SWAP is set to 1 if the endian order of the file is different from that of the host computer ( 0 otherwise ) . S = WHERE ( FILENAME , TAGOFFSET ) [ S , SWAP ] = WHERE ( FILENAME , TAGOFFSET ) return information about the variable at the supplied tag offset . The tag offset would normally be derived from a previous call to WHERE . FILENAME and VARNAME are strings If VARNAME is specified , only information relating to that variable will be returned . If field / property names are not specified , wildcards ( '*' ) can be used as with WHOS . WHERE produces a structure output ( S ) similar to WHOS but with additional fields as described below For a standard MATLAB matrix class : S = WHERE ( ... ) returns a structure with the fields : name -- variable name size -- variable size bytes -- number of bytes allocated for the array class -- class of variable global -- logical indicating whether variable is global sparse -- logical indicating whether value is sparse complex -- logical indicating whether value is complex nesting -- struct with the following two fields : function -- name of function where variable is defined level -- nesting level of the function flags -- 8 bit uint : currently indicates complex , global , logical and persistent data - see MAT - file documentation TagOffset -- the offset into the file to the Tag for this variable DataOffset -- a cell containing a structure with a field '.DiscOffset' which specifies the offset into the file for the data area of this variable . For complex data , DiscOffset is a 1 x2 vector with offsets to both real and imaginary parts . For a structure or object , DataOffset is a cell array with one element for each field / property . Each element will contain a set of ields describing each field / property variable name , size , bytes etc as for a standard matrix ( including a DataOffset field ) . DiscClass -- a cell containing the storage format for the variable on disc - which may be different from class - as a string or 1 x2 cell array of strings for complex data with the DiscClass for both real and imaginary parts Flags , TagOffset , DataOffset and DiscFormat are supplied by WHERE . The remaining fields are derived from a call to WHOS by WHERE ( and will vary according to the version of WHOS being used ) . For structures and objects If the variable is a structure or object , DataOffset will be a cell array of structures describing each field or property of the variable as above . With a double precision float variable var = 1 : 10 saved to file myfile . mat with the MATLAB 'SAVE MYFILE VAR -V6' command WHERE ( 'myfile' , 'var' ) then produces : ---------------------------------------------------------------------- Name Size Bytes Class TagOffset DataOffset ---------------------------------------------------------------------- var 1 x10 80 uint8 => double 128 184 Note that to save disc space , MATLAB stores var as uint8 and it needs to be cast to double ( hence uint8 => double i . e . DiscClass => Class ) . If var is a structure the output might look as follows : ------------------------------------------------------------------------- Name Size Bytes Class TagOffset DataOffset ------------------------------------------------------------------------- var 1 x1 1068 struct => struct 128 . field1 1 x1 48 uint8 => double 224 276 . field2 1 x6 64 uint16 => char 280 336 . field3 1 x10 64 uint8 => double 352 408 . field4 1 x1 280 struct => struct 424 NaN A TagOffset is returned for the structure , and for each field . Names , DataOffsets and formats are supplied for each field . However , structures within structures ( as for field4 ) are not analyzed further and DataOffsets are returned as NaN . To analyze these fields further use the WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) form e . g for a structure S containing a structure A containing a structure B containing a matrix C use where ( filename , 'S' , 'A' , 'B' , 'C' ) . This form recursively calls WHERE ( FILENAME , TAGOFFSET ) to dig through the nest . Details for objects are returned as above for structures . If 'unknown' appears in a class field it indicates that the variable has not been fully analyzed by WHERE . In this case , DiscOffset will be NaN . This will be the case for custom variables , functions , structure arrays , cells and sparse arrays ( TagOffsets will be returned for these if they are fields / properties of a structure / object ) . With compressed data ( v7 ) all offsets will be NaNs . Example : using with memmapfile to map a standard matlab matrix : s = where ( 'myfile.mat' , 'A' ); map = memmapfile ( 'myfile.mat' , 'Format' ,{ s . class s . size 'mydata' }, ... 'Repeat' , 1 , 'Offset' , s . DataOffset { 1 } . DiscOffset ); See also WHOS , memmmapfile , fread Revisions : 16.09 . 06 WHERET functionality incorporated into WHERE Coding generally tidied - global variables removed . WHERET obsolete and deleted . 21.09 . 06 Now works with big - endian files on Windows 03.11 . 06 Now platform independent - Works on both big - endian and little - endian platforms with both big - endian and little - endian MAT - files . Tested on Windows XP and Mac OS X ( 4.4 . 8 on a PowerMac G4 ) . 04.11 . 06 Size now consistently returned as row vector ( column vector returned for fields / props previously ) 08.11 . 06 Matrix size now prints correctly . 16.11 . 06 The output . bytes field now consistently contains the number of bytes for a matrix when loaded . For a structure / object . bytes contains the size on disc . ( This is consistent with the builtin WHOS ) A . DiscBytes field has been introduced . This is the size of the variable on disc ( for all data types ) i . e . the size of the header + data . 28.11 . 06 DataOffset changed to include a DataOffset subfield for each field / property - previously the DiscOffset was placed directly in DataOffset . The new arrangment allows elements of DataOffset to be used in the same way as those from standard variables , e . g . s = where ( filename , structname ); ws = s ( 1 ) . DataOffset { 5 }; will return ws with a ws . DataOffset field of its own . 28.11 . 06 . size now contains trailing singleton dimensions . This is unlike whos , but is needed after using AddDimension with the AppendXXXX functions 29.11 . 06 Sort output fields alphabetically 26.06 . 07 - 26.08 . 07 Further formating improvements 21.01 . 10 R2010a compatible __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth Updated 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"where"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/where.m/#where","text":"WHERE returns byte offsets to the variables in a - v6 MAT - file . The output from WHERE is similar to that of WHOS but can be used to map variables in a a MAT - file and therefore to read / write to them using fread / fwrite or memmapfile . WHERE can be used on Level 5 & 7 MAT - files but only maps those variables stored in Level 5 format up to - v6 . Gzip compressed data saved with SAVE - v7 will be skipped over and not mapped . Files saved with SAVE - v7 . 3 ( introduced in R2006b ) presently cause WHERE to terminate . Examples : WHERE ( FILENAME ), WHERE ( FILENAME , VARNAME ) and WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) display the results S = WHERE ( FILENAME ) S = WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) S = WHERE ( FILENAME , VARNAME ) [ S , SWAP ] = WHERE ( FILENAME ) [ S , SWAP ] = WHERE ( FILENAME , VARNAME ) [ S , SWAP ] = WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) SWAP is set to 1 if the endian order of the file is different from that of the host computer ( 0 otherwise ) . S = WHERE ( FILENAME , TAGOFFSET ) [ S , SWAP ] = WHERE ( FILENAME , TAGOFFSET ) return information about the variable at the supplied tag offset . The tag offset would normally be derived from a previous call to WHERE . FILENAME and VARNAME are strings If VARNAME is specified , only information relating to that variable will be returned . If field / property names are not specified , wildcards ( '*' ) can be used as with WHOS . WHERE produces a structure output ( S ) similar to WHOS but with additional fields as described below For a standard MATLAB matrix class : S = WHERE ( ... ) returns a structure with the fields : name -- variable name size -- variable size bytes -- number of bytes allocated for the array class -- class of variable global -- logical indicating whether variable is global sparse -- logical indicating whether value is sparse complex -- logical indicating whether value is complex nesting -- struct with the following two fields : function -- name of function where variable is defined level -- nesting level of the function flags -- 8 bit uint : currently indicates complex , global , logical and persistent data - see MAT - file documentation TagOffset -- the offset into the file to the Tag for this variable DataOffset -- a cell containing a structure with a field '.DiscOffset' which specifies the offset into the file for the data area of this variable . For complex data , DiscOffset is a 1 x2 vector with offsets to both real and imaginary parts . For a structure or object , DataOffset is a cell array with one element for each field / property . Each element will contain a set of ields describing each field / property variable name , size , bytes etc as for a standard matrix ( including a DataOffset field ) . DiscClass -- a cell containing the storage format for the variable on disc - which may be different from class - as a string or 1 x2 cell array of strings for complex data with the DiscClass for both real and imaginary parts Flags , TagOffset , DataOffset and DiscFormat are supplied by WHERE . The remaining fields are derived from a call to WHOS by WHERE ( and will vary according to the version of WHOS being used ) . For structures and objects If the variable is a structure or object , DataOffset will be a cell array of structures describing each field or property of the variable as above . With a double precision float variable var = 1 : 10 saved to file myfile . mat with the MATLAB 'SAVE MYFILE VAR -V6' command WHERE ( 'myfile' , 'var' ) then produces : ---------------------------------------------------------------------- Name Size Bytes Class TagOffset DataOffset ---------------------------------------------------------------------- var 1 x10 80 uint8 => double 128 184 Note that to save disc space , MATLAB stores var as uint8 and it needs to be cast to double ( hence uint8 => double i . e . DiscClass => Class ) . If var is a structure the output might look as follows : ------------------------------------------------------------------------- Name Size Bytes Class TagOffset DataOffset ------------------------------------------------------------------------- var 1 x1 1068 struct => struct 128 . field1 1 x1 48 uint8 => double 224 276 . field2 1 x6 64 uint16 => char 280 336 . field3 1 x10 64 uint8 => double 352 408 . field4 1 x1 280 struct => struct 424 NaN A TagOffset is returned for the structure , and for each field . Names , DataOffsets and formats are supplied for each field . However , structures within structures ( as for field4 ) are not analyzed further and DataOffsets are returned as NaN . To analyze these fields further use the WHERE ( FILENAME , VARNAME , FIELD1 / PROP1 , FIELD2 / PROP2 .... ) form e . g for a structure S containing a structure A containing a structure B containing a matrix C use where ( filename , 'S' , 'A' , 'B' , 'C' ) . This form recursively calls WHERE ( FILENAME , TAGOFFSET ) to dig through the nest . Details for objects are returned as above for structures . If 'unknown' appears in a class field it indicates that the variable has not been fully analyzed by WHERE . In this case , DiscOffset will be NaN . This will be the case for custom variables , functions , structure arrays , cells and sparse arrays ( TagOffsets will be returned for these if they are fields / properties of a structure / object ) . With compressed data ( v7 ) all offsets will be NaNs . Example : using with memmapfile to map a standard matlab matrix : s = where ( 'myfile.mat' , 'A' ); map = memmapfile ( 'myfile.mat' , 'Format' ,{ s . class s . size 'mydata' }, ... 'Repeat' , 1 , 'Offset' , s . DataOffset { 1 } . DiscOffset ); See also WHOS , memmmapfile , fread Revisions : 16.09 . 06 WHERET functionality incorporated into WHERE Coding generally tidied - global variables removed . WHERET obsolete and deleted . 21.09 . 06 Now works with big - endian files on Windows 03.11 . 06 Now platform independent - Works on both big - endian and little - endian platforms with both big - endian and little - endian MAT - files . Tested on Windows XP and Mac OS X ( 4.4 . 8 on a PowerMac G4 ) . 04.11 . 06 Size now consistently returned as row vector ( column vector returned for fields / props previously ) 08.11 . 06 Matrix size now prints correctly . 16.11 . 06 The output . bytes field now consistently contains the number of bytes for a matrix when loaded . For a structure / object . bytes contains the size on disc . ( This is consistent with the builtin WHOS ) A . DiscBytes field has been introduced . This is the size of the variable on disc ( for all data types ) i . e . the size of the header + data . 28.11 . 06 DataOffset changed to include a DataOffset subfield for each field / property - previously the DiscOffset was placed directly in DataOffset . The new arrangment allows elements of DataOffset to be used in the same way as those from standard variables , e . g . s = where ( filename , structname ); ws = s ( 1 ) . DataOffset { 5 }; will return ws with a ws . DataOffset field of its own . 28.11 . 06 . size now contains trailing singleton dimensions . This is unlike whos , but is needed after using AddDimension with the AppendXXXX functions 29.11 . 06 Sort output fields alphabetically 26.06 . 07 - 26.08 . 07 Further formating improvements 21.01 . 10 R2010a compatible __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth Updated 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"where"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/AppendData.m/","text":"AppendData \u00b6 AppendData adds data to an existing variable in a v6 MAT - file Example : AppendData ( FILENAME , W , NEWDATA , ADDCOLUMNFLAG ) FILENAME is a string W is the output of a prior cell to WHERE ( FILENAME , VARNAME ) - VARNAME is the target variable in the file NEWDATA are the data to append to the variable ADDCOLUMNFLAG forces data to be added to a new column in the case where VARNAME is a row vector ( not required otherwise ) AppendData does the work when called from AppendVector , AppendColumns and AppendMatrix __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendData"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/AppendData.m/#appenddata","text":"AppendData adds data to an existing variable in a v6 MAT - file Example : AppendData ( FILENAME , W , NEWDATA , ADDCOLUMNFLAG ) FILENAME is a string W is the output of a prior cell to WHERE ( FILENAME , VARNAME ) - VARNAME is the target variable in the file NEWDATA are the data to append to the variable ADDCOLUMNFLAG forces data to be added to a new column in the case where VARNAME is a row vector ( not required otherwise ) AppendData does the work when called from AppendVector , AppendColumns and AppendMatrix __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"AppendData"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/ByteAlign.m/","text":"ByteAlign \u00b6 ByteAlign aligns the file position to an 8 byte boundary Example : BYTEALIGN ( FH ) where FH is the file handle The file position will be unchanged if already at an 8 byte boundary . Otherwise it will be moved to the next boundary . Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006","title":"ByteAlign"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/ByteAlign.m/#bytealign","text":"ByteAlign aligns the file position to an 8 byte boundary Example : BYTEALIGN ( FH ) where FH is the file handle The file position will be unchanged if already at an 8 byte boundary . Otherwise it will be moved to the next boundary . Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 King \u0092 s College London 2006","title":"ByteAlign"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/ChangeDimensions.m/","text":"ChangeDimensions \u00b6 ChangeDimensions is called to increase the size of an existing variable Example : ChangeDimensions ( FH , W , VAR , VARSZ ) FH : the file handle W : the structure returned by a call to WHERE for var VAR : the variable VARSZ : the required dimensions array The product of the elements of VARSZ must be greater than numel ( VAR ) VAR must be the last variable in the MAT - file Normally called from CreateMatrix See also CreateMatrix Toolboxes required : None Acknowledgements : Revisions : __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ChangeDimensions"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/ChangeDimensions.m/#changedimensions","text":"ChangeDimensions is called to increase the size of an existing variable Example : ChangeDimensions ( FH , W , VAR , VARSZ ) FH : the file handle W : the structure returned by a call to WHERE for var VAR : the variable VARSZ : the required dimensions array The product of the elements of VARSZ must be greater than numel ( VAR ) VAR must be the last variable in the MAT - file Normally called from CreateMatrix See also CreateMatrix Toolboxes required : None Acknowledgements : Revisions : __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________","title":"ChangeDimensions"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/Contents.m/","text":"Contents \u00b6 PRIVATE Files AppendData - AppendData adds data to an existing variable in a v6 MAT - file ByteAlign - ByteAlign aligns the file position to an 8 byte boundary ChangeDimensions - ChangeDimensions is called to increase the size of an existing variable","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/Contents.m/#contents","text":"PRIVATE Files AppendData - AppendData adds data to an existing variable in a v6 MAT - file ByteAlign - ByteAlign aligns the file position to an 8 byte boundary ChangeDimensions - ChangeDimensions is called to increase the size of an existing variable","title":"Contents"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/GetSmallDataElement.m/","text":"GetSmallDataElement \u00b6 GetSmallDataElement returns a small data element from a MAT - file Example : [ N , TYPE , VALUES ] = GetSmallDataElement ( FH , FILEFORMAT ) FH is the file handle from fopen FILEFORMAT is ' ieee-le ' for a little - endian MAT - file , ' ieee-be ' for big - endian . N is the number of values in the data element TYPE is the data class VALUES contains the returned data Author : Malcolm Lidierth 09 / 06 Revised : 21 / 09 / 06 Now works with big - endian files on Windows Copyright \u00a9 King \u0092 s College London 2006","title":"GetSmallDataElement"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/GetSmallDataElement.m/#getsmalldataelement","text":"GetSmallDataElement returns a small data element from a MAT - file Example : [ N , TYPE , VALUES ] = GetSmallDataElement ( FH , FILEFORMAT ) FH is the file handle from fopen FILEFORMAT is ' ieee-le ' for a little - endian MAT - file , ' ieee-be ' for big - endian . N is the number of values in the data element TYPE is the data class VALUES contains the returned data Author : Malcolm Lidierth 09 / 06 Revised : 21 / 09 / 06 Now works with big - endian files on Windows Copyright \u00a9 King \u0092 s College London 2006","title":"GetSmallDataElement"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/PadToEightByteBoundary.m/","text":"PadToEightByteBoundary \u00b6 PadToEightByteBoundary does what its name suggests Example : PadToEightByteBoundary ( filehandle ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 __________________________________________________________________________","title":"PadToEightByteBoundary"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/PadToEightByteBoundary.m/#padtoeightbyteboundary","text":"PadToEightByteBoundary does what its name suggests Example : PadToEightByteBoundary ( filehandle ) __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 __________________________________________________________________________","title":"PadToEightByteBoundary"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/StandardMiCodes.m/","text":"StandardMiCodes \u00b6 STANDARDMICODES return Matlab standard codes for data formats Example : CODES = STANDARDMICODES (); Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions :","title":"StandardMiCodes"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/StandardMiCodes.m/#standardmicodes","text":"STANDARDMICODES return Matlab standard codes for data formats Example : CODES = STANDARDMICODES (); Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions :","title":"StandardMiCodes"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/StandardMxCodes.m/","text":"StandardMxCodes \u00b6 STANDARDMXCODES return Matlab standard codes for data formats Example : CODES = STANDARDMXCODES (); Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions :","title":"StandardMxCodes"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/StandardMxCodes.m/#standardmxcodes","text":"STANDARDMXCODES return Matlab standard codes for data formats Example : CODES = STANDARDMXCODES (); Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 King \u0092 s College London 2006 Revisions :","title":"StandardMxCodes"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/argcheck.m/","text":"argcheck \u00b6 argcheck does error checking for the MAT - file utilities Example : filename = argcheck ( filename , varname ) returns the filename with the . mat extension if no other is specified Where appropriate , also calls CheckIsLastEntry ( filename , varname ) to check varname is OK __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________ Revisions : 30.01 . 07 delete call to which . This would return empty if filename was not on the MATLAB path . Argcheck no longer attempts to return the full path of filename .","title":"argcheck"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/argcheck.m/#argcheck","text":"argcheck does error checking for the MAT - file utilities Example : filename = argcheck ( filename , varname ) returns the filename with the . mat extension if no other is specified Where appropriate , also calls CheckIsLastEntry ( filename , varname ) to check varname is OK __________________________________________________________________________ This program is distributed without any warranty , without even the implied warranty of fitness for a particular purpose . __________________________________________________________________________ Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006 __________________________________________________________________________ Revisions : 30.01 . 07 delete call to which . This would return empty if filename was not on the MATLAB path . Argcheck no longer attempts to return the full path of filename .","title":"argcheck"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/sizeof.m/","text":"sizeof \u00b6 SIZEOF returns the size in bytes of the class Example: BYTES=SIZEOF('CLASSNAME') Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King\u0092s College London 2006-2007 Revisions: 05.12.07 'custom' class input added","title":"sizeof"},{"location":"reference/lib/sigTOOL/CORE/utils/MAT/private/sizeof.m/#sizeof","text":"SIZEOF returns the size in bytes of the class Example: BYTES=SIZEOF('CLASSNAME') Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King\u0092s College London 2006-2007 Revisions: 05.12.07 'custom' class input added","title":"sizeof"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/scDisplayResult.m/","text":"scDisplayResult \u00b6 scDisplayResult creates a sigTOOL result view scDisplayResult populates the drop down menus and sets up the application data area based on the supplied data Example: obj=scDisplayResult(data)","title":"scDisplayResult"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/scDisplayResult.m/#scdisplayresult","text":"scDisplayResult creates a sigTOOL result view scDisplayResult populates the drop down menus and sets up the application data area based on the supplied data Example: obj=scDisplayResult(data)","title":"scDisplayResult"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/scPrepareResult.m/","text":"scPrepareResult \u00b6 scPrepareResult builds a cell matrix for use with sigTOOLResultData objects","title":"scPrepareResult"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/scPrepareResult.m/#scprepareresult","text":"scPrepareResult builds a cell matrix for use with sigTOOLResultData objects","title":"scPrepareResult"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/scResultManager.m/","text":"scResultManager \u00b6 scResultManager creates the result manager for a sigTOOL result view Example: tp=scResultManager(fhandle) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - ------------------------------------------------------------------------- Revisions 05 . 09 . 09 Updated for more recent display modes","title":"scResultManager"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/scResultManager.m/#scresultmanager","text":"scResultManager creates the result manager for a sigTOOL result view Example: tp=scResultManager(fhandle) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - ------------------------------------------------------------------------- Revisions 05 . 09 . 09 Updated for more recent display modes","title":"scResultManager"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/scUpdateResultOptionsButton.m/","text":"scUpdateResultOptionsButton \u00b6 scUpdateResultOptionsButton is a function. scUpdateResultOptionsButton(rhandle, fcn)","title":"scUpdateResultOptionsButton"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/scUpdateResultOptionsButton.m/#scupdateresultoptionsbutton","text":"scUpdateResultOptionsButton is a function. scUpdateResultOptionsButton(rhandle, fcn)","title":"scUpdateResultOptionsButton"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/AxesFeatures.m/","text":"AxesFeatures \u00b6 AxesFeatures is a function. tp = AxesFeatures(tp)","title":"AxesFeatures"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/AxesFeatures.m/#axesfeatures","text":"AxesFeatures is a function. tp = AxesFeatures(tp)","title":"AxesFeatures"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/AxesLimits.m/","text":"AxesLimits \u00b6 AxesLimits is a function. tp = AxesLimits(tp)","title":"AxesLimits"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/AxesLimits.m/#axeslimits","text":"AxesLimits is a function. tp = AxesLimits(tp)","title":"AxesLimits"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/CameraTool.m/","text":"CameraTool \u00b6 CameraTool is a function. tp = CameraTool(tp)","title":"CameraTool"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/CameraTool.m/#cameratool","text":"CameraTool is a function. tp = CameraTool(tp)","title":"CameraTool"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/DisplayMode.m/","text":"DisplayMode \u00b6 DisplayMode - private function used by result manager Example: tp=DisplayMode(tp) sets up the display mode dialog in the sigTOOL Result Manager ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"DisplayMode"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/DisplayMode.m/#displaymode","text":"DisplayMode - private function used by result manager Example: tp=DisplayMode(tp) sets up the display mode dialog in the sigTOOL Result Manager ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"DisplayMode"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineColorCallback.m/","text":"LineColorCallback \u00b6 LineColorCallback is a function. LineColorCallback(hObject, EventData)","title":"LineColorCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineColorCallback.m/#linecolorcallback","text":"LineColorCallback is a function. LineColorCallback(hObject, EventData)","title":"LineColorCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineOptions.m/","text":"LineOptions \u00b6 LineOptions is a function. tp = LineOptions(tp)","title":"LineOptions"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineOptions.m/#lineoptions","text":"LineOptions is a function. tp = LineOptions(tp)","title":"LineOptions"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineWidthCallback.m/","text":"LineWidthCallback \u00b6 LineWidthCallback is a function. LineWidthCallback(hObject, EventData)","title":"LineWidthCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/LineWidthCallback.m/#linewidthcallback","text":"LineWidthCallback is a function. LineWidthCallback(hObject, EventData)","title":"LineWidthCallback"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/Options3D.m/","text":"Options3D \u00b6 Options3D is a function. tp = Options3D(tp)","title":"Options3D"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/Options3D.m/#options3d","text":"Options3D is a function. tp = Options3D(tp)","title":"Options3D"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/ResetView.m/","text":"ResetView \u00b6 ResetView is a function. tp = ResetView(tp)","title":"ResetView"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/ResetView.m/#resetview","text":"ResetView is a function. tp = ResetView(tp)","title":"ResetView"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/ResultOptionsButton.m/","text":"ResultOptionsButton \u00b6 ResultOptionsButton is a function. tp = ResultOptionsButton(tp)","title":"ResultOptionsButton"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/ResultOptionsButton.m/#resultoptionsbutton","text":"ResultOptionsButton is a function. tp = ResultOptionsButton(tp)","title":"ResultOptionsButton"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/addLabel.m/","text":"addLabel \u00b6 addLabel - private function Adds labels Result Manager controls ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"addLabel"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/addLabel.m/#addlabel","text":"addLabel - private function Adds labels Result Manager controls ------------------------------------------------------------------------- Author: Malcolm Lidierth 1/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"addLabel"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/getPosition.m/","text":"getPosition \u00b6 getPosition private function for the Result Manager getPosition(tp) positions the Result Manager ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"getPosition"},{"location":"reference/lib/sigTOOL/CORE/utils/ResultView/ResultManager/private/getPosition.m/#getposition","text":"getPosition private function for the Result Manager getPosition(tp) positions the Result Manager ------------------------------------------------------------------------- Author: Malcolm Lidierth 12/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"getPosition"},{"location":"reference/lib/sigTOOL/CORE/utils/private/EmailBrowse.m/","text":"EmailBrowse \u00b6 EmailBrowse is a function. EmailBrowse(hObject, EventData, vp)","title":"EmailBrowse"},{"location":"reference/lib/sigTOOL/CORE/utils/private/EmailBrowse.m/#emailbrowse","text":"EmailBrowse is a function. EmailBrowse(hObject, EventData, vp)","title":"EmailBrowse"},{"location":"reference/lib/sigTOOL/CORE/utils/private/StandardEmailDetails.m/","text":"StandardEmailDetails \u00b6 StandardEmailDetails is a function. p = StandardEmailDetails(p, str)","title":"StandardEmailDetails"},{"location":"reference/lib/sigTOOL/CORE/utils/private/StandardEmailDetails.m/#standardemaildetails","text":"StandardEmailDetails is a function. p = StandardEmailDetails(p, str)","title":"StandardEmailDetails"},{"location":"reference/lib/sigTOOL/CORE/utils/private/getPlatform.m/","text":"getPlatform \u00b6 find platform OS - code from TMW ver","title":"getPlatform"},{"location":"reference/lib/sigTOOL/CORE/utils/private/getPlatform.m/#getplatform","text":"find platform OS - code from TMW ver","title":"getPlatform"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddAverage.m/","text":"jvAddAverage \u00b6 jvAddAverage addpanel function Example: h=jvAddAverage(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddAverage"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddAverage.m/#jvaddaverage","text":"jvAddAverage addpanel function Example: h=jvAddAverage(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddAverage"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCoherence.m/","text":"jvAddCoherence \u00b6 jvAddCoherence addpanel function Example: h=jvAddCoherence(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCoherence"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCoherence.m/#jvaddcoherence","text":"jvAddCoherence addpanel function Example: h=jvAddCoherence(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCoherence"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCorrelation.m/","text":"jvAddCorrelation \u00b6 jvAddCorrelation addpanel function Example: h=jvAddCorrelation(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCorrelation"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCorrelation.m/#jvaddcorrelation","text":"jvAddCorrelation addpanel function Example: h=jvAddCorrelation(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCorrelation"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCurrentSourceDensity.m/","text":"jvAddCurrentSourceDensity \u00b6 jvAddCurrentSourceDensity addpanel function Example: h=jvAddCurrentSourceDensity(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCurrentSourceDensity"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddCurrentSourceDensity.m/#jvaddcurrentsourcedensity","text":"jvAddCurrentSourceDensity addpanel function Example: h=jvAddCurrentSourceDensity(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddCurrentSourceDensity"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFFT.m/","text":"jvAddFFT \u00b6 jvAddFFT addpanel function Example: h=jvAddFFT(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFFT"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFFT.m/#jvaddfft","text":"jvAddFFT addpanel function Example: h=jvAddFFT(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFFT"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFastICA.m/","text":"jvAddFastICA \u00b6 jvAddFastICA addpanel function Example: h=jvAddFastICA(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFastICA"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFastICA.m/#jvaddfastica","text":"jvAddFastICA addpanel function Example: h=jvAddFastICA(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFastICA"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFrequencygram.m/","text":"jvAddFrequencygram \u00b6 jvAddFrequencygram addpanel function Example: h=jvAddFrequencygram(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFrequencygram"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddFrequencygram.m/#jvaddfrequencygram","text":"jvAddFrequencygram addpanel function Example: h=jvAddFrequencygram(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddFrequencygram"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddIcasso.m/","text":"jvAddIcasso \u00b6 jvAddIcasso addpanel function Example: h=jvAddIcasso(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddIcasso"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddIcasso.m/#jvaddicasso","text":"jvAddIcasso addpanel function Example: h=jvAddIcasso(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddIcasso"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddJPETH.m/","text":"jvAddJPETH \u00b6 jvAddJPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddJPETH"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddJPETH.m/#jvaddjpeth","text":"jvAddJPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddJPETH"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPETH.m/","text":"jvAddPETH \u00b6 jvAddPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddPETH"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPETH.m/#jvaddpeth","text":"jvAddPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddPETH"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPanel.m/","text":"jvAddPanel \u00b6 jvAddPanel adds a rectangular panel to an existing GUI panel Example h = jvAddPanel ( h , PropName1 , PropValue1 , ... ) h = jvAddPanel ( fhandle , PropName1 , PropValue1 , ... ) h contains the handles to the existing GUI ( as returned by jvDisplay ) . Alternatively , supply fhandle ( a figure handle ) . In this case the GUI component handles will be retrieved from the figure 's application data area . Handles are stored in a structure , or a cell array of structures . The returned h will be a cell array , with an element for each panel . Valid input properties are : * Title : the title for the added panel ( string ) * Place : 'East' or 'South' to place the new panel to the right or beneath the existing panel ( s ) ( string ) * Dimension : the width or height for 'East' and 'South' addition respectively as a fraction of the overall width or height of the existing panel ( s ) ( scalar ) ToolTipText : tool tip text ( string ) * Required properties ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"jvAddPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPanel.m/#jvaddpanel","text":"jvAddPanel adds a rectangular panel to an existing GUI panel Example h = jvAddPanel ( h , PropName1 , PropValue1 , ... ) h = jvAddPanel ( fhandle , PropName1 , PropValue1 , ... ) h contains the handles to the existing GUI ( as returned by jvDisplay ) . Alternatively , supply fhandle ( a figure handle ) . In this case the GUI component handles will be retrieved from the figure 's application data area . Handles are stored in a structure , or a cell array of structures . The returned h will be a cell array , with an element for each panel . Valid input properties are : * Title : the title for the added panel ( string ) * Place : 'East' or 'South' to place the new panel to the right or beneath the existing panel ( s ) ( string ) * Dimension : the width or height for 'East' and 'South' addition respectively as a fraction of the overall width or height of the existing panel ( s ) ( scalar ) ToolTipText : tool tip text ( string ) * Required properties ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"jvAddPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPhaseHistogram.m/","text":"jvAddPhaseHistogram \u00b6 jvAddPhaseHistogram addpanel function Example: h=jvAddPhaseHistogram(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"jvAddPhaseHistogram"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPhaseHistogram.m/#jvaddphasehistogram","text":"jvAddPhaseHistogram addpanel function Example: h=jvAddPhaseHistogram(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"jvAddPhaseHistogram"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPhaseRaster.m/","text":"jvAddPhaseRaster \u00b6 jvAddPhaseRaster addpanel function Example: h=jvAddPhaseRaster(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddPhaseRaster"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddPhaseRaster.m/#jvaddphaseraster","text":"jvAddPhaseRaster addpanel function Example: h=jvAddPhaseRaster(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddPhaseRaster"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddRaster.m/","text":"jvAddRaster \u00b6 jvAddPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddRaster"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddRaster.m/#jvaddraster","text":"jvAddPETH addpanel function Example: h=jvAddPETH(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddRaster"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddRateChannel.m/","text":"jvAddRateChannel \u00b6 jvAddRateChannel addpanel function Example: h=jvAddRateChannel(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddRateChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvAddRateChannel.m/#jvaddratechannel","text":"jvAddRateChannel addpanel function Example: h=jvAddRateChannel(h) ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvAddRateChannel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvCreateUI.m/","text":"jvCreateUI \u00b6 jvCreateUI helper function for sigTOOL GUI creation routines","title":"jvCreateUI"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvCreateUI.m/#jvcreateui","text":"jvCreateUI helper function for sigTOOL GUI creation routines","title":"jvCreateUI"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvDefaultPanel.m/","text":"jvDefaultPanel \u00b6 jvDefaultPanel sets up the default panel style Example : h = jvDefaultPanel ( fhandle , PropName1 , PropName2 ,..... ) fhandle is the sigTOOL data view handle Valid property name / value pairs Position : Position of the panel ( normalized 4 - element position vector ) Title : The title for the panel ( string ) ChannelType : The valid channel types e . g . ' Edge ' , ' Waveform ' or ' all ' ( string ) ToolTipText : Tip for the panel ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"jvDefaultPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvDefaultPanel.m/#jvdefaultpanel","text":"jvDefaultPanel sets up the default panel style Example : h = jvDefaultPanel ( fhandle , PropName1 , PropName2 ,..... ) fhandle is the sigTOOL data view handle Valid property name / value pairs Position : Position of the panel ( normalized 4 - element position vector ) Title : The title for the panel ( string ) ChannelType : The valid channel types e . g . ' Edge ' , ' Waveform ' or ' all ' ( string ) ToolTipText : Tip for the panel ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2007 - ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"jvDefaultPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvDisplay.m/","text":"jvDisplay \u00b6 jvDisplay creates and displays a GUI jvDisplay takes a structure created by a prior call to jvPanel as input This will usually have been populated with GUI component descriptions by calls to jvElement . jvDisplay create the GUIs . The output of jvDisplay is a structure containing the handles of the GUI components . You can alter the properties and call methods on these handles to fine-tune the GUI . Explicitly call uiwait after invoking jvDisplay to wait for a user response . Example : h = jvDisplay ( fhandle , s ); uiwait (); Output h is a a structure with fields for each of those in s . Each field contains the handle of the created jcontrol . In addition , standard jcontrols ( e . g . 'OK' and 'Cancel' ) are added to the panel . h is also added to the parent figure 's application data area labeled as ' sigTOOL : jvhandles '). Additional panels can be added to the GUI by calling jvAddPanel When ' OK ' is selected, the structure of handles is replaced in the figure application data area with a structure containing the return values for each component in the GUI (labeled ' sigTOOL : jvvalues ' ). See also : jvPanel , jvElement , jvAddPanel ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"jvDisplay"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvDisplay.m/#jvdisplay","text":"jvDisplay creates and displays a GUI jvDisplay takes a structure created by a prior call to jvPanel as input This will usually have been populated with GUI component descriptions by calls to jvElement . jvDisplay create the GUIs . The output of jvDisplay is a structure containing the handles of the GUI components . You can alter the properties and call methods on these handles to fine-tune the GUI . Explicitly call uiwait after invoking jvDisplay to wait for a user response . Example : h = jvDisplay ( fhandle , s ); uiwait (); Output h is a a structure with fields for each of those in s . Each field contains the handle of the created jcontrol . In addition , standard jcontrols ( e . g . 'OK' and 'Cancel' ) are added to the panel . h is also added to the parent figure 's application data area labeled as ' sigTOOL : jvhandles '). Additional panels can be added to the GUI by calling jvAddPanel When ' OK ' is selected, the structure of handles is replaced in the figure application data area with a structure containing the return values for each component in the GUI (labeled ' sigTOOL : jvvalues ' ). See also : jvPanel , jvElement , jvAddPanel ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 07 Copyright \u00a9 The Author & King \u0092 s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"jvDisplay"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvElement.m/","text":"jvElement \u00b6 jvElement adds components to a GUI panel jvElement is called after jvPanel , to populate a GUI panel e . g . s = jvPanel ( 'Title' , 'Play Sound' , 'Position' , [ 0.4 0.4 0.2 0.2 ]); s = jvElement ( s , 'Component' , 'javax.swing.JComboBox' , ... etc The GUI is displayed by calling jvDisplay ( figurehandle , s ) which returns handles to the invidual GUI components and stores the handles in the relevant figure application data area . Examples s = jvElement (); returns a structure with empty fields s = jvElement ( s , PropName1 , PropValue1 , .... ); adds a field to the structure s with the name given by the '' Label '' property value provided in the input argument list . The GUI elements need to be created subsequently by calling h = jvDisplay ( s ) After a panel has been created it can be supplemented with further panels by calling jvAddPanel . The added panel is populated by calling jvElement with a structure containing the panel handle e . g h = jvDisplay ( ...... ); h = jvAddPanel ( ..... ) h = jvElement ( h { 2 }, PropName1 , PropValue1 , ..... ); creates an additional field in the structure h { 2 } which contains handles previously returned by a call to jvDisplay or jvAddPanel . NOTE THAT THE OUTPUT IS h , NOT h { 2 } - the jvfunctions use the application data area to access all elements Property name / value pairs are : Component : the name of the GUI component e . g javax . swing . JComboBox ( string ) Label : the label to attach to the component ( compulsory field ) ( string ) Position : the components position in the parent container ( 4 element vector - normalized units ) DisplayList : the list of strings to display in the GUI ( cell array - left empty for some components ) ReturnValues : the numeric values to return , one entry for each item is DisplayList ( cell array - left empty for some components ) . ToolTipText : tool tip text for the component ( string ) See also jvPanel , jvDisplay ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"jvElement"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvElement.m/#jvelement","text":"jvElement adds components to a GUI panel jvElement is called after jvPanel , to populate a GUI panel e . g . s = jvPanel ( 'Title' , 'Play Sound' , 'Position' , [ 0.4 0.4 0.2 0.2 ]); s = jvElement ( s , 'Component' , 'javax.swing.JComboBox' , ... etc The GUI is displayed by calling jvDisplay ( figurehandle , s ) which returns handles to the invidual GUI components and stores the handles in the relevant figure application data area . Examples s = jvElement (); returns a structure with empty fields s = jvElement ( s , PropName1 , PropValue1 , .... ); adds a field to the structure s with the name given by the '' Label '' property value provided in the input argument list . The GUI elements need to be created subsequently by calling h = jvDisplay ( s ) After a panel has been created it can be supplemented with further panels by calling jvAddPanel . The added panel is populated by calling jvElement with a structure containing the panel handle e . g h = jvDisplay ( ...... ); h = jvAddPanel ( ..... ) h = jvElement ( h { 2 }, PropName1 , PropValue1 , ..... ); creates an additional field in the structure h { 2 } which contains handles previously returned by a call to jvDisplay or jvAddPanel . NOTE THAT THE OUTPUT IS h , NOT h { 2 } - the jvfunctions use the application data area to access all elements Property name / value pairs are : Component : the name of the GUI component e . g javax . swing . JComboBox ( string ) Label : the label to attach to the component ( compulsory field ) ( string ) Position : the components position in the parent container ( 4 element vector - normalized units ) DisplayList : the list of strings to display in the GUI ( cell array - left empty for some components ) ReturnValues : the numeric values to return , one entry for each item is DisplayList ( cell array - left empty for some components ) . ToolTipText : tool tip text for the component ( string ) See also jvPanel , jvDisplay ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"jvElement"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvGetControlValue.m/","text":"jvGetControlValue \u00b6 jvGetControlValue returns the values from a jvcontrol Example: val=jvGetControlValue(hObject) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"jvGetControlValue"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvGetControlValue.m/#jvgetcontrolvalue","text":"jvGetControlValue returns the values from a jvcontrol Example: val=jvGetControlValue(hObject) ------------------------------------------------------------------------- Author: Malcolm Lidierth 07/07 Copyright \u00a9 The Author & King\u0092s College London 2006 - 2007 ------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"jvGetControlValue"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvLinkChannelSelectors.m/","text":"jvLinkChannelSelectors \u00b6 jvLinkChannelSelectors links the Channel B selection to the Channel A","title":"jvLinkChannelSelectors"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvLinkChannelSelectors.m/#jvlinkchannelselectors","text":"jvLinkChannelSelectors links the Channel B selection to the Channel A","title":"jvLinkChannelSelectors"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvMakeFieldName.m/","text":"jvMakeFieldName \u00b6 jvMakeFieldName helper function str=jvMakeFieldName(str) removes spaces and anything in brackets from string str ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvMakeFieldName"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvMakeFieldName.m/#jvmakefieldname","text":"jvMakeFieldName helper function str=jvMakeFieldName(str) removes spaces and anything in brackets from string str ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"jvMakeFieldName"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvPanel.m/","text":"jvPanel \u00b6 jvPanel is used to initiate a new GUI panel Example: s=jvPanel(PropName1, PropValue1,.....) Valid property name/value pairs are: Title: The panel title (string) Position: Panel position in normalized units (4-element vector e.g. [0.4 0.4 0.2 0.2]) ToolTipText: A pop-up description of what the panel does (string) AckText: An acknowledgment string naming authors/affiliations to display in the panel (string) To make the panel useful, add controls to it using jvElement. To invoke the GUI call jvDisplay. See also: jvElement, jvDisplay ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"jvPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvPanel.m/#jvpanel","text":"jvPanel is used to initiate a new GUI panel Example: s=jvPanel(PropName1, PropValue1,.....) Valid property name/value pairs are: Title: The panel title (string) Position: Panel position in normalized units (4-element vector e.g. [0.4 0.4 0.2 0.2]) ToolTipText: A pop-up description of what the panel does (string) AckText: An acknowledgment string naming authors/affiliations to display in the panel (string) To make the panel useful, add controls to it using jvElement. To invoke the GUI call jvDisplay. See also: jvElement, jvDisplay ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/07 Copyright \u00a9 The Author & King's College London 2007- -------------------------------------------------------------------------","title":"jvPanel"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvSetHelp.m/","text":"jvSetHelp \u00b6 Examples: h=jvSetHelp(h, HelpFileName) h=jvSetHelp(h, CallingFunctionName, HelpFileName)","title":"jvSetHelp"},{"location":"reference/lib/sigTOOL/CORE/utils/uifunctions/jvSetHelp.m/#jvsethelp","text":"Examples: h=jvSetHelp(h, HelpFileName) h=jvSetHelp(h, CallingFunctionName, HelpFileName)","title":"jvSetHelp"},{"location":"reference/lib/sigTOOL/program/GetEmailAddress.m/","text":"GetEmailAddress \u00b6 GetEmailAddress returns the email address Example address=GetEmailAddress() ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"GetEmailAddress"},{"location":"reference/lib/sigTOOL/program/GetEmailAddress.m/#getemailaddress","text":"GetEmailAddress returns the email address Example address=GetEmailAddress() ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"GetEmailAddress"},{"location":"reference/lib/sigTOOL/program/dir2menu.m/","text":"dir2menu \u00b6 DIR2MENU populates a menu by selectively replicating a folder structure . If populating a figure menu ( the default ) a new figure will be created and its handle returned . If populating a uicontextmenu , the handle of the menu will be returned and may be used to set the uicontextmenu property of a graphic object explicitly using the set function . Examples : HANDLE = DIR2MENU ( PARENTDIRECTORY ) HANDLE = DIR2MENU ( PARENTDIRECTORY , OPTIONS ) HANDLE = DIR2MENU ( PARENTDIRECTORY , TYPE , OPTIONS ) PARENTDIRECTORY is the folder to be replicated TYPE , if supplied , is a string : either ' figure ' or ' uicontextmenu ' . Defaults to ' figure ' . OPTIONS ( if supplied ) is a cell array of menu properties that will be passed by DIR2MENU to the MATLAB uimenu function when it is called . DIR2MENU returns the handle of the figure or uicontextmenu whos menu has been populated . As the menu is created dynamically at run time , DIR2MENU removes the need to edit a GUI when a new function is added to an application . They can be added instead by using the system directory / file manager and the folder / file naming convention described below . -------------------------------------------------------------------------- CHANGE ( Dec ' 06 ) : menu callbacks now receive hObject and EventData as the first two arguments . If your menu_ * files tested for nargin == 0 , they will now need to test for nargin == 2. To reverse this change for backwards compatibility , edit PopulateSubMenus ( see comments in the function ) ADDED : Libraries of functions stored outside of the PARENTDIRECTORY can now be included using the ' external_ ' keyword as a prefix to an m - file name . This allows a single copy of a function library to be shared by several applications calling dir2menu - reducing code cloning and therefore helping with file management . This is described further below . Tags To help keep track of what ' s where , each uimenu item ' s Tag now contains the folder / function name for the relevant callback ( s ) with full path information . UserData Calls to the callback routine with a zero input can now return data in the third output argument . These data are placed in the UserData property for the menu item . This might be used e . g . to return an image which can subsequently be placed in a uipanel toolbar -------------------------------------------------------------------------- DIR2MENU ( PARENTDIRECTORY ) does the following : ( 1 ). Adds all folders and subfolders of PARENTDIRECTORY to the MATLAB search path . ( 2 ). If type == ' figure : Creates a figure window populated initially with the default MATLAB figure menu If type == ' uicontextmenu ' Create a uicontextmenu , adds it to the current figure ( returned by gcf ) and populates it from the directory ( 3 ). Analyzes the directory tree of PARENTDIRECTORY . Folders , subfolders and executable files prefixed by \"menu_\" are added to the menu tree in a position that corresponds to their position in the directory tree . The menu items ' labels are the same as the folder names but with the \"menu_\" prefix removed . The menu is populated recursively , so you can nest to any depth of folder / subfolder => menu / menulist organization . In addition , if type == ' figure ' : \"File\" , \"Edit\" and \"View\" items are grouped to the left of the menu bar and \"Insert\" , \"Tools\" , \"Desktop\" , \"Window\" and \"Help\" items are grouped on the right . User supplied \"menu_\" prefixed items are placed between these groups . If present , the File , Edit , View etc folder names should not be prefixed with \"menu_\" . ( 4 ). Drop down menu items may also be grouped by placing them in a folder prefixed with \"group_\" . These will appear with lines above and below them . ( 5 ). For executable files ( i . e . m - or mex files ), the menu item ' s CallBack property is set to invoke the function . The handle of the item and an additional MATLAB reserved variable will each be passed implicitly by MATLAB as the first two inputs to the function ( equivalent to hObject and EventData in GUIDE - generated GUIs . EventData will be empty - as of R2006b ). It is assumed that user data that will be passsed using the figure ' s ' UserData ' property or application data area . During menu creation , the functions are called with a zero input e . g . [ flag , string , itemdata ] = menu_myFunc ( 0 ). If flag == true , the menu item wil be enabled . The returned string is used for the menu item ' s label . itemdata will be added to the menu item ' s UserData property . ( 6 ). When type == ' figure ' , if the File , Edit , View , Insert , Tools , DeskTop , Window and Help menus are empty , dir2menu leaves them as populated by the standard MATLAB call to h = figure (). If not , the menus are replaced by those derived from the folder tree . Take the following example directory tree : MyFolder ..... . .... File . . . ...... menu_Open . m . . . ...... menu_Import . . . . . .... menu_ImportAVI . m . . . . . .... menu_ImportWAV . m . . . ...... group_zzzPrint . . . .... menu_Print . m . . . .... menu_PrintPreview . m . .... menu_User . ... menu_UserFunction . m . ... external_ExternalFolder . m . . DIR2MENU ( ' MYFOLDER ' ) will populate the File menu with : 1. An item labeled with the string returned by [ flag , string ] = menu_Open ( 0 ) 2. An item labeled \"Import\" , which will activate a lower level menu containing two items , labeled according to the output returned by calls to menu_ImportAVI ( 0 ) and menu_ImportWAV ( 0 ). Selecting the items will call menu_ImportAVI ( hObject , EventData ) and menuImportWAV ( hObject , EventData ) respectively . 3. A print group will appear in the File menu containing two items labeled as before with the output of menu_Print ( 0 ) and menu_PrintPreview ( 0 ). 4. Create a \"User\" item on the menu bar and populate its drop down list in this case with a two items : one labeled with the output from a call to menu_UserFuntion ( 0 ) and the second from a call to external_ExternalFolder () - see below for further details of ' external_ ' prefixed m - files . 5. Leave the standard Edit , View etc menus active The sequence of the items in any menu list will be alphabetical by folder / file name . As executable file names and group names are not used as labels , you can force an order by prefixing the names with letters e . g . in the example above , the \"group_zzzPrint\" list will appear at the bottom of the File menu . Note that all names are cast to lower case before sorting . Any outputs from the called functions can be placed in the figure window ' s UserData property or application data area e . g . for the menu_ImportAVI function above , the function might look as follows : function varargout = menu_ImportAVI ( varargin ) if nargin == 0 and varargin { 1 } == 0 varargout { 1 } = true ; varargout { 2 } = ' Microsoft AVI file ' ; varargout { 3 } = imread ( ' icon . png ' ); return ; end .... .... if nargin >= 2 % *** see Note [ filename pathname ] = uigetfile ( ' * . avi ' ) mov = aviread ([ pathname filesep filename ]); [ h , figurehandle ] = gcbo ; setappdata ( figurehandle , ' MyData ' , mov ); end .... .... return end *** Note : in early DIR2MENU versions , no arguments were passed when a menu_ file was called . Now two arguments are passed implicitly by MATLAB : hObject : the menu item ' s handle ( as returned by gcbo ) EventData : presently empty ( and MATLAB reserved ) ------------------------------------------------------------------------- Using the ' external_ ' prefix : If an m_file is prefixed by ' external_ ' , it will be called in much the same way as a ' menu_ ' prefixed m - file ( but in this case , without the zero input argument ). Like an menu_ m - file , an external_ * . m file should return a logical flag and the menu item label . It should , in addition , return a string which is the full path and name of a folder lying outside of PARENTDIRECTORY . This folder will be treated as though it were a menu_ folder inside PARENTDIRECTORY located at the same place in the directory tree as the ' external_ ' file . e . g . function varargout = external_MyExternalFunctions ( varargin ) varargout { 1 } = true ; % or false after a test varargout { 2 } = ' MyLabel ' ; % appears on the menu varargout { 3 } = ' c : \\ Program Files \\ MATLAB \\ 2006 b \\ work \\ CommonFunctionsToolbox ' ; return end The CommonFunctionsToolbox can be shared by several main functions each of which calls DIR2MENU . The CommonFunctionsToolbox folder will be treated as though it were a menu_ folder . It may therefore contain menu_ routines and folders / subfolders , group_ folders ( and also further external_ m - files as everything is done recursively . Note the external_ file should not return its own folder ( or an ancestor of it ), or you will enter an infinite recursion ). DIR2MENU automatically adds CommonFunctionsToolbox and all its subfolders to the MATLAB path . The CommonFunctionsToolbox folder need not be on the same disc as MATLAB - or the same machine if networked . -------------------------------------------------------------------------- See also : UIMENU , FIGURE , GCBO , SETAPPDATA , GETAPPDATA , GUIDE , together with \"Function Handle Callback Syntax\" in the Help Search box -------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King ' s College London 2006-2007 --------------------------------------------------------------------------","title":"dir2menu"},{"location":"reference/lib/sigTOOL/program/dir2menu.m/#dir2menu","text":"DIR2MENU populates a menu by selectively replicating a folder structure . If populating a figure menu ( the default ) a new figure will be created and its handle returned . If populating a uicontextmenu , the handle of the menu will be returned and may be used to set the uicontextmenu property of a graphic object explicitly using the set function . Examples : HANDLE = DIR2MENU ( PARENTDIRECTORY ) HANDLE = DIR2MENU ( PARENTDIRECTORY , OPTIONS ) HANDLE = DIR2MENU ( PARENTDIRECTORY , TYPE , OPTIONS ) PARENTDIRECTORY is the folder to be replicated TYPE , if supplied , is a string : either ' figure ' or ' uicontextmenu ' . Defaults to ' figure ' . OPTIONS ( if supplied ) is a cell array of menu properties that will be passed by DIR2MENU to the MATLAB uimenu function when it is called . DIR2MENU returns the handle of the figure or uicontextmenu whos menu has been populated . As the menu is created dynamically at run time , DIR2MENU removes the need to edit a GUI when a new function is added to an application . They can be added instead by using the system directory / file manager and the folder / file naming convention described below . -------------------------------------------------------------------------- CHANGE ( Dec ' 06 ) : menu callbacks now receive hObject and EventData as the first two arguments . If your menu_ * files tested for nargin == 0 , they will now need to test for nargin == 2. To reverse this change for backwards compatibility , edit PopulateSubMenus ( see comments in the function ) ADDED : Libraries of functions stored outside of the PARENTDIRECTORY can now be included using the ' external_ ' keyword as a prefix to an m - file name . This allows a single copy of a function library to be shared by several applications calling dir2menu - reducing code cloning and therefore helping with file management . This is described further below . Tags To help keep track of what ' s where , each uimenu item ' s Tag now contains the folder / function name for the relevant callback ( s ) with full path information . UserData Calls to the callback routine with a zero input can now return data in the third output argument . These data are placed in the UserData property for the menu item . This might be used e . g . to return an image which can subsequently be placed in a uipanel toolbar -------------------------------------------------------------------------- DIR2MENU ( PARENTDIRECTORY ) does the following : ( 1 ). Adds all folders and subfolders of PARENTDIRECTORY to the MATLAB search path . ( 2 ). If type == ' figure : Creates a figure window populated initially with the default MATLAB figure menu If type == ' uicontextmenu ' Create a uicontextmenu , adds it to the current figure ( returned by gcf ) and populates it from the directory ( 3 ). Analyzes the directory tree of PARENTDIRECTORY . Folders , subfolders and executable files prefixed by \"menu_\" are added to the menu tree in a position that corresponds to their position in the directory tree . The menu items ' labels are the same as the folder names but with the \"menu_\" prefix removed . The menu is populated recursively , so you can nest to any depth of folder / subfolder => menu / menulist organization . In addition , if type == ' figure ' : \"File\" , \"Edit\" and \"View\" items are grouped to the left of the menu bar and \"Insert\" , \"Tools\" , \"Desktop\" , \"Window\" and \"Help\" items are grouped on the right . User supplied \"menu_\" prefixed items are placed between these groups . If present , the File , Edit , View etc folder names should not be prefixed with \"menu_\" . ( 4 ). Drop down menu items may also be grouped by placing them in a folder prefixed with \"group_\" . These will appear with lines above and below them . ( 5 ). For executable files ( i . e . m - or mex files ), the menu item ' s CallBack property is set to invoke the function . The handle of the item and an additional MATLAB reserved variable will each be passed implicitly by MATLAB as the first two inputs to the function ( equivalent to hObject and EventData in GUIDE - generated GUIs . EventData will be empty - as of R2006b ). It is assumed that user data that will be passsed using the figure ' s ' UserData ' property or application data area . During menu creation , the functions are called with a zero input e . g . [ flag , string , itemdata ] = menu_myFunc ( 0 ). If flag == true , the menu item wil be enabled . The returned string is used for the menu item ' s label . itemdata will be added to the menu item ' s UserData property . ( 6 ). When type == ' figure ' , if the File , Edit , View , Insert , Tools , DeskTop , Window and Help menus are empty , dir2menu leaves them as populated by the standard MATLAB call to h = figure (). If not , the menus are replaced by those derived from the folder tree . Take the following example directory tree : MyFolder ..... . .... File . . . ...... menu_Open . m . . . ...... menu_Import . . . . . .... menu_ImportAVI . m . . . . . .... menu_ImportWAV . m . . . ...... group_zzzPrint . . . .... menu_Print . m . . . .... menu_PrintPreview . m . .... menu_User . ... menu_UserFunction . m . ... external_ExternalFolder . m . . DIR2MENU ( ' MYFOLDER ' ) will populate the File menu with : 1. An item labeled with the string returned by [ flag , string ] = menu_Open ( 0 ) 2. An item labeled \"Import\" , which will activate a lower level menu containing two items , labeled according to the output returned by calls to menu_ImportAVI ( 0 ) and menu_ImportWAV ( 0 ). Selecting the items will call menu_ImportAVI ( hObject , EventData ) and menuImportWAV ( hObject , EventData ) respectively . 3. A print group will appear in the File menu containing two items labeled as before with the output of menu_Print ( 0 ) and menu_PrintPreview ( 0 ). 4. Create a \"User\" item on the menu bar and populate its drop down list in this case with a two items : one labeled with the output from a call to menu_UserFuntion ( 0 ) and the second from a call to external_ExternalFolder () - see below for further details of ' external_ ' prefixed m - files . 5. Leave the standard Edit , View etc menus active The sequence of the items in any menu list will be alphabetical by folder / file name . As executable file names and group names are not used as labels , you can force an order by prefixing the names with letters e . g . in the example above , the \"group_zzzPrint\" list will appear at the bottom of the File menu . Note that all names are cast to lower case before sorting . Any outputs from the called functions can be placed in the figure window ' s UserData property or application data area e . g . for the menu_ImportAVI function above , the function might look as follows : function varargout = menu_ImportAVI ( varargin ) if nargin == 0 and varargin { 1 } == 0 varargout { 1 } = true ; varargout { 2 } = ' Microsoft AVI file ' ; varargout { 3 } = imread ( ' icon . png ' ); return ; end .... .... if nargin >= 2 % *** see Note [ filename pathname ] = uigetfile ( ' * . avi ' ) mov = aviread ([ pathname filesep filename ]); [ h , figurehandle ] = gcbo ; setappdata ( figurehandle , ' MyData ' , mov ); end .... .... return end *** Note : in early DIR2MENU versions , no arguments were passed when a menu_ file was called . Now two arguments are passed implicitly by MATLAB : hObject : the menu item ' s handle ( as returned by gcbo ) EventData : presently empty ( and MATLAB reserved ) ------------------------------------------------------------------------- Using the ' external_ ' prefix : If an m_file is prefixed by ' external_ ' , it will be called in much the same way as a ' menu_ ' prefixed m - file ( but in this case , without the zero input argument ). Like an menu_ m - file , an external_ * . m file should return a logical flag and the menu item label . It should , in addition , return a string which is the full path and name of a folder lying outside of PARENTDIRECTORY . This folder will be treated as though it were a menu_ folder inside PARENTDIRECTORY located at the same place in the directory tree as the ' external_ ' file . e . g . function varargout = external_MyExternalFunctions ( varargin ) varargout { 1 } = true ; % or false after a test varargout { 2 } = ' MyLabel ' ; % appears on the menu varargout { 3 } = ' c : \\ Program Files \\ MATLAB \\ 2006 b \\ work \\ CommonFunctionsToolbox ' ; return end The CommonFunctionsToolbox can be shared by several main functions each of which calls DIR2MENU . The CommonFunctionsToolbox folder will be treated as though it were a menu_ folder . It may therefore contain menu_ routines and folders / subfolders , group_ folders ( and also further external_ m - files as everything is done recursively . Note the external_ file should not return its own folder ( or an ancestor of it ), or you will enter an infinite recursion ). DIR2MENU automatically adds CommonFunctionsToolbox and all its subfolders to the MATLAB path . The CommonFunctionsToolbox folder need not be on the same disc as MATLAB - or the same machine if networked . -------------------------------------------------------------------------- See also : UIMENU , FIGURE , GCBO , SETAPPDATA , GETAPPDATA , GUIDE , together with \"Function Handle Callback Syntax\" in the Help Search box -------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 06 Copyright \u00a9 The Author & King ' s College London 2006-2007 --------------------------------------------------------------------------","title":"dir2menu"},{"location":"reference/lib/sigTOOL/program/external_Cursors.m/","text":"external_Cursors \u00b6 external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/external_Cursors.m/#external_cursors","text":"external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/external_SpikeTrainToolkit.m/","text":"external_SpikeTrainToolkit \u00b6 external_File sets up Filel menu items from CORE folder [ a b c ] =external_SpikeTrain() will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_SpikeTrainToolkit"},{"location":"reference/lib/sigTOOL/program/external_SpikeTrainToolkit.m/#external_spiketraintoolkit","text":"external_File sets up Filel menu items from CORE folder [ a b c ] =external_SpikeTrain() will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_SpikeTrainToolkit"},{"location":"reference/lib/sigTOOL/program/sigTOOL.m/","text":"sigTOOL \u00b6 sigTOOL : Main entry routine Examples : sigTOOL () invokes sigTOOL creating an empty data view . sigTOOL ( filename ) invokes sigTOOL and loads the sigTOOL data file filename . If called from an existing empty figure ( via a menu callback ), filename is loaded into that figure . If the figure is already populated , sigTOOL invokes another instance of itself . h = sigTOOL ( ... ) returns the handle of the populated figure Also : sigTOOL ( 'nojvm' ) sets up the path and returns . This can be used to make sigTOOL core functions accessible from the command line without invoking a data view . Only child folders of : ... sigTOOL / program and ... sigTOOL / CORE / utils will be added to the path . sigTOOL ( 'version' ) returns the sigTOOL version number sigTOOL ( 'cleanup' ) deletes MAT files in the system temporary directory . Do not use this when sigTOOL is running . Note that temporary MAT files deleted by this process may be required by Fast Saved kclf files . sigTOOL ( 'compile' ) Compiles sigTOOL C / C ++ source files . Only needed if mex - files for the present platform are not included in the distribution ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006- ------------------------------------------------------------------------- Multiple sigTOOL version can be run from different parent folders , each providing different analysis functions via the sub - folders . However , different versions should be run in separate instances of MATLAB to avoid interaction . Revisions : doi : 10.1016 / j . jneumeth . 2008.11 . 004 http : // dx . doi . org / 10.1016 / j . jneumeth . 2008.11 . 004 http : // www . sciencedirect . com / science ? _ob = ArticleURL & _udi = B6T04 - 4 TX78YP - 4 & _user = 121727 & _coverDate = 11 % 2 F13 % 2 F2008 & _rdoc = 2 & _fmt = high & _orig = browse & _srch = doc - info ( % 23 toc % 234852 % 239999 % 23999999999 % 2399999 % 23 FLA % 23 display % 23 Articles ) & _cdi = 4852 & _sort = d & _docanchor =& _ct = 97 & _acct = C000010000 & _version = 1 & _urlVersion = 0 & _userid = 121727 & md5 = e43fa8165befc0cc663ecf7bdb2affed 01.08 . 09 Web addresses updated to http : // sigtool . sourceforge . net Out - of - date reminder now triggered at 1 year .","title":"sigTOOL"},{"location":"reference/lib/sigTOOL/program/sigTOOL.m/#sigtool","text":"sigTOOL : Main entry routine Examples : sigTOOL () invokes sigTOOL creating an empty data view . sigTOOL ( filename ) invokes sigTOOL and loads the sigTOOL data file filename . If called from an existing empty figure ( via a menu callback ), filename is loaded into that figure . If the figure is already populated , sigTOOL invokes another instance of itself . h = sigTOOL ( ... ) returns the handle of the populated figure Also : sigTOOL ( 'nojvm' ) sets up the path and returns . This can be used to make sigTOOL core functions accessible from the command line without invoking a data view . Only child folders of : ... sigTOOL / program and ... sigTOOL / CORE / utils will be added to the path . sigTOOL ( 'version' ) returns the sigTOOL version number sigTOOL ( 'cleanup' ) deletes MAT files in the system temporary directory . Do not use this when sigTOOL is running . Note that temporary MAT files deleted by this process may be required by Fast Saved kclf files . sigTOOL ( 'compile' ) Compiles sigTOOL C / C ++ source files . Only needed if mex - files for the present platform are not included in the distribution ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King 's College London 2006- ------------------------------------------------------------------------- Multiple sigTOOL version can be run from different parent folders , each providing different analysis functions via the sub - folders . However , different versions should be run in separate instances of MATLAB to avoid interaction . Revisions : doi : 10.1016 / j . jneumeth . 2008.11 . 004 http : // dx . doi . org / 10.1016 / j . jneumeth . 2008.11 . 004 http : // www . sciencedirect . com / science ? _ob = ArticleURL & _udi = B6T04 - 4 TX78YP - 4 & _user = 121727 & _coverDate = 11 % 2 F13 % 2 F2008 & _rdoc = 2 & _fmt = high & _orig = browse & _srch = doc - info ( % 23 toc % 234852 % 239999 % 23999999999 % 2399999 % 23 FLA % 23 display % 23 Articles ) & _cdi = 4852 & _sort = d & _docanchor =& _ct = 97 & _acct = C000010000 & _version = 1 & _urlVersion = 0 & _userid = 121727 & md5 = e43fa8165befc0cc663ecf7bdb2affed 01.08 . 09 Web addresses updated to http : // sigtool . sourceforge . net Out - of - date reminder now triggered at 1 year .","title":"sigTOOL"},{"location":"reference/lib/sigTOOL/program/sigTOOLCompileMexFiles.m/","text":"sigTOOLCompileMexFiles \u00b6 sigTOOLCompileMexFiles compiles sigTOOL source files written in C or C ++ This will only be needed if the sigTOOL distribution does not include mex-files for the current platform . This file should be run from sigTOOL so that the target files are on the MATLAB path . Example : sigTOOL ( 'compile' ); from the command line to invoke this function You must have set up the mex compiler beforehand from MATLAB . If mex-files are absent from the distribution , the supplied C / C ++ code will not have been tested on the target platform . Note that no testing has been done to-date on 64 bit platforms . Platform-specific m-files , such as those that call Windows application extensions for file import , will not be compiled here . The individual file format libraries provide details if you need to re-compile these . 32-bit Windows-platform users with older versions of MATLAB (< version 7 . 1 ) require mex-files with the dll extension instead of mexw32 : Either recompile the files or just rename the existing ones from * . mexw32 to * . dll . Note that most of the existing files need the Microsoft Visual Studio 2005 run-time libraries to be installed . See http :// www . mathworks . com / support / solutions / data / 1-2223MW . html for further details . If you recompile with MATLAB lcc compiler these libraries will not be needed ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"sigTOOLCompileMexFiles"},{"location":"reference/lib/sigTOOL/program/sigTOOLCompileMexFiles.m/#sigtoolcompilemexfiles","text":"sigTOOLCompileMexFiles compiles sigTOOL source files written in C or C ++ This will only be needed if the sigTOOL distribution does not include mex-files for the current platform . This file should be run from sigTOOL so that the target files are on the MATLAB path . Example : sigTOOL ( 'compile' ); from the command line to invoke this function You must have set up the mex compiler beforehand from MATLAB . If mex-files are absent from the distribution , the supplied C / C ++ code will not have been tested on the target platform . Note that no testing has been done to-date on 64 bit platforms . Platform-specific m-files , such as those that call Windows application extensions for file import , will not be compiled here . The individual file format libraries provide details if you need to re-compile these . 32-bit Windows-platform users with older versions of MATLAB (< version 7 . 1 ) require mex-files with the dll extension instead of mexw32 : Either recompile the files or just rename the existing ones from * . mexw32 to * . dll . Note that most of the existing files need the Microsoft Visual Studio 2005 run-time libraries to be installed . See http :// www . mathworks . com / support / solutions / data / 1-2223MW . html for further details . If you recompile with MATLAB lcc compiler these libraries will not be needed ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"sigTOOLCompileMexFiles"},{"location":"reference/lib/sigTOOL/program/File/external_File.m/","text":"external_File \u00b6 external_File sets up File Import menu items from CORE/File folder [ a b c ] =external_File(0) will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_File"},{"location":"reference/lib/sigTOOL/program/File/external_File.m/#external_file","text":"external_File sets up File Import menu items from CORE/File folder [ a b c ] =external_File(0) will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_File"},{"location":"reference/lib/sigTOOL/program/File/external_NeuroscienceFileImport.m/","text":"external_NeuroscienceFileImport \u00b6 external_File sets up Filel menu items from CORE folder [ a b c ] =external_File(0) will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_NeuroscienceFileImport"},{"location":"reference/lib/sigTOOL/program/File/external_NeuroscienceFileImport.m/#external_neurosciencefileimport","text":"external_File sets up Filel menu items from CORE folder [ a b c ] =external_File(0) will be called by dir2menu . Not user - callable . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - 2007 -------------------------------------------------------------------------","title":"external_NeuroscienceFileImport"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_CopyObjects.m/","text":"menu_CopyObjects \u00b6 menu_CopyObjects helper for copying graphics objects menu_CopyObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_CopyObjects.m/#menu_copyobjects","text":"menu_CopyObjects helper for copying graphics objects menu_CopyObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_PasteObjects.m/","text":"menu_PasteObjects \u00b6 menu_PasteObjects helper for pasting graphics objects menu_PasteObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PasteObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_PasteObjects.m/#menu_pasteobjects","text":"menu_PasteObjects helper for pasting graphics objects menu_PasteObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PasteObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_SendTo/menu_SendToSigBrowse.m/","text":"menu_SendToSigBrowse \u00b6 menu_SendToSigBrowse send data to the MATLAB SP toolbox signal browser","title":"menu_SendToSigBrowse"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/DataViewAxes/menu_SendTo/menu_SendToSigBrowse.m/#menu_sendtosigbrowse","text":"menu_SendToSigBrowse send data to the MATLAB SP toolbox signal browser","title":"menu_SendToSigBrowse"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_Cursors.m/","text":"external_Cursors \u00b6 external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_Cursors.m/#external_cursors","text":"external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_Export.m/","text":"external_Export \u00b6 external_Export sets up the export menu Example varargout=external_Export(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Export"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_Export.m/#external_export","text":"external_Export sets up the export menu Example varargout=external_Export(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Export"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_SendTo.m/","text":"external_SendTo \u00b6 external_SendTo sets up the export menu Example varargout=external_SendTo(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_SendTo"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/external_SendTo.m/#external_sendto","text":"external_SendTo sets up the export menu Example varargout=external_SendTo(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_SendTo"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/menu_ViewDetails.m/","text":"menu_ViewDetails \u00b6 menu_ViewDetails opens the result in the MATLAB variable editor menu_ViewDetails(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"menu_ViewDetails"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/menu_ViewDetails.m/#menu_viewdetails","text":"menu_ViewDetails opens the result in the MATLAB variable editor menu_ViewDetails(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"menu_ViewDetails"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/menu_zzzCurveFitting.m/","text":"menu_zzzCurveFitting \u00b6 menu_ViewDetails opens the result in the MATLAB variable editor menu_ViewDetails(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"menu_zzzCurveFitting"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/menu_zzzCurveFitting.m/#menu_zzzcurvefitting","text":"menu_ViewDetails opens the result in the MATLAB variable editor menu_ViewDetails(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"menu_zzzCurveFitting"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/group_CopyPasteObjects/menu_CopyObjects.m/","text":"menu_CopyObjects \u00b6 menu_CopyObjects helper for copying graphics objects menu_CopyObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/group_CopyPasteObjects/menu_CopyObjects.m/#menu_copyobjects","text":"menu_CopyObjects helper for copying graphics objects menu_CopyObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_CopyObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/group_CopyPasteObjects/menu_PasteObjects.m/","text":"menu_PasteObjects \u00b6 menu_PasteObjects helper for pasting graphics objects menu_PasteObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PasteObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultAxes/group_CopyPasteObjects/menu_PasteObjects.m/#menu_pasteobjects","text":"menu_PasteObjects helper for pasting graphics objects menu_PasteObjects(hObject , EventData) standard menu callback ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/06 Copyright \u00a9 The Author & King's College London 2006 - -------------------------------------------------------------------------","title":"menu_PasteObjects"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Cursors.m/","text":"external_Cursors \u00b6 external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Cursors.m/#external_cursors","text":"external_Cursors sets up the cursor menu Example varargout=external_Cursors(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Cursors"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Edit.m/","text":"external_Edit \u00b6 external_Edit sets up the edit menu Example varargout=external_Edit(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Edit"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Edit.m/#external_edit","text":"external_Edit sets up the edit menu Example varargout=external_Edit(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Edit"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Export.m/","text":"external_Export \u00b6 external_Export sets up the export menu Example varargout=external_Export(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Export"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_Export.m/#external_export","text":"external_Export sets up the export menu Example varargout=external_Export(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_Export"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_SendToFigure.m/","text":"external_SendToFigure \u00b6 external_SendToFigure sets up the export menu for a figure Example varargout=external_SendToFigure(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_SendToFigure"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/external_SendToFigure.m/#external_sendtofigure","text":"external_SendToFigure sets up the export menu for a figure Example varargout=external_SendToFigure(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_SendToFigure"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/menu_ToggleSmoothing.m/","text":"menu_ToggleSmoothing \u00b6 menu_ToggleSmoothing turns line smoothing on/off Example: menu_ToggleSmoothing(hObj , EventData) sigTOOL menu callback function See also: opengl Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 King\u0092s College London 2007 -------------------------------------------------------------------------- Acknowledgements: Revisions: 21 . 01 . 10 R2010a compatible","title":"menu_ToggleSmoothing"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/ResultFigure/menu_ToggleSmoothing.m/#menu_togglesmoothing","text":"menu_ToggleSmoothing turns line smoothing on/off Example: menu_ToggleSmoothing(hObj , EventData) sigTOOL menu callback function See also: opengl Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 09/07 Copyright \u00a9 King\u0092s College London 2007 -------------------------------------------------------------------------- Acknowledgements: Revisions: 21 . 01 . 10 R2010a compatible","title":"menu_ToggleSmoothing"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToExcel.m/","text":"menu_SendToExcel \u00b6 Initialize","title":"menu_SendToExcel"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToExcel.m/#menu_sendtoexcel","text":"Initialize","title":"menu_SendToExcel"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToOrigin.m/","text":"menu_SendToOrigin \u00b6 Initialize","title":"menu_SendToOrigin"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToOrigin.m/#menu_sendtoorigin","text":"Initialize","title":"menu_SendToOrigin"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToSigmaPlot.m/","text":"menu_SendToSigmaPlot \u00b6 Initialize","title":"menu_SendToSigmaPlot"},{"location":"reference/lib/sigTOOL/program/UiContextMenus/sigTOOL%20Send%20To/menu_SendToSigmaPlot.m/#menu_sendtosigmaplot","text":"Initialize","title":"menu_SendToSigmaPlot"},{"location":"reference/lib/sigTOOL/program/View/external_View.m/","text":"external_View \u00b6 external_View sets up the view menu Example varargout=external_View(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_View"},{"location":"reference/lib/sigTOOL/program/View/external_View.m/#external_view","text":"external_View sets up the view menu Example varargout=external_View(varargin) is called be dir2menu . Not user callable ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"external_View"},{"location":"reference/lib/sigTOOL/program/menu_Channels/menu_EventFilter.m/","text":"menu_EventFilter \u00b6 menu_EventFilter sets up the event filters in sigTOOL menu_EventFilter associates a function handle and , optionally , a template containing a set of values to match to a sigTOOL data view . These are stored in the application data area of the calling figure . Separate functions and templates are provided for each of the Channel selections A and B . Analysis functions can call the event filter functions to determine which subsets of timestamps or data epochs to analyze , typically using the scEventFilter function . Event Filter Functions The function should accept a channel cell element on input and return a row vector of logical flags : true if the template is matched false otherwise The returned vector has one element for each epoch of data The following standard functions are defined that do not require any marker data in the channel ' Off ' returns true for all epochs in the channel ( default ) ' Odd epochs ' returns true for odd numbered epochs , false otherwise ' Even epochs ' returns true for even numbered epochs , false otherwise The following require a simple numeric matrix in the channel marker field ' Match Any ' returns true if any marker value for the epoch matches any of specified values in the template , false otherwise ' Match All ' returns true if there is a match between each element in each row of marker data , and the corresponding element in the specified template e . g . channels { 1 }. mrk ( 10 , : ) = [ 0 1 2 3 ] ' Match Any ' with an input of 0 , 1 , 2 or 3 would return true ' Match All ' with an input [ 0 1 2 3 ] would return true If you select ' Custom ' from the menu you will be prompted to select a custom defined m - file . Such an m - file should have the form [ TF match ] = functionname ( channel , match ) where channel is an scchannel object match , if present , are the values to match ( e . g . as in matchany ) TF is the output to place in the channel . EventFilter . Flags field and is a logical vector with one value for each event / epoch in channel . Functions must return match , even if it is unused ( return it empty ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - -------------------------------------------------------------------------","title":"menu_EventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/menu_EventFilter.m/#menu_eventfilter","text":"menu_EventFilter sets up the event filters in sigTOOL menu_EventFilter associates a function handle and , optionally , a template containing a set of values to match to a sigTOOL data view . These are stored in the application data area of the calling figure . Separate functions and templates are provided for each of the Channel selections A and B . Analysis functions can call the event filter functions to determine which subsets of timestamps or data epochs to analyze , typically using the scEventFilter function . Event Filter Functions The function should accept a channel cell element on input and return a row vector of logical flags : true if the template is matched false otherwise The returned vector has one element for each epoch of data The following standard functions are defined that do not require any marker data in the channel ' Off ' returns true for all epochs in the channel ( default ) ' Odd epochs ' returns true for odd numbered epochs , false otherwise ' Even epochs ' returns true for even numbered epochs , false otherwise The following require a simple numeric matrix in the channel marker field ' Match Any ' returns true if any marker value for the epoch matches any of specified values in the template , false otherwise ' Match All ' returns true if there is a match between each element in each row of marker data , and the corresponding element in the specified template e . g . channels { 1 }. mrk ( 10 , : ) = [ 0 1 2 3 ] ' Match Any ' with an input of 0 , 1 , 2 or 3 would return true ' Match All ' with an input [ 0 1 2 3 ] would return true If you select ' Custom ' from the menu you will be prompted to select a custom defined m - file . Such an m - file should have the form [ TF match ] = functionname ( channel , match ) where channel is an scchannel object match , if present , are the values to match ( e . g . as in matchany ) TF is the output to place in the channel . EventFilter . Flags field and is a logical vector with one value for each event / epoch in channel . Functions must return match , even if it is unused ( return it empty ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007 - -------------------------------------------------------------------------","title":"menu_EventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/menu_SelectSubchannel.m/","text":"menu_SelectSubchannel \u00b6 ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_SelectSubchannel"},{"location":"reference/lib/sigTOOL/program/menu_Channels/menu_SelectSubchannel.m/#menu_selectsubchannel","text":"------------------------------------------------------------------------- Author: Malcolm Lidierth 11/07 Copyright \u00a9 The Author & King's College London 2007 - -------------------------------------------------------------------------","title":"menu_SelectSubchannel"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scApplyEventFilter.m/","text":"scApplyEventFilter \u00b6 scApplyEventFilter applies event filtering to a sigTOOL channel channels = scApplyEventFilter ( fhandle , chan , mode ) channels = scApplyEventFilter ( channels , chan , mode ) where channels is a sigTOOL channel cell array chan is the channel number ( or list ) mode is a string - the name of the function to apply to the channel ( s ) Standard functions for mode are : oddepochs select epochs 1 : 2 : end evenepochs select epochs 2 : 2 : end everynthepoch select epochs e . g . 5 : 3 : end matchany select epochs where any marker value matches those in a list matchall select epochs where all marker values match those in a list If mode is empty , event filtering will be turned off for selected channels Note that scApplyEventFilter writes the sigTOOL history output where appropriate . Writing custom filter functions : Filter functions take the form [ TF match ] = functionname ( channel , match ) where channel is an scchannel object match , if present , are the values to match ( e . g . as in matchany ) TF is the output to place in the channel . EventFilter . Flags field and is a logical vector with one value for each event / epoch in channel Functions must return match , even if it is unused ( return it empty ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - -------------------------------------------------------------------------","title":"scApplyEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scApplyEventFilter.m/#scapplyeventfilter","text":"scApplyEventFilter applies event filtering to a sigTOOL channel channels = scApplyEventFilter ( fhandle , chan , mode ) channels = scApplyEventFilter ( channels , chan , mode ) where channels is a sigTOOL channel cell array chan is the channel number ( or list ) mode is a string - the name of the function to apply to the channel ( s ) Standard functions for mode are : oddepochs select epochs 1 : 2 : end evenepochs select epochs 2 : 2 : end everynthepoch select epochs e . g . 5 : 3 : end matchany select epochs where any marker value matches those in a list matchall select epochs where all marker values match those in a list If mode is empty , event filtering will be turned off for selected channels Note that scApplyEventFilter writes the sigTOOL history output where appropriate . Writing custom filter functions : Filter functions take the form [ TF match ] = functionname ( channel , match ) where channel is an scchannel object match , if present , are the values to match ( e . g . as in matchany ) TF is the output to place in the channel . EventFilter . Flags field and is a logical vector with one value for each event / epoch in channel Functions must return match , even if it is unused ( return it empty ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - -------------------------------------------------------------------------","title":"scApplyEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scEventFilter.m/","text":"scEventFilter \u00b6 scEventFilter is a function. scEventFilter(fhandle)","title":"scEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scEventFilter.m/#sceventfilter","text":"scEventFilter is a function. scEventFilter(fhandle)","title":"scEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scSelectSubchannel.m/","text":"scSelectSubchannel \u00b6 scSelectSubchannel provides a GUI to select subchannels on multiplexed data Examples: scSelectSubchannel(fhandle) scSelectSubchannel(channels) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scSelectSubchannel"},{"location":"reference/lib/sigTOOL/program/menu_Channels/scSelectSubchannel.m/#scselectsubchannel","text":"scSelectSubchannel provides a GUI to select subchannels on multiplexed data Examples: scSelectSubchannel(fhandle) scSelectSubchannel(channels) ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"scSelectSubchannel"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/CursorEventFilter.m/","text":"CursorEventFilter \u00b6 CursorEventFilter - sigTOOL event/epoch filter function Example: [ TF match ] =CursorEventFilter(fhandle , obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"CursorEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/CursorEventFilter.m/#cursoreventfilter","text":"CursorEventFilter - sigTOOL event/epoch filter function Example: [ TF match ] =CursorEventFilter(fhandle , obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"CursorEventFilter"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/cursorpositions.m/","text":"cursorpositions \u00b6 cursorpositions - sigTOOL event/epoch filter function Example: [ TF match ] =cursorpositions(fhandle , obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"cursorpositions"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/cursorpositions.m/#cursorpositions","text":"cursorpositions - sigTOOL event/epoch filter function Example: [ TF match ] =cursorpositions(fhandle , obj) ------------------------------------------------------------------------- Author: Malcolm Lidierth 08/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"cursorpositions"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/evenepochs.m/","text":"evenepochs \u00b6 evenepochs - sigTOOL event/epoch filter function Example: [ TF match ] =evenepochs(channel) See also oddepochs ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"evenepochs"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/evenepochs.m/#evenepochs","text":"evenepochs - sigTOOL event/epoch filter function Example: [ TF match ] =evenepochs(channel) See also oddepochs ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"evenepochs"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/everynthepoch.m/","text":"everynthepoch \u00b6 everynthepoch - sigTOOL event/epoch filter function Example: [ TF match ] =everynthepoch(channel) [ TF match ] =everynthepoch(channel , match) If match is not supplied on input , the user will be prompted to supply it ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"everynthepoch"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/everynthepoch.m/#everynthepoch","text":"everynthepoch - sigTOOL event/epoch filter function Example: [ TF match ] =everynthepoch(channel) [ TF match ] =everynthepoch(channel , match) If match is not supplied on input , the user will be prompted to supply it ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"everynthepoch"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/matchall.m/","text":"matchall \u00b6 matchall - sigTOOL event/epoch filter function Example: [ TF match ] =matchall(channel , match) See also matchany ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"matchall"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/matchall.m/#matchall","text":"matchall - sigTOOL event/epoch filter function Example: [ TF match ] =matchall(channel , match) See also matchany ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"matchall"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/matchany.m/","text":"matchany \u00b6 matchany - sigTOOL event/epoch filter function Example: [ TF match ] =matchany(channel) See also matchall ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"matchany"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/matchany.m/#matchany","text":"matchany - sigTOOL event/epoch filter function Example: [ TF match ] =matchany(channel) See also matchall ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"matchany"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/oddepochs.m/","text":"oddepochs \u00b6 oddepochs - sigTOOL event/epoch filter function Example: [ TF match ] =evenepochs(channel) See also evenepochs ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"oddepochs"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/oddepochs.m/#oddepochs","text":"oddepochs - sigTOOL event/epoch filter function Example: [ TF match ] =evenepochs(channel) See also evenepochs ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"oddepochs"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/private/GetMatch.m/","text":"GetMatch \u00b6 GetMatch is a private helper function called by some event filters Example: match=GetMatch(str) where str is the dialog title match is a vector For details see scApplyEventFilter ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"GetMatch"},{"location":"reference/lib/sigTOOL/program/menu_Channels/filters/private/GetMatch.m/#getmatch","text":"GetMatch is a private helper function called by some event filters Example: match=GetMatch(str) where str is the dialog title match is a vector For details see scApplyEventFilter ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"GetMatch"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Autocorrelation.m/","text":"menu_Autocorrelation \u00b6 menu_Autocorrelation: gateway to the wvCorrelation function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Autocorrelation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Autocorrelation.m/#menu_autocorrelation","text":"menu_Autocorrelation: gateway to the wvCorrelation function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Autocorrelation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Coherence.m/","text":"menu_Coherence \u00b6 menu_Coherence: gateway to the wvCoherence function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Coherence"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Coherence.m/#menu_coherence","text":"menu_Coherence: gateway to the wvCoherence function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Coherence"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Correlation.m/","text":"menu_Correlation \u00b6 menu_Correlation: gateway to the wvCorrelation function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Correlation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Correlation.m/#menu_correlation","text":"menu_Correlation: gateway to the wvCorrelation function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006-7 Acknowledgements: Revisions:","title":"menu_Correlation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_PowerSpectra.m/","text":"menu_PowerSpectra \u00b6 menu_PowerSpectra: gateway to the wvPowerSpectralDensity function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_PowerSpectra"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_PowerSpectra.m/#menu_powerspectra","text":"menu_PowerSpectra: gateway to the wvPowerSpectralDensity function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_PowerSpectra"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Spectrogram.m/","text":"menu_Spectrogram \u00b6 Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Spectrogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_Spectral%20Methods/menu_Spectrogram.m/#menu_spectrogram","text":"Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Spectrogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_AmplitudeHistogram.m/","text":"menu_AmplitudeHistogram \u00b6 menu_Average: gateway to the wvAmplitudeHistogram function Toolboxes required: None Author: Malcolm Lidierth 02/08 Copyright \u00a9 King\u0092s College London 2008 Acknowledgements: Revisions:","title":"menu_AmplitudeHistogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_AmplitudeHistogram.m/#menu_amplitudehistogram","text":"menu_Average: gateway to the wvAmplitudeHistogram function Toolboxes required: None Author: Malcolm Lidierth 02/08 Copyright \u00a9 King\u0092s College London 2008 Acknowledgements: Revisions:","title":"menu_AmplitudeHistogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Average.m/","text":"menu_Average \u00b6 menu_Average: gateway to the wvAverage function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Average"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Average.m/#menu_average","text":"menu_Average: gateway to the wvAverage function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Average"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_CurrentSourceDensity.m/","text":"menu_CurrentSourceDensity \u00b6 Acknowledgements: Revisions:","title":"menu_CurrentSourceDensity"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_CurrentSourceDensity.m/#menu_currentsourcedensity","text":"Acknowledgements: Revisions:","title":"menu_CurrentSourceDensity"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_zzzPlaySound.m/","text":"menu_zzzPlaySound \u00b6 menu_PlaySound: menu gateway to the audio playback function scPlaySound Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_zzzPlaySound"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_zzzPlaySound.m/#menu_zzzplaysound","text":"menu_PlaySound: menu gateway to the audio playback function scPlaySound Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_zzzPlaySound"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/Interface_to_FastICA.m/","text":"Interface_to_FastICA \u00b6 Interface_to_FastICA provides a sigTOOL inteface to the FastICA software of Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Example : Interface_to_FastICA ( fhandle , clist , start , stop , Save_sigTOOL ,... Save_File , Save_MATLAB ) where fhandle is the handle of sigTOOL data view clist is a list of continuous waveforn channels on which to perform the independent components analysis start start time for analysis ( in seconds ) stop stop time for analysis ( in seconds ) Save_sigTOOL logical flag , if true save independent components to the sigTOOL data view as as new channels . Save_File logical flag , if true save results to MAT - file Save_MATLAB logical flag , if true save results to base workspace Interface_to_FastICA passes data to FastICA in double precision format . The results are saved by selecting the \" Export to sigTOOL \" button that is added to the FastICA GUI . Note that these will be stored in RAM until you save the file . For details of the output to the base workspace or a file , see the FastICA documentation The FastICA GUI can not be used when batch processing files in sigTOOL . To include calls to FastICA in a sigTOOL history file , use the Icasso option . This calls FastICA and can be used for batch processing ( setting the number of iterations to 1 will result in a single call to FastICA if that is required ) . For an introduction to independent components analysis and a description of the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"Interface_to_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/Interface_to_FastICA.m/#interface_to_fastica","text":"Interface_to_FastICA provides a sigTOOL inteface to the FastICA software of Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Example : Interface_to_FastICA ( fhandle , clist , start , stop , Save_sigTOOL ,... Save_File , Save_MATLAB ) where fhandle is the handle of sigTOOL data view clist is a list of continuous waveforn channels on which to perform the independent components analysis start start time for analysis ( in seconds ) stop stop time for analysis ( in seconds ) Save_sigTOOL logical flag , if true save independent components to the sigTOOL data view as as new channels . Save_File logical flag , if true save results to MAT - file Save_MATLAB logical flag , if true save results to base workspace Interface_to_FastICA passes data to FastICA in double precision format . The results are saved by selecting the \" Export to sigTOOL \" button that is added to the FastICA GUI . Note that these will be stored in RAM until you save the file . For details of the output to the base workspace or a file , see the FastICA documentation The FastICA GUI can not be used when batch processing files in sigTOOL . To include calls to FastICA in a sigTOOL history file , use the Icasso option . This calls FastICA and can be used for batch processing ( setting the number of iterations to 1 will result in a single call to FastICA if that is required ) . For an introduction to independent components analysis and a description of the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"Interface_to_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/Interface_to_Icasso.m/","text":"Interface_to_Icasso \u00b6 Interface_to_Icasso provides a sigTOOL inteface to the Icasso software of Johan Himberg Icassi is copyright ( c ) Johan Himberg and uses FastICA FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Example : sR = Interface_to_Icasso ( fhandle , clist , start , stop , Approach , Iter , NComp ,... Save_sigTOOL , Save_File , Save_MATLAB ) sR = Interface_to_Icasso ( fhandle , clist , start , stop , Approach , Iter , NComp ,... Save_sigTOOL , Save_File , Save_MATLAB , Param1 , Value1 ,..... ) where fhandle is the handle of sigTOOL data view clist is a list of continuous waveforn channels on which to perform the independent components analysis start start time for analysis ( in seconds ) stop stop time for analysis ( in seconds ) Mode ' randinit ' , ' bootstrap ' or both - sets mode for Icasso Iter number of iterations ( of FastICA ) NComp number of components to return Save_sigTOOL logical flag , if true save independent components to sigTOOL as new channels : the order of the components will be set according to the values of Iq returned by IcassoResult Save_File logical flag , if true save Icasso result structure to MAT - file Save_MATLAB logical flag , if true save Icasso result structure to base workspace Optional Param / Value pairs represent optional arguments to IcassoEst which will be passed to FastICA . If requested , the function will return the Icasso result structure in sR Interface_to_Icasso passes data to FastICA in double precision format . For an introduction to independent components analysis and a description of Iccaso and the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"Interface_to_Icasso"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/Interface_to_Icasso.m/#interface_to_icasso","text":"Interface_to_Icasso provides a sigTOOL inteface to the Icasso software of Johan Himberg Icassi is copyright ( c ) Johan Himberg and uses FastICA FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Example : sR = Interface_to_Icasso ( fhandle , clist , start , stop , Approach , Iter , NComp ,... Save_sigTOOL , Save_File , Save_MATLAB ) sR = Interface_to_Icasso ( fhandle , clist , start , stop , Approach , Iter , NComp ,... Save_sigTOOL , Save_File , Save_MATLAB , Param1 , Value1 ,..... ) where fhandle is the handle of sigTOOL data view clist is a list of continuous waveforn channels on which to perform the independent components analysis start start time for analysis ( in seconds ) stop stop time for analysis ( in seconds ) Mode ' randinit ' , ' bootstrap ' or both - sets mode for Icasso Iter number of iterations ( of FastICA ) NComp number of components to return Save_sigTOOL logical flag , if true save independent components to sigTOOL as new channels : the order of the components will be set according to the values of Iq returned by IcassoResult Save_File logical flag , if true save Icasso result structure to MAT - file Save_MATLAB logical flag , if true save Icasso result structure to base workspace Optional Param / Value pairs represent optional arguments to IcassoEst which will be passed to FastICA . If requested , the function will return the Icasso result structure in sR Interface_to_Icasso passes data to FastICA in double precision format . For an introduction to independent components analysis and a description of Iccaso and the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"Interface_to_Icasso"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/menu_FastICA.m/","text":"menu_FastICA \u00b6 menu_FastICA : gateway to the Interface_to_FastICA function Example : menu_FastICA ( hObject ) This is a menu callback menu_FastICA calls Interface_to_FastICA which provides a sigTOOL inteface to the FastICA software of Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Interface_to_FastICA passes data to FastICA in double precision format . The results can be saved by selecting the \" Export to sigTOOL \" button that is added to the FastICA GUI . Note that these will be stored in RAM . The FastICA GUI can not be used when batch processing files in sigTOOL . To include calls to FastICA in a sigTOOL history file , use the Icasso option . This calls FastICA and can be used for batch processing ( setting the number of iterations to 1 will result in a single call to FastICA if that is required ) . For an introduction to independent components analysis and a description of the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"menu_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/menu_FastICA.m/#menu_fastica","text":"menu_FastICA : gateway to the Interface_to_FastICA function Example : menu_FastICA ( hObject ) This is a menu callback menu_FastICA calls Interface_to_FastICA which provides a sigTOOL inteface to the FastICA software of Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen FastICA is copyright ( c ) Hugo G \u00e4 vert , Jarmo Hurri , Jaakko S \u00e4 rel \u00e4, and Aapo Hyv \u00e4 rinen Interface_to_FastICA passes data to FastICA in double precision format . The results can be saved by selecting the \" Export to sigTOOL \" button that is added to the FastICA GUI . Note that these will be stored in RAM . The FastICA GUI can not be used when batch processing files in sigTOOL . To include calls to FastICA in a sigTOOL history file , use the Icasso option . This calls FastICA and can be used for batch processing ( setting the number of iterations to 1 will result in a single call to FastICA if that is required ) . For an introduction to independent components analysis and a description of the FastICA software visit the FastICA website at : http : // www . cis . hut . fi / projects / ica / fastica / ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"menu_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/menu_Icasso.m/","text":"menu_Icasso \u00b6 menu_FastICA: gateway to the Interface_to_Icasso function Example: menu_Icasso(hObject) This is a menu callback menu_Icasso calls Interface_to_Icasso which provides a sigTOOL inteface to the Icasso software of Johan Himberg Icassi is copyright (c) Johan Himberg and uses FastICA FastICA is copyright (c) Hugo G\u00e4vert, Jarmo Hurri, Jaakko S\u00e4rel\u00e4, and Aapo Hyv\u00e4rinen","title":"menu_Icasso"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_aaaWaveform/menu_Independent%20Components/menu_Icasso.m/#menu_icasso","text":"menu_FastICA: gateway to the Interface_to_Icasso function Example: menu_Icasso(hObject) This is a menu callback menu_Icasso calls Interface_to_Icasso which provides a sigTOOL inteface to the Icasso software of Johan Himberg Icassi is copyright (c) Johan Himberg and uses FastICA FastICA is copyright (c) Hugo G\u00e4vert, Jarmo Hurri, Jaakko S\u00e4rel\u00e4, and Aapo Hyv\u00e4rinen","title":"menu_Icasso"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_Decimate.m/","text":"menu_Decimate \u00b6 menu_Filter gateway to zero-phase filtering of waveform channels","title":"menu_Decimate"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_Decimate.m/#menu_decimate","text":"menu_Filter gateway to zero-phase filtering of waveform channels","title":"menu_Decimate"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_Filter.m/","text":"menu_Filter \u00b6 menu_Filter provides zero-phase filtering of waveform channels","title":"menu_Filter"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_Filter.m/#menu_filter","text":"menu_Filter provides zero-phase filtering of waveform channels","title":"menu_Filter"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_zMakeTempChannel.m/","text":"menu_zMakeTempChannel \u00b6 Called as menu_MakeTempChannel(0)","title":"menu_zMakeTempChannel"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/group_zChannel%20Operations/menu_zMakeTempChannel.m/#menu_zmaketempchannel","text":"Called as menu_MakeTempChannel(0)","title":"menu_zMakeTempChannel"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvManager.m/","text":"cvManager \u00b6 cvManager is a function . [ tp ] = cvManager ( fhandle , updateflag )","title":"cvManager"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvManager.m/#cvmanager","text":"cvManager is a function . [ tp ] = cvManager ( fhandle , updateflag )","title":"cvManager"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvRawDataAxis.m/","text":"cvRawDataAxis \u00b6 cvRawDataAxis is a function. cvRawDataAxis(fhandle, startindex)","title":"cvRawDataAxis"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvRawDataAxis.m/#cvrawdataaxis","text":"cvRawDataAxis is a function. cvRawDataAxis(fhandle, startindex)","title":"cvRawDataAxis"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvScroll.m/","text":"cvScroll \u00b6 cvScroll channel viewer scroll cvScroll ( fhandle , step ) cvScroll ( hObject , step ) scrolls the viewer for the specified figure or parent figure of the specified object . step is the size of the data shift in elements of the data array ( negative to scroll back ) cvScroll ( ..., nloop ) limits the number of updates to nloop iterations . cvScroll ( ..., nloop , InLoopFcn , EndScrollFcn ) specifies up to two function handles InLoopFcn will be called after each screen update EndScrollFcn will be called when the scrolling is complete Both functions take the form : function fcn ( fhandle , [] )","title":"cvScroll"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvScroll.m/#cvscroll","text":"cvScroll channel viewer scroll cvScroll ( fhandle , step ) cvScroll ( hObject , step ) scrolls the viewer for the specified figure or parent figure of the specified object . step is the size of the data shift in elements of the data array ( negative to scroll back ) cvScroll ( ..., nloop ) limits the number of updates to nloop iterations . cvScroll ( ..., nloop , InLoopFcn , EndScrollFcn ) specifies up to two function handles InLoopFcn will be called after each screen update EndScrollFcn will be called when the scrolling is complete Both functions take the form : function fcn ( fhandle , [] )","title":"cvScroll"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvSetup.m/","text":"cvSetup \u00b6 cvSetup sigTOOL single channel viewer entry function This is still under development . It will change substantially in future releases of sigTOOL . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"cvSetup"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvSetup.m/#cvsetup","text":"cvSetup sigTOOL single channel viewer entry function This is still under development . It will change substantially in future releases of sigTOOL . ------------------------------------------------------------------------- Author: Malcolm Lidierth 11/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"cvSetup"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvUserWindow1.m/","text":"cvUserWindow1 \u00b6 cvUserWindow1 is a function. chan = cvUserWindow1(fhandle, chan)","title":"cvUserWindow1"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/cvUserWindow1.m/#cvuserwindow1","text":"cvUserWindow1 is a function. chan = cvUserWindow1(fhandle, chan)","title":"cvUserWindow1"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/menu_ChannelViewer.m/","text":"menu_ChannelViewer \u00b6 menu_PlaySound: menu gateway to the audio playback function scPlaySound Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ChannelViewer"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/menu_ChannelViewer.m/#menu_channelviewer","text":"menu_PlaySound: menu gateway to the audio playback function scPlaySound Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_ChannelViewer"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/AddHelp.m/","text":"AddHelp \u00b6 Help button","title":"AddHelp"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/AddHelp.m/#addhelp","text":"Help button","title":"AddHelp"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/GenerateSectionIndices.m/","text":"GenerateSectionIndices \u00b6 GenerateSectionIndices is a function. idx = GenerateSectionIndices(x, xrange)","title":"GenerateSectionIndices"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/GenerateSectionIndices.m/#generatesectionindices","text":"GenerateSectionIndices is a function. idx = GenerateSectionIndices(x, xrange)","title":"GenerateSectionIndices"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/ScrollControls.m/","text":"ScrollControls \u00b6 ScrollControls is a function. s = ScrollControls(panel)","title":"ScrollControls"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/ScrollControls.m/#scrollcontrols","text":"ScrollControls is a function. s = ScrollControls(panel)","title":"ScrollControls"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateSelectedData.m/","text":"UpdateSelectedData \u00b6 UpdateSelectedData is a function.","title":"UpdateSelectedData"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateSelectedData.m/#updateselecteddata","text":"UpdateSelectedData is a function.","title":"UpdateSelectedData"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateTableColumnNames.m/","text":"UpdateTableColumnNames \u00b6 UpdateTableColumnNames is a function. UpdateTableColumnNames(fhandle, chan)","title":"UpdateTableColumnNames"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateTableColumnNames.m/#updatetablecolumnnames","text":"UpdateTableColumnNames is a function. UpdateTableColumnNames(fhandle, chan)","title":"UpdateTableColumnNames"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateUitable.m/","text":"UpdateUitable \u00b6 UpdateUitable is a function. UpdateUitable(fhandle, start, stop)","title":"UpdateUitable"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/menu_ChannelViewer/private/UpdateUitable.m/#updateuitable","text":"UpdateUitable is a function. UpdateUitable(fhandle, start, stop)","title":"UpdateUitable"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/Interface_to_FastICA.m/","text":"Interface_to_FastICA \u00b6 This global variable from the fasticag function in FastICA","title":"Interface_to_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/Interface_to_FastICA.m/#interface_to_fastica","text":"This global variable from the fasticag function in FastICA","title":"Interface_to_FastICA"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvAmplitudeHistogram.m/","text":"wvAmplitudeHistogram \u00b6 wvAmplitudeHistogram calculates the waveform ampltitude distribution Exampe : result = wvAmplitudeHistogram ( fhandle , field1 , value1 , field2 , value2 .... ) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are :","title":"wvAmplitudeHistogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvAmplitudeHistogram.m/#wvamplitudehistogram","text":"wvAmplitudeHistogram calculates the waveform ampltitude distribution Exampe : result = wvAmplitudeHistogram ( fhandle , field1 , value1 , field2 , value2 .... ) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are :","title":"wvAmplitudeHistogram"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvAverage.m/","text":"wvAverage \u00b6 wvAverage performs waveform averaging about a set of trigger times wvAverage is also called for spike-triggered averaging by the sigTOOL Spike Train Toolkit wvAverage provides both mean and median averaging and also returns error estimates : standard deviations for the mean or , with the Statistics Toolbox installed , 25 / 75th percentiles for the median Exampe : result = wvAverage ( fhandle , field1 , value1 , field2 , value2 ....) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are : 'trigger' one or more valid trigger channel numbers ( scalar or vector ) 'sources' one or more valid source channel numbers ( scalar or vector ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) 'duration' the duration of the sweep ( pre + post time ) ( scalar , in seconds ) 'pretime' the pre-time ( scalar , as a percentage of the duration ) 'sweepsperaverage' the number of triggers to use for each average . Set to zero to use all available triggers . If sweepsperaverage is non-zero and less than the total number of triggers available , multiple averages will be returned each using sweepsperaverage triggers ( scalar ) 'overlap' the percentage overlap for multiple triggers . If overalp is non-zero , multiple averages will be calculated using overlapping data . For example , with sweepsperaverage = 20 and overlap = 50 , averages will be calculated for sweeps 1-20 , 11-30 , 21-40 etc . ( scalar ) 'retrigger' Logical flag . If retrigger is true , all triggers will be used ( typically e . g for spike-triggered averaging ). If false , triggers will be debounced ( see debounce . m ). ( Logical . default == false ) 'dcflag' Logical flag . If true , the average value in the pre-stimulus period ( the values at t < 0 ) will be subtracted for each average . If no pre-stimulus period is defined ( i . e . pretrigger == 0 ), the value if the first bin in the result will be subtracted for each average . ( Logical . default == false ) 'method' the averaging method . A string , either 'mean' or 'median' ( Default == 'mean' ) 'errtype' the error type . A string , either 'std' for standard deviation or 'prctile' for percentiles . ( Default == 'std' ) percentiles a two-element vector giving the required percentiles if errtype == 'prctile' . ( Default [ 25 75 ] ); Toolboxes Required : For percentiles , the MATLAB prctile function is needed ( e . g . Stats Toolbox ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- ------------------------------------------------------------------------- Revisions : 12 . 10 . 08 Fix odata 27 . 09 . 09 Add test for shorter sampling time on source compared to trigger channel 09 . 10 . 09 Add pairwise trigger / source averaging","title":"wvAverage"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvAverage.m/#wvaverage","text":"wvAverage performs waveform averaging about a set of trigger times wvAverage is also called for spike-triggered averaging by the sigTOOL Spike Train Toolkit wvAverage provides both mean and median averaging and also returns error estimates : standard deviations for the mean or , with the Statistics Toolbox installed , 25 / 75th percentiles for the median Exampe : result = wvAverage ( fhandle , field1 , value1 , field2 , value2 ....) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are : 'trigger' one or more valid trigger channel numbers ( scalar or vector ) 'sources' one or more valid source channel numbers ( scalar or vector ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) 'duration' the duration of the sweep ( pre + post time ) ( scalar , in seconds ) 'pretime' the pre-time ( scalar , as a percentage of the duration ) 'sweepsperaverage' the number of triggers to use for each average . Set to zero to use all available triggers . If sweepsperaverage is non-zero and less than the total number of triggers available , multiple averages will be returned each using sweepsperaverage triggers ( scalar ) 'overlap' the percentage overlap for multiple triggers . If overalp is non-zero , multiple averages will be calculated using overlapping data . For example , with sweepsperaverage = 20 and overlap = 50 , averages will be calculated for sweeps 1-20 , 11-30 , 21-40 etc . ( scalar ) 'retrigger' Logical flag . If retrigger is true , all triggers will be used ( typically e . g for spike-triggered averaging ). If false , triggers will be debounced ( see debounce . m ). ( Logical . default == false ) 'dcflag' Logical flag . If true , the average value in the pre-stimulus period ( the values at t < 0 ) will be subtracted for each average . If no pre-stimulus period is defined ( i . e . pretrigger == 0 ), the value if the first bin in the result will be subtracted for each average . ( Logical . default == false ) 'method' the averaging method . A string , either 'mean' or 'median' ( Default == 'mean' ) 'errtype' the error type . A string , either 'std' for standard deviation or 'prctile' for percentiles . ( Default == 'std' ) percentiles a two-element vector giving the required percentiles if errtype == 'prctile' . ( Default [ 25 75 ] ); Toolboxes Required : For percentiles , the MATLAB prctile function is needed ( e . g . Stats Toolbox ). ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- ------------------------------------------------------------------------- Revisions : 12 . 10 . 08 Fix odata 27 . 09 . 09 Add test for shorter sampling time on source compared to trigger channel 09 . 10 . 09 Add pairwise trigger / source averaging","title":"wvAverage"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCoherence.m/","text":"wvCoherence \u00b6 wvCoherence : returns the coherence or SNR via a Welch periodogram Exampe : result = wvCoherence ( fhandle , field1 , value1 , field2 , value2 .... ) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Only continuous waveform data can be analyzed with this function . The coherence or SNR will be returned for each channel pair that [ 1 ] have the same sampling frequency and [ 2 ] were sampled synchronously . Valid field / value pairs are : 'channellist' a two - element cell array . Element 1 should contain the numbers of the channels to use as reference channels , Element 2 those of the source channels . ( 2 - element cell array ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) ' 'windowtype' the window to apply to the data ( string : e . g . 'hamming' ) 'windowlength' the length of the window and also of the data sections ( scalar ) 'overlap' the overlap to be used between data sections as a percentage ( scalar ) 'mode' a string : 'coherence' to return magnitude - squared coherence , 'snr' for the signal - to - noise ratio . 'detrend' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvCoherence"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCoherence.m/#wvcoherence","text":"wvCoherence : returns the coherence or SNR via a Welch periodogram Exampe : result = wvCoherence ( fhandle , field1 , value1 , field2 , value2 .... ) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Only continuous waveform data can be analyzed with this function . The coherence or SNR will be returned for each channel pair that [ 1 ] have the same sampling frequency and [ 2 ] were sampled synchronously . Valid field / value pairs are : 'channellist' a two - element cell array . Element 1 should contain the numbers of the channels to use as reference channels , Element 2 those of the source channels . ( 2 - element cell array ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) ' 'windowtype' the window to apply to the data ( string : e . g . 'hamming' ) 'windowlength' the length of the window and also of the data sections ( scalar ) 'overlap' the overlap to be used between data sections as a percentage ( scalar ) 'mode' a string : 'coherence' to return magnitude - squared coherence , 'snr' for the signal - to - noise ratio . 'detrend' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvCoherence"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvConvertToInteger.m/","text":"wvConvertToInteger \u00b6 wvConvertToInteger converts a waveform channel to 16 bit integer format wvConvertToInteger converts floating point data in a sigTOOL waveform channel to 16 bit integer Data in the Map . Data . Adc field are scaled as out =( in-DC )/ scale where : scale =( datamaximum-dataminimum )/ 65535 DC =( dataminimum + datamaximum )/ 2 ; dataminimum and datamaximum will be calculated from the supplied data unless specified on input . Examples : channels = wvConvertToInteger ( fhandle , chan ) channels = wvConvertToInteger ( fhandle , chan , dataminimum , datamaximum ) channels = wvConvertToInteger ( channels , chan ) channels = wvConvertToInteger ( channels , chan , dataminimum , datamaximum ) data = wvConvertToInteger ( data ) data = wvConvertToInteger ( data , dataminimum , datamaximum ) Integer data are written to a temporary file [ .... , filename ] = wvConvertToInteger (.....) also returns the name of the temporary file where : fhandle is a sigTOOL data view handle channels is a sigTOOL channel cell array data is a sigTOOL channel cell array element or channel structure Data output is to a temporary file in the system temp folder [ as returned by tempdir () ] which will be memory mapped . If fhandle is supplied , the figure application data area will be updated . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvConvertToInteger"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvConvertToInteger.m/#wvconverttointeger","text":"wvConvertToInteger converts a waveform channel to 16 bit integer format wvConvertToInteger converts floating point data in a sigTOOL waveform channel to 16 bit integer Data in the Map . Data . Adc field are scaled as out =( in-DC )/ scale where : scale =( datamaximum-dataminimum )/ 65535 DC =( dataminimum + datamaximum )/ 2 ; dataminimum and datamaximum will be calculated from the supplied data unless specified on input . Examples : channels = wvConvertToInteger ( fhandle , chan ) channels = wvConvertToInteger ( fhandle , chan , dataminimum , datamaximum ) channels = wvConvertToInteger ( channels , chan ) channels = wvConvertToInteger ( channels , chan , dataminimum , datamaximum ) data = wvConvertToInteger ( data ) data = wvConvertToInteger ( data , dataminimum , datamaximum ) Integer data are written to a temporary file [ .... , filename ] = wvConvertToInteger (.....) also returns the name of the temporary file where : fhandle is a sigTOOL data view handle channels is a sigTOOL channel cell array data is a sigTOOL channel cell array element or channel structure Data output is to a temporary file in the system temp folder [ as returned by tempdir () ] which will be memory mapped . If fhandle is supplied , the figure application data area will be updated . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvConvertToInteger"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCopyToTempChannel.m/","text":"wvCopyToTempChannel \u00b6 wvCopyToTempChannel creates a temporary sigTOOL waveform channel Data are written to a temporary file placed in the system temp folder . They will be deleted when the figure is closed . Examples : wvCopyToTempChannel ( fhandle , source , target , IntFlag ) channels = wvCopyToTempChannel ( fhandle , source , target , IntFlag ) channels = wvCopyToTempChannel ( channels , source , target , IntFlag where fhandle is the sigTOOL data view handle or channels is a sigTOOL channel cell array source is the number of the channel to copy target is the number of the channel to copy data into IntFlag true to save an integer result [ 1 ] If IntFlag is true and the source data are on disc in integer format , these values will be copied [ 2 ] If IntFlag is true and the source data are on disc in floating point format , these values will be scaled and offset and cast to int16 in the target channel [ 3 ] If IntFlag is false ( default ) data will be written to disc as double precision floating point , after scaling and offsetting [ channels , filename ] = wvCopyToTempChannel ( ... ) also returns the name of the temporary file ------------------------------------------------------------------------- With episodically sampled waveforms , only currently valid epochs will be copied . With multiplexed channels , only data from the currently selected subchannel will be copied . ------------------------------------------------------------------------- See Also scCommit , memmapfile , adcarray , tempname ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- ------------------------------------------------------------------------- Revisions 23 . 12 . 09 Add support for channel groups","title":"wvCopyToTempChannel"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCopyToTempChannel.m/#wvcopytotempchannel","text":"wvCopyToTempChannel creates a temporary sigTOOL waveform channel Data are written to a temporary file placed in the system temp folder . They will be deleted when the figure is closed . Examples : wvCopyToTempChannel ( fhandle , source , target , IntFlag ) channels = wvCopyToTempChannel ( fhandle , source , target , IntFlag ) channels = wvCopyToTempChannel ( channels , source , target , IntFlag where fhandle is the sigTOOL data view handle or channels is a sigTOOL channel cell array source is the number of the channel to copy target is the number of the channel to copy data into IntFlag true to save an integer result [ 1 ] If IntFlag is true and the source data are on disc in integer format , these values will be copied [ 2 ] If IntFlag is true and the source data are on disc in floating point format , these values will be scaled and offset and cast to int16 in the target channel [ 3 ] If IntFlag is false ( default ) data will be written to disc as double precision floating point , after scaling and offsetting [ channels , filename ] = wvCopyToTempChannel ( ... ) also returns the name of the temporary file ------------------------------------------------------------------------- With episodically sampled waveforms , only currently valid epochs will be copied . With multiplexed channels , only data from the currently selected subchannel will be copied . ------------------------------------------------------------------------- See Also scCommit , memmapfile , adcarray , tempname ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- ------------------------------------------------------------------------- Revisions 23 . 12 . 09 Add support for channel groups","title":"wvCopyToTempChannel"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCorrelation.m/","text":"wvCorrelation \u00b6 wvCorrelation calculate correlations between waveforms Example : wvCorrelation ( fhandle , PropName1 , PropValue1 .... ) wvCorrelation ( channels , PropName1 , PropValue1 .... ) calculates the correlation ( s ) and plots them out = wvCorrelation ( fhandle , PropName1 , PropValue1 .... ) out = wvCorrelation ( channels , PropName1 , PropValue1 .... ) returns a sigTOOLResultData object where fhandle is a sigTOOL data view handle and channels is a sigTOOL channels cell array Valid property name / values are : Refs The list of reference channels numbers Sources The list of source channel numbers . If empty , the autocorrelations of the channels listed in refs will be calculated Start The start time for the calculations ( seconds ) Stop The end time for the calculations ( seconds ) MaximumLag The largest postive lag for which correlation should be returned . Correlations will be returned for all lags between - MaxLag and MaxLag RemoveDC A logical flag . If true , the mean of the data will be subtracted before calculating the correlations . ScaleMode Controls scaling of the result : None No scaling - the covariance is returned Biased Divided by N Unbiased Divided by N - ( abs ) lag Coeff Normalized to the range - 1 to 1 N above represents the size of the data block . This is maximally MaxBlockSize at described below . MaxBlockSize An FFT based algorithm is used to calculate the correlations . MaxBlockSize is the maximum length of data used in each FFT . This defaults to 2 ^ 22. If the length of data exceeds MaxBlockSize , multiple FFTs will be done and the returned correlation will be the simple average of these . The used block size will be length ( data ) / M where M is 2 , 4 , 8 etc chosen to yield a size less than MaxBlockize . Data points beyond M * block size will be discarded . Correlations will be calculated only those channel pairs where the sample rate is equal and they are sampled synchronously . Multiplexed channels are not supported . Note that when ScaleMode is 'none' , 'Biased' or 'Coeff' the result is biased : the correlations will fall towards zero as the lag approaches the length of the data ( or of the data block ) . Data blocks will be zero padded to avoid wraparound in the FFT . Additional padding is added to produce an integer power of 2 input size for the FFT . Note that , when multiple data blocks are used , blocks are treated independently and the correlations are simply averaged . Proper overlap - add is not used so no account is taken of the effects between data points at the end of block n and those at the beginning of block n + 1. These effects should be small for block sizes >> number of lags . ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvCorrelation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCorrelation.m/#wvcorrelation","text":"wvCorrelation calculate correlations between waveforms Example : wvCorrelation ( fhandle , PropName1 , PropValue1 .... ) wvCorrelation ( channels , PropName1 , PropValue1 .... ) calculates the correlation ( s ) and plots them out = wvCorrelation ( fhandle , PropName1 , PropValue1 .... ) out = wvCorrelation ( channels , PropName1 , PropValue1 .... ) returns a sigTOOLResultData object where fhandle is a sigTOOL data view handle and channels is a sigTOOL channels cell array Valid property name / values are : Refs The list of reference channels numbers Sources The list of source channel numbers . If empty , the autocorrelations of the channels listed in refs will be calculated Start The start time for the calculations ( seconds ) Stop The end time for the calculations ( seconds ) MaximumLag The largest postive lag for which correlation should be returned . Correlations will be returned for all lags between - MaxLag and MaxLag RemoveDC A logical flag . If true , the mean of the data will be subtracted before calculating the correlations . ScaleMode Controls scaling of the result : None No scaling - the covariance is returned Biased Divided by N Unbiased Divided by N - ( abs ) lag Coeff Normalized to the range - 1 to 1 N above represents the size of the data block . This is maximally MaxBlockSize at described below . MaxBlockSize An FFT based algorithm is used to calculate the correlations . MaxBlockSize is the maximum length of data used in each FFT . This defaults to 2 ^ 22. If the length of data exceeds MaxBlockSize , multiple FFTs will be done and the returned correlation will be the simple average of these . The used block size will be length ( data ) / M where M is 2 , 4 , 8 etc chosen to yield a size less than MaxBlockize . Data points beyond M * block size will be discarded . Correlations will be calculated only those channel pairs where the sample rate is equal and they are sampled synchronously . Multiplexed channels are not supported . Note that when ScaleMode is 'none' , 'Biased' or 'Coeff' the result is biased : the correlations will fall towards zero as the lag approaches the length of the data ( or of the data block ) . Data blocks will be zero padded to avoid wraparound in the FFT . Additional padding is added to produce an integer power of 2 input size for the FFT . Note that , when multiple data blocks are used , blocks are treated independently and the correlations are simply averaged . Proper overlap - add is not used so no account is taken of the effects between data points at the end of block n and those at the beginning of block n + 1. These effects should be small for block sizes >> number of lags . ------------------------------------------------------------------------- Author : Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvCorrelation"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCurrentSourceDensity.m/","text":"wvCurrentSourceDensity \u00b6 wvCurrentSourceDensity calculates 1-dimensional current source densities It is assumed that a fixed number of triggers have been delivered at each point along an electrode track . wvCurrentSourceDensity calls wvAverage to average the data at each point . The MATLAB del2 function is used to find the discrete Laplacian . Example : result = wvCurrentSourceDensity ( fhandle , field1 , value1 , field2 , value2 ...) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are : 'trigger' one or more valid trigger channel numbers ( scalar or vector ) 'sources' one or more valid source channel numbers ( scalar or vector ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) 'duration' the duration of the sweep ( pre + post time ) ( scalar , in seconds ) 'pretime' the pre-time ( scalar , as a percentage of the duration ) 'sweepsperaverage' the number of triggers to use for each average . Set to zero to use all available triggers . If sweepsperaverage is non-zero and less than the total number of triggers available , multiple averages will be returned each using sweepsperaverage triggers ( scalar ) 'overlap' the percentage overlap for multiple triggers . If overalp is non-zero , multiple averages will be calculated using overlapping data . For example , with sweepsperaverage = 20 and overlap = 50 , averages will be calculated for sweeps 1-20 , 11-30 , 21-40 etc . ( scalar ) 'retrigger' Logical flag . If retrigger is true , all triggers will be used ( typically e . g for spike-triggered averaging ). If false , triggers will be debounced ( see debounce . m ). ( Logical . default == false ) 'dcflag' Logical flag . If true , the average value in the pre-stimulus period ( the values at t < 0 ) will be subtracted from each average . If no pre-stimulus period is defined ( i . e . pretrigger == 0 ), the value if the first bin in the result will be subtracted for each average . ( Logical . default == false ) 'method' the averaging method . A string , either 'mean' or 'median' ( Default == 'mean' ) 'errtype' the error type . A string , either 'std' for standard deviation or 'prctile' for percentiles . ( Default == 'std' ) 'percentiles' a two-element vector giving the required percentiles if errtype == 'prctile' . ( Default [ 25 75 ] ); 'spacing' the spacing between recording points . May be a scalar , in which case equidistant recording points starting at zero will be assumed . Otherwise a vector of points can be given . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvCurrentSourceDensity"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvCurrentSourceDensity.m/#wvcurrentsourcedensity","text":"wvCurrentSourceDensity calculates 1-dimensional current source densities It is assumed that a fixed number of triggers have been delivered at each point along an electrode track . wvCurrentSourceDensity calls wvAverage to average the data at each point . The MATLAB del2 function is used to find the discrete Laplacian . Example : result = wvCurrentSourceDensity ( fhandle , field1 , value1 , field2 , value2 ...) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are : 'trigger' one or more valid trigger channel numbers ( scalar or vector ) 'sources' one or more valid source channel numbers ( scalar or vector ) 'start' the start time for data processing ( scalar , in seconds ) 'stop' the stop time for data processing ( scalar , in seconds ) 'duration' the duration of the sweep ( pre + post time ) ( scalar , in seconds ) 'pretime' the pre-time ( scalar , as a percentage of the duration ) 'sweepsperaverage' the number of triggers to use for each average . Set to zero to use all available triggers . If sweepsperaverage is non-zero and less than the total number of triggers available , multiple averages will be returned each using sweepsperaverage triggers ( scalar ) 'overlap' the percentage overlap for multiple triggers . If overalp is non-zero , multiple averages will be calculated using overlapping data . For example , with sweepsperaverage = 20 and overlap = 50 , averages will be calculated for sweeps 1-20 , 11-30 , 21-40 etc . ( scalar ) 'retrigger' Logical flag . If retrigger is true , all triggers will be used ( typically e . g for spike-triggered averaging ). If false , triggers will be debounced ( see debounce . m ). ( Logical . default == false ) 'dcflag' Logical flag . If true , the average value in the pre-stimulus period ( the values at t < 0 ) will be subtracted from each average . If no pre-stimulus period is defined ( i . e . pretrigger == 0 ), the value if the first bin in the result will be subtracted for each average . ( Logical . default == false ) 'method' the averaging method . A string , either 'mean' or 'median' ( Default == 'mean' ) 'errtype' the error type . A string , either 'std' for standard deviation or 'prctile' for percentiles . ( Default == 'std' ) 'percentiles' a two-element vector giving the required percentiles if errtype == 'prctile' . ( Default [ 25 75 ] ); 'spacing' the spacing between recording points . May be a scalar , in which case equidistant recording points starting at zero will be assumed . Otherwise a vector of points can be given . ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvCurrentSourceDensity"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvDecimate.m/","text":"wvDecimate \u00b6 wvDecimate filters and downsamples sigTOOL waveforms channels Examples : wvDecimate ( fhandle , source , target , IntFlag , r ) wvDecimate ( channels , source , target , IntFlag , r ) where fhandle is a sigTOOL data figure handle the channel data in the specified figure will be updated channels is a cell array of scchannel objects source is the source channel number target is the target channel to receive the result ( source and target may be equal ) IntFlag is a true false / flag . If true the the downsampled data will be scaled and cast to int16 on disc . If false , data will be returned in double precision r is the downsampling factor , e . g . 10 to reduce the sample rate by 10 out = wvDecimate ( .... ) returns the sigTOOL channel cell array wvDecimate applies a Chebyshev Type 1 lowpass filter to prevent aliaing before downsampling . This has a cut - off frequency of 0 . 4 x the new sample rate ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvDecimate"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvDecimate.m/#wvdecimate","text":"wvDecimate filters and downsamples sigTOOL waveforms channels Examples : wvDecimate ( fhandle , source , target , IntFlag , r ) wvDecimate ( channels , source , target , IntFlag , r ) where fhandle is a sigTOOL data figure handle the channel data in the specified figure will be updated channels is a cell array of scchannel objects source is the source channel number target is the target channel to receive the result ( source and target may be equal ) IntFlag is a true false / flag . If true the the downsampled data will be scaled and cast to int16 on disc . If false , data will be returned in double precision r is the downsampling factor , e . g . 10 to reduce the sample rate by 10 out = wvDecimate ( .... ) returns the sigTOOL channel cell array wvDecimate applies a Chebyshev Type 1 lowpass filter to prevent aliaing before downsampling . This has a cut - off frequency of 0 . 4 x the new sample rate ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King ' s College London 2007- -------------------------------------------------------------------------","title":"wvDecimate"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFFTFilt.m/","text":"wvFFTFilt \u00b6 wvFFTFilt provides FFT-based filtering of sigTOOL waveform data THIS FUNCTION IS OBSOLETE. USE wvFilter INSTEAD","title":"wvFFTFilt"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFFTFilt.m/#wvfftfilt","text":"wvFFTFilt provides FFT-based filtering of sigTOOL waveform data THIS FUNCTION IS OBSOLETE. USE wvFilter INSTEAD","title":"wvFFTFilt"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFiltFilt.m/","text":"wvFiltFilt \u00b6 wvFiltFilt provides zero-phase filtering of sigTOOL waveform data THIS FUNCTION IS OBSOLETE. USE wvFilter INSTEAD","title":"wvFiltFilt"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFiltFilt.m/#wvfiltfilt","text":"wvFiltFilt provides zero-phase filtering of sigTOOL waveform data THIS FUNCTION IS OBSOLETE. USE wvFilter INSTEAD","title":"wvFiltFilt"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFilter.m/","text":"wvFilter \u00b6 wvFilter provides filtering of sigTOOL waveform data Examples : channels = wvFilter ( fhandle , source , target , Hd ) channels = wvFilter ( channels , source , target , Hd ) where fhandle is a sigTOOL data figure handle source data will be taken from this figure and the application data area will be updated with the result channels is a cell array of scchannel objects source is the source channel number target is the target channel to receive the result ( source and target may be equal ) IntFlag flag , true to convert to int16 on disc Hd is a dfilt filter object wvFilter replaces wvFiltFilt and wvFFTFilt from earlier sigTOOL versions For all filters , wvFilter will attempt to filter the data in RAM . If this fails because of out - of - memory errors , filtering will instead be performed on a temporary channel with data being stored on disc . FIR filters use a single pass through the data and correct for the group delay . Note however , that with an even number of filter coefficients , a shift of 0 . 5 samples will remain . Use filters with an odd number of coefficients to avoid this ( i . e . specify an even order ( n ) in the design to get n + 1 coefficients . FIR filters will be applied using a fast FFT - based algorithm where this is possible and advantageous . IIR filters are applied using a double pass , zero - phase shift algorithm . For all filters , data are pre - and post - pended with a reversed and reflected copy of the data to minimize end - effects . See also filtfilt , filtfilthd , fftfilt , dfilt ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions 23 . 12 . 09 Add support for channel groups","title":"wvFilter"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFilter.m/#wvfilter","text":"wvFilter provides filtering of sigTOOL waveform data Examples : channels = wvFilter ( fhandle , source , target , Hd ) channels = wvFilter ( channels , source , target , Hd ) where fhandle is a sigTOOL data figure handle source data will be taken from this figure and the application data area will be updated with the result channels is a cell array of scchannel objects source is the source channel number target is the target channel to receive the result ( source and target may be equal ) IntFlag flag , true to convert to int16 on disc Hd is a dfilt filter object wvFilter replaces wvFiltFilt and wvFFTFilt from earlier sigTOOL versions For all filters , wvFilter will attempt to filter the data in RAM . If this fails because of out - of - memory errors , filtering will instead be performed on a temporary channel with data being stored on disc . FIR filters use a single pass through the data and correct for the group delay . Note however , that with an even number of filter coefficients , a shift of 0 . 5 samples will remain . Use filters with an odd number of coefficients to avoid this ( i . e . specify an even order ( n ) in the design to get n + 1 coefficients . FIR filters will be applied using a fast FFT - based algorithm where this is possible and advantageous . IIR filters are applied using a double pass , zero - phase shift algorithm . For all filters , data are pre - and post - pended with a reversed and reflected copy of the data to minimize end - effects . See also filtfilt , filtfilthd , fftfilt , dfilt ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- Revisions 23 . 12 . 09 Add support for channel groups","title":"wvFilter"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFilterDesign.m/","text":"wvFilterDesign \u00b6 wvFilterDesign integrates FDATool into sigTOOL FDATool is the standard filter design and analysis tool supplied as part of the MATLAB Signal Processing Toolbox . wvFilterDesign adds a sigTOOL menu to the FDATool figure This provides for : Select View : select the sigTOOL data view Select Source : select a source channel to filter Select Target : select the target channel in the view Apply filter : applies ( and if necessary designs ) the current filter Example : fda = wvFilterDesign ( fhandle , source , target , IntFlag , ApplyToAll ) fhandle : is the sigTOOL data view handle source : is the source channel target : is the target channel IntFlag : is true to convrt data to 16 - bit integer after filtering ApplyToAll : applied the filter using the same source and target channels in all open files Filters are applied by calling wvFiltFilt . See Also fdatool , wvFiltFilt , scFilter ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvFilterDesign"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvFilterDesign.m/#wvfilterdesign","text":"wvFilterDesign integrates FDATool into sigTOOL FDATool is the standard filter design and analysis tool supplied as part of the MATLAB Signal Processing Toolbox . wvFilterDesign adds a sigTOOL menu to the FDATool figure This provides for : Select View : select the sigTOOL data view Select Source : select a source channel to filter Select Target : select the target channel in the view Apply filter : applies ( and if necessary designs ) the current filter Example : fda = wvFilterDesign ( fhandle , source , target , IntFlag , ApplyToAll ) fhandle : is the sigTOOL data view handle source : is the source channel target : is the target channel IntFlag : is true to convrt data to 16 - bit integer after filtering ApplyToAll : applied the filter using the same source and target channels in all open files Filters are applied by calling wvFiltFilt . See Also fdatool , wvFiltFilt , scFilter ------------------------------------------------------------------------- Author : Malcolm Lidierth 11 / 07 Copyright \u00a9 The Author & King 's College London 2007- -------------------------------------------------------------------------","title":"wvFilterDesign"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvHamming.m/","text":"wvHamming \u00b6 wvHamming returns an n-point Haming window w=0.54 - 0.46*cos(2*pi*(0:m-1)'/(n-1)) n=0..N Example: w=wvHanning(n) returns an n-point hanning window","title":"wvHamming"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvHamming.m/#wvhamming","text":"wvHamming returns an n-point Haming window w=0.54 - 0.46*cos(2*pi*(0:m-1)'/(n-1)) n=0..N Example: w=wvHanning(n) returns an n-point hanning window","title":"wvHamming"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvOnesided.m/","text":"wvOnesided \u00b6 wvOnesided returns one-sided PSD given two-sided input Example : P = wvOnesided ( P ); where P is a cell array of two-sided PSDs","title":"wvOnesided"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvOnesided.m/#wvonesided","text":"wvOnesided returns one-sided PSD given two-sided input Example : P = wvOnesided ( P ); where P is a cell array of two-sided PSDs","title":"wvOnesided"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvPowerSpectra.m/","text":"wvPowerSpectra \u00b6 wvPowerSpectra: spectral estimates via Welch periodogram wvPowerSpectra is a gateway function for the power spectral function that may be called from the command line or from menu_ functions Exampe: result = wvPowerSpectra ( fhandle , field1 , value1 , field2 , value2 ....) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are: ' channellist ' the numbers for the channels to analyze ( scalar or vector list ) ' start ' the start time for data processing ( scalar , in seconds ) ' stop ' the stop time for data processing ( scalar , in seconds )' ' windowtype ' the window to apply to the data ( string : e . g . 'ha mming ') ' windowlength ' the length of the window and also of the data sections in seconds ( scalar ) ' overlap ' the overlap to be used between data sections as a percentage ( scalar ) ' overlapmode ' determines whether overalpping will be applied . OverlapMode may be set to ' on ', ' off ' or ' auto ' : ' auto ' : This is the default . Continuous waveform data will be processed in overlapping sections . Episodic and frame - based data will not be overlapped . ' off ' : No overlapping will be performed regardless of the setting for Overlap . ' on ' : the overlap will be applied to all channels including episodic and frame - based samples . It will rarely make sense to do this . ' detrend ' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ' spectrummode ' The type of spectrum to return as a string : ' normalized power spectral density ' ' power spectral density ' ' linear power spectral density ' ' power spectrum ' ' linear power spectrum ' ' spectrogramflag ' Not really a flag but a string . If set to ' contour ' or ' surface ' the spectrum will be returned for each data section and plotted in 3 D as a contour or surface . Otherwise , data will be averaged to produce a 2 D result . ' decimation ' decimation factor ( zero by default ). If non - zero , the data to be analyzed will be anti - alias filtered and downsampled by the factor in decimate . This can be useful with oversampled data when drawing 3 D plots as graphics rendering may otherwise to too slow Toolboxes Required: For decimation only , dfilt objects must be available e . g . via SP Toolbox ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 -------------------------------------------------------------------------","title":"wvPowerSpectra"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvPowerSpectra.m/#wvpowerspectra","text":"wvPowerSpectra: spectral estimates via Welch periodogram wvPowerSpectra is a gateway function for the power spectral function that may be called from the command line or from menu_ functions Exampe: result = wvPowerSpectra ( fhandle , field1 , value1 , field2 , value2 ....) returns a sigTOOLResultData object . If no output is requested the result will be plotted . Valid field / value pairs are: ' channellist ' the numbers for the channels to analyze ( scalar or vector list ) ' start ' the start time for data processing ( scalar , in seconds ) ' stop ' the stop time for data processing ( scalar , in seconds )' ' windowtype ' the window to apply to the data ( string : e . g . 'ha mming ') ' windowlength ' the length of the window and also of the data sections in seconds ( scalar ) ' overlap ' the overlap to be used between data sections as a percentage ( scalar ) ' overlapmode ' determines whether overalpping will be applied . OverlapMode may be set to ' on ', ' off ' or ' auto ' : ' auto ' : This is the default . Continuous waveform data will be processed in overlapping sections . Episodic and frame - based data will not be overlapped . ' off ' : No overlapping will be performed regardless of the setting for Overlap . ' on ' : the overlap will be applied to all channels including episodic and frame - based samples . It will rarely make sense to do this . ' detrend ' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ' spectrummode ' The type of spectrum to return as a string : ' normalized power spectral density ' ' power spectral density ' ' linear power spectral density ' ' power spectrum ' ' linear power spectrum ' ' spectrogramflag ' Not really a flag but a string . If set to ' contour ' or ' surface ' the spectrum will be returned for each data section and plotted in 3 D as a contour or surface . Otherwise , data will be averaged to produce a 2 D result . ' decimation ' decimation factor ( zero by default ). If non - zero , the data to be analyzed will be anti - alias filtered and downsampled by the factor in decimate . This can be useful with oversampled data when drawing 3 D plots as graphics rendering may otherwise to too slow Toolboxes Required: For decimation only , dfilt objects must be available e . g . via SP Toolbox ------------------------------------------------------------------------- Author: Malcolm Lidierth 11 / 06 Copyright \u00a9 The Author & King ' s College London 2006 -------------------------------------------------------------------------","title":"wvPowerSpectra"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvWelchSpectra.m/","text":"wvWelchSpectra \u00b6 wvWelchSpectra . Workhorse function called by spectral analysis routines . wvWelchSpectra is intended to be called from wvPowerSpectra but can be invoked directly . Examples: P = wvWelchSpectra ( fhandle , PropName1 , PropValue1 .....) P = wvWelchSpectra ( channels , PropName1 , PropValue1 .....) The output P is a N x N cell matrix where N is the number of channels . The data are contained in the diagonal of the matrix . wvWelchSpectra returns the Power Spectral Density . For continuous waveform channels , the Welch periodogram is calculated for sections of data of length WindowLength seconds . The length of data used will be truncated , if necessary , to a multiple of WindowLength . For episodic and frame - based data , only valid data epochs will be used within the timerange where channels { x }. tim ( : , 1 ) < t <= channels { x }. tim ( : , 2 ) if tim has only 2 columns or channels { x }. tim ( : , 2 ) < t <= channels { x }. tim ( : , 3 ) if it has 3 columns i . e . only post - trigger data is used if the trigger time is known . Note that , if WindowLength exceeds the length of the available data , the WindowLength for all sections will be reduced to that of the shortest ( post - trigger ) period . Valid field / value pairs are: ' channellist ' the numbers for the channels to analyze ( scalar or vector list ) ' start ' the start time for data processing ( scalar , in seconds ) ' stop ' the stop time for data processing ( scalar , in seconds )' ' windowtype ' the window to apply to the data ( string : e . g . 'ha mming ') ' windowlength ' the length of the window and also of the data sections in seconds ( scalar ) ' overlap ' the overlap to be used between data sections as a percentage ( scalar ) ' overlapmode ' determines whether overalpping will be applied . OverlapMode may be set to ' on ', ' off ' or ' auto ' : ' auto ' : This is the default . Continuous waveform data will be processed in overlapping sections . Episodic and frame - based data will not be overlapped . ' off ' : No overlapping will be performed regardless of the setting for Overlap . ' on ' : the overlap will be applied to all channels including episodic and frame - based samples . It will rarely make sense to do this . ' detrend ' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ' spectrummode ' The type of spectrum to return as a string : ' normalized power spectral density ' ' power spectral density ' ' linear power spectral density ' ' power spectrum ' ' linear power spectrum ' ' spectrogramflag ' Not really a flag but a string . If set to ' contour ' or ' surface ' the spectrum will be returned for each data section and plotted in 3 D as a contour or surface . Otherwise , data will be averaged to produce a 2 D result . ' decimation ' decimation factor ( zero by default ). If non - zero , the data to be analyzed will be anti - alias filtered and downsampled by the factor in decimate . This can be useful with oversampled data when drawing 3 D plots as graphics rendering may otherwise to too slow Toolboxes Required: For decimation only , dfilt objects must be available e . g . via SP Toolbox ------------------------------------------------------------------------- Author: Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"wvWelchSpectra"},{"location":"reference/lib/sigTOOL/program/menu_Waveform/utils/wvWelchSpectra.m/#wvwelchspectra","text":"wvWelchSpectra . Workhorse function called by spectral analysis routines . wvWelchSpectra is intended to be called from wvPowerSpectra but can be invoked directly . Examples: P = wvWelchSpectra ( fhandle , PropName1 , PropValue1 .....) P = wvWelchSpectra ( channels , PropName1 , PropValue1 .....) The output P is a N x N cell matrix where N is the number of channels . The data are contained in the diagonal of the matrix . wvWelchSpectra returns the Power Spectral Density . For continuous waveform channels , the Welch periodogram is calculated for sections of data of length WindowLength seconds . The length of data used will be truncated , if necessary , to a multiple of WindowLength . For episodic and frame - based data , only valid data epochs will be used within the timerange where channels { x }. tim ( : , 1 ) < t <= channels { x }. tim ( : , 2 ) if tim has only 2 columns or channels { x }. tim ( : , 2 ) < t <= channels { x }. tim ( : , 3 ) if it has 3 columns i . e . only post - trigger data is used if the trigger time is known . Note that , if WindowLength exceeds the length of the available data , the WindowLength for all sections will be reduced to that of the shortest ( post - trigger ) period . Valid field / value pairs are: ' channellist ' the numbers for the channels to analyze ( scalar or vector list ) ' start ' the start time for data processing ( scalar , in seconds ) ' stop ' the stop time for data processing ( scalar , in seconds )' ' windowtype ' the window to apply to the data ( string : e . g . 'ha mming ') ' windowlength ' the length of the window and also of the data sections in seconds ( scalar ) ' overlap ' the overlap to be used between data sections as a percentage ( scalar ) ' overlapmode ' determines whether overalpping will be applied . OverlapMode may be set to ' on ', ' off ' or ' auto ' : ' auto ' : This is the default . Continuous waveform data will be processed in overlapping sections . Episodic and frame - based data will not be overlapped . ' off ' : No overlapping will be performed regardless of the setting for Overlap . ' on ' : the overlap will be applied to all channels including episodic and frame - based samples . It will rarely make sense to do this . ' detrend ' Logical flag . If true , the linear trend will each data section be removed from each data section before taking its FFT ' spectrummode ' The type of spectrum to return as a string : ' normalized power spectral density ' ' power spectral density ' ' linear power spectral density ' ' power spectrum ' ' linear power spectrum ' ' spectrogramflag ' Not really a flag but a string . If set to ' contour ' or ' surface ' the spectrum will be returned for each data section and plotted in 3 D as a contour or surface . Otherwise , data will be averaged to produce a 2 D result . ' decimation ' decimation factor ( zero by default ). If non - zero , the data to be analyzed will be anti - alias filtered and downsampled by the factor in decimate . This can be useful with oversampled data when drawing 3 D plots as graphics rendering may otherwise to too slow Toolboxes Required: For decimation only , dfilt objects must be available e . g . via SP Toolbox ------------------------------------------------------------------------- Author: Malcolm Lidierth 09 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"wvWelchSpectra"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportABF.m/","text":"ImportABF \u00b6 ImportABF imports Molecular Devices ( Axon Instruments ) ABF files The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportABF ( FILENAME ) OUTPUTFILE = ImportABF ( FILENAME , TARGETPATH ) FILENAME is the path and name of the ABF file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportABF calls three mex files ABFGetADCChannel , ABFGetDACChannel and ABFGetFileInfo that in turn call the manufacturer 's DLL to load the data. ImportABF is therefore a Windows only function . Toolboxes required : None The ABF filing system is copyright Molecular Devices Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007- Acknowledgements : Revisions : 16.08 . 08 Recompile mex files with Borland C ++ for back compat to R2006a . Sledge - hammer termination of units string for Borland . 22.10 . 08 Rare memory overflows from ABFGetADCChannel fixed 09.01 . 09 Correct out - by - one sample error or pre - time calculation 20.12 . 09 Now retrieve entire ABF file header","title":"ImportABF"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportABF.m/#importabf","text":"ImportABF imports Molecular Devices ( Axon Instruments ) ABF files The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportABF ( FILENAME ) OUTPUTFILE = ImportABF ( FILENAME , TARGETPATH ) FILENAME is the path and name of the ABF file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportABF calls three mex files ABFGetADCChannel , ABFGetDACChannel and ABFGetFileInfo that in turn call the manufacturer 's DLL to load the data. ImportABF is therefore a Windows only function . Toolboxes required : None The ABF filing system is copyright Molecular Devices Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007- Acknowledgements : Revisions : 16.08 . 08 Recompile mex files with Borland C ++ for back compat to R2006a . Sledge - hammer termination of units string for Borland . 22.10 . 08 Rare memory overflows from ABFGetADCChannel fixed 09.01 . 09 Correct out - by - one sample error or pre - time calculation 20.12 . 09 Now retrieve entire ABF file header","title":"ImportABF"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportCFS.m/","text":"ImportCFS \u00b6 ImportCFS imports Cambridge Electronic Design Signal for Windows files . The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportCFS ( FILENAME ) OUTPUTFILE = ImportCFS ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Signal file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Note that the CFS file format used by Signal is versatile and CFS files written by other applications may not load fully or properly . For waveform channels , marker values correspond to the Signal FrameState setting ( first marker ) and to the DS Flags ( second marker ) . Bit 9 of the DS Flags is the Signal \"Tag\" ( set for on , cleared for off ) . Signal keyboard markers are stored with the keystroke as the marker . Toolboxes required : None The CFS filing system is copyright Cambridge Electronic Design , UK Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 Acknowledgements : Revisions : 01.10 . 08 Fixed scaling when yScale not constant","title":"ImportCFS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportCFS.m/#importcfs","text":"ImportCFS imports Cambridge Electronic Design Signal for Windows files . The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportCFS ( FILENAME ) OUTPUTFILE = ImportCFS ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Signal file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Note that the CFS file format used by Signal is versatile and CFS files written by other applications may not load fully or properly . For waveform channels , marker values correspond to the Signal FrameState setting ( first marker ) and to the DS Flags ( second marker ) . Bit 9 of the DS Flags is the Signal \"Tag\" ( set for on , cleared for off ) . Signal keyboard markers are stored with the keystroke as the marker . Toolboxes required : None The CFS filing system is copyright Cambridge Electronic Design , UK Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 Acknowledgements : Revisions : 01.10 . 08 Fixed scaling when yScale not constant","title":"ImportCFS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportHEKA.m/","text":"ImportHEKA \u00b6 ImportHEKA imports HEKA PatchMaster and ChartMaster . DAT files Example : OUTPUTFILE = ImportHEKA ( FILENAME ) OUTPUTFILE = ImportHEKA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the HEKA DAT file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportHEKA has been tested with Windows generated . DAT files on Windows , Linux and Mac OS10 .4 . Both bundled and unbundled data files are supported . If your files are unbundled , they must all be in the same folder . Notes : Timestamps from the data file are rounded to the nearest nanonsecond for sigTOOL . Waveform data are scaled to SI units of A or V in HEKA files . For sigTOOL , they are scaled to pA , pV , nA , nV ... etc as appropriate given the data range . The HEKA DAT format is versatile and not all combinations of settings may have been anticipated here . If you encounter problems importing files please report the bug and send a sample DAT file using Help -> Bug Report in the sigTOOL GUI -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- --------------------------------------------------------------------------","title":"ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportHEKA.m/#importheka","text":"ImportHEKA imports HEKA PatchMaster and ChartMaster . DAT files Example : OUTPUTFILE = ImportHEKA ( FILENAME ) OUTPUTFILE = ImportHEKA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the HEKA DAT file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportHEKA has been tested with Windows generated . DAT files on Windows , Linux and Mac OS10 .4 . Both bundled and unbundled data files are supported . If your files are unbundled , they must all be in the same folder . Notes : Timestamps from the data file are rounded to the nearest nanonsecond for sigTOOL . Waveform data are scaled to SI units of A or V in HEKA files . For sigTOOL , they are scaled to pA , pV , nA , nV ... etc as appropriate given the data range . The HEKA DAT format is versatile and not all combinations of settings may have been anticipated here . If you encounter problems importing files please report the bug and send a sample DAT file using Help -> Bug Report in the sigTOOL GUI -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- --------------------------------------------------------------------------","title":"ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportNS.m/","text":"ImportNS \u00b6 ImportNS uses the NeuroShare library to import a data file under Windows ImportNS is called to load various proprietary file formats where the manufacturers have provided a NeuroShare compliant DLL . Communication with the file occurs via Neuroshare mexprog . dll ImportNS should not be called direcly but via one of the format specific import routines . ImportNS assumes that the appropriate NeuroShare dll has already been selected by a previous call to ns_SetLibrary and that the NeuroShare mexprog . dll ( or mexprog . mexw32 ) is available . Example : MATFILENAME = ImportNS ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Spike2 file to import . The sigTOOL ( *. kcl ) file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME. Toolboxes required : None Acknowledgements : This routine calls the NeuroShare mexprog . dll and associated m - files to communicate with the various manufacturer specific NeuroShare DLLs Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 Revisions : 25.09.09 Explicit double precision for hdr . adc . YLim ( needed for low values of adcscale ) 05.11.09 See within Change to nanoseconds for sample interval 17.11.09 Change to calculation of imp . tim (:, 2 )","title":"ImportNS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportNS.m/#importns","text":"ImportNS uses the NeuroShare library to import a data file under Windows ImportNS is called to load various proprietary file formats where the manufacturers have provided a NeuroShare compliant DLL . Communication with the file occurs via Neuroshare mexprog . dll ImportNS should not be called direcly but via one of the format specific import routines . ImportNS assumes that the appropriate NeuroShare dll has already been selected by a previous call to ns_SetLibrary and that the NeuroShare mexprog . dll ( or mexprog . mexw32 ) is available . Example : MATFILENAME = ImportNS ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Spike2 file to import . The sigTOOL ( *. kcl ) file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME. Toolboxes required : None Acknowledgements : This routine calls the NeuroShare mexprog . dll and associated m - files to communicate with the various manufacturer specific NeuroShare DLLs Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006-2007 Revisions : 25.09.09 Explicit double precision for hdr . adc . YLim ( needed for low values of adcscale ) 05.11.09 See within Change to nanoseconds for sample interval 17.11.09 Change to calculation of imp . tim (:, 2 )","title":"ImportNS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportSMR.m/","text":"ImportSMR \u00b6 ImportSMR imports Cambridge Electronic Design Spike2 files to sigTOOL . The file created has the ' kcl ' extension but is a version 6 MATLAB MAT - file Example : OUTPUTFILE = ImportSMR ( FILENAME ) OUTPUTFILE = ImportSMR ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Spike2 file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportSMR requires the MATLAB SON library version 2 . 4 or higher . Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King ' s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"ImportSMR"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportSMR.m/#importsmr","text":"ImportSMR imports Cambridge Electronic Design Spike2 files to sigTOOL . The file created has the ' kcl ' extension but is a version 6 MATLAB MAT - file Example : OUTPUTFILE = ImportSMR ( FILENAME ) OUTPUTFILE = ImportSMR ( FILENAME , TARGETPATH ) FILENAME is the path and name of the Spike2 file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportSMR requires the MATLAB SON library version 2 . 4 or higher . Toolboxes required : None ------------------------------------------------------------------------- Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King ' s College London 2006-2007 ------------------------------------------------------------------------- Acknowledgements : Revisions :","title":"ImportSMR"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportSTA.m/","text":"ImportSTA \u00b6 ImportSTA imports ..... FIRST VERSION : Subject to change Example : OUTPUTFILE = ImportSTA ( FILENAME ) OUTPUTFILE = ImportSTA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the STAM file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Toolboxes required : None Author : Malcolm Lidierth 05 / 09 Copyright \u00a9 The Author & King ' s College London 2009-","title":"ImportSTA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ImportSTA.m/#importsta","text":"ImportSTA imports ..... FIRST VERSION : Subject to change Example : OUTPUTFILE = ImportSTA ( FILENAME ) OUTPUTFILE = ImportSTA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the STAM file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Toolboxes required : None Author : Malcolm Lidierth 05 / 09 Copyright \u00a9 The Author & King ' s College London 2009-","title":"ImportSTA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/SelectDAT.m/","text":"SelectDAT \u00b6 SelectDAT is a function. matfilename = ImportDAT(filename, targetpath)","title":"SelectDAT"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/SelectDAT.m/#selectdat","text":"SelectDAT is a function. matfilename = ImportDAT(filename, targetpath)","title":"SelectDAT"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportABF.m/","text":"menu_ImportABF \u00b6 menu_ImportABF provides the sigTOOL menu gateway to the ImportABF function Examples : [ flag , menulabel , credits ] = menu_ImportABF ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a Molecular Devices ABF file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportABF"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportABF.m/#menu_importabf","text":"menu_ImportABF provides the sigTOOL menu gateway to the ImportABF function Examples : [ flag , menulabel , credits ] = menu_ImportABF ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a Molecular Devices ABF file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportABF"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportCEDCFS.m/","text":"menu_ImportCEDCFS \u00b6 menu_ImportCEDCFS provides the sigTOOL menu gateway to the ImportCFS function Examples : [ flag , menulabel , credits ] = menu_ImportCFS ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportCEDCFS () prompts the user to select a CED Signal for Windows CFS file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportCEDCFS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportCEDCFS.m/#menu_importcedcfs","text":"menu_ImportCEDCFS provides the sigTOOL menu gateway to the ImportCFS function Examples : [ flag , menulabel , credits ] = menu_ImportCFS ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportCEDCFS () prompts the user to select a CED Signal for Windows CFS file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportCEDCFS"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportCEDSMR.m/","text":"menu_ImportCEDSMR \u00b6 menu_ImportCEDSMR provides the sigTOOL menu gateway to the ImportSMR function Examples : [ flag , menulabel , credits ] = menu_ImportSMR ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportSMR () prompts the user to select a CED Spike2 for Windows SMR file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006- Acknowledgements : Revisions :","title":"menu_ImportCEDSMR"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportCEDSMR.m/#menu_importcedsmr","text":"menu_ImportCEDSMR provides the sigTOOL menu gateway to the ImportSMR function Examples : [ flag , menulabel , credits ] = menu_ImportSMR ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportSMR () prompts the user to select a CED Spike2 for Windows SMR file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006- Acknowledgements : Revisions :","title":"menu_ImportCEDSMR"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportHEKA.m/","text":"menu_ImportHEKA \u00b6 menu_ImportHEKA provides the sigTOOL menu gateway to the ImportHEKA function Examples : [ flag , menulabel , credits ] = menu_ImportHEKA ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportHEKA () prompts the user to select a HEKA DAT file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportHEKA.m/#menu_importheka","text":"menu_ImportHEKA provides the sigTOOL menu gateway to the ImportHEKA function Examples : [ flag , menulabel , credits ] = menu_ImportHEKA ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportHEKA () prompts the user to select a HEKA DAT file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportMAP.m/","text":"menu_ImportMAP \u00b6 MENU_IMPORTSMR gateway to the NeuroShare data loader for PLX files This requires nsPlxLibrary . dll from Plexon Instruments and works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportMAP"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportMAP.m/#menu_importmap","text":"MENU_IMPORTSMR gateway to the NeuroShare data loader for PLX files This requires nsPlxLibrary . dll from Plexon Instruments and works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportMAP"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportMCD.m/","text":"menu_ImportMCD \u00b6 menu_ImportMCD gateway to the Multi Channel Systems data loader for MCD files This requires nsMCDLibrary shared library from Multi Channel Systems Toolboxes required : None Author : Malcolm Lidierth 09 / 09 Copyright \ufffd The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportMCD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportMCD.m/#menu_importmcd","text":"menu_ImportMCD gateway to the Multi Channel Systems data loader for MCD files This requires nsMCDLibrary shared library from Multi Channel Systems Toolboxes required : None Author : Malcolm Lidierth 09 / 09 Copyright \ufffd The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportMCD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNEV.m/","text":"menu_ImportNEV \u00b6 menu_ImportNEV gateway to the NeuroShare data loader for NEV files This requires nsNEVLibrary . dll from CyberKinetics Inc Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportNEV"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNEV.m/#menu_importnev","text":"menu_ImportNEV gateway to the NeuroShare data loader for NEV files This requires nsNEVLibrary . dll from CyberKinetics Inc Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportNEV"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNEX.m/","text":"menu_ImportNEX \u00b6 menu_ImportMEX gateway to the NeuroShare data loader for NEX files This requires NeuroExplorerNeuroShareLibrary . dll from Nex Technologies works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportNEX"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNEX.m/#menu_importnex","text":"menu_ImportMEX gateway to the NeuroShare data loader for NEX files This requires NeuroExplorerNeuroShareLibrary . dll from Nex Technologies works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportNEX"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNSN.m/","text":"menu_ImportNSN \u00b6 menu_ImportNSN gateway to the Neuroshare native importer This requires nsNSNLibrary shared library Toolboxes required: None Author: Malcolm Lidierth 09/09 Copyright \u00a9 The Author & King's College London 2009- Acknowledgements: Revisions:","title":"menu_ImportNSN"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportNSN.m/#menu_importnsn","text":"menu_ImportNSN gateway to the Neuroshare native importer This requires nsNSNLibrary shared library Toolboxes required: None Author: Malcolm Lidierth 09/09 Copyright \u00a9 The Author & King's College London 2009- Acknowledgements: Revisions:","title":"menu_ImportNSN"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportPLX.m/","text":"menu_ImportPLX \u00b6 menu_ImportPLX gateway to the NeuroShare data loader for PLX files This requires nsPlxLibrary . dll from Plexon Instruments and works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions : 13.02 . 2011 Add 64 bit support","title":"menu_ImportPLX"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportPLX.m/#menu_importplx","text":"menu_ImportPLX gateway to the NeuroShare data loader for PLX files This requires nsPlxLibrary . dll from Plexon Instruments and works on Windows platforms only Toolboxes required : None Author : Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions : 13.02 . 2011 Add 64 bit support","title":"menu_ImportPLX"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportSSD.m/","text":"menu_ImportSSD \u00b6 menu_ImportSSD provides the sigTOOL menu gateway to the ImportSSD function Examples : [ flag , menulabel , credits ] = menu_ImportSSD ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a CED Signal for Windows CFS file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportSSD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportSSD.m/#menu_importssd","text":"menu_ImportSSD provides the sigTOOL menu gateway to the ImportSSD function Examples : [ flag , menulabel , credits ] = menu_ImportSSD ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a CED Signal for Windows CFS file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King 's College London 2006 Acknowledgements : Revisions :","title":"menu_ImportSSD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportSTA.m/","text":"menu_ImportSTA \u00b6 menu_ImportSTA provides the sigTOOL menu gateway to the ImportSTA function Examples : [ flag , menulabel , credits ] = menu_ImportSTA ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a CED file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Requires the presence of the Weill Spike Train Analysis Toolkit See http : // neuroanalysis . org / toolkit / Author : Malcolm Lidierth 08 / 09 Copyright \u00a9 The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportSTA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/menu_ImportSTA.m/#menu_importsta","text":"menu_ImportSTA provides the sigTOOL menu gateway to the ImportSTA function Examples : [ flag , menulabel , credits ] = menu_ImportSTA ( 0 ) returns the standard sigTOOL menuitem output as used by dir2menu targetfile = menuIImportABF () prompts the user to select a CED file , loads it into a standard sigTOOL kcl file and imports it into the sigTOOL environment . The kcl file 's name is returned in targetfile. See also dir2menu Toolboxes required : None Requires the presence of the Weill Spike Train Analysis Toolkit See http : // neuroanalysis . org / toolkit / Author : Malcolm Lidierth 08 / 09 Copyright \u00a9 The Author & King 's College London 2009- Acknowledgements : Revisions :","title":"menu_ImportSTA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSCloseCFSFile.m/","text":"CFSCloseCFSFile \u00b6 CFSCloseCFSFile closes a cfs file Example: ret=CFSCloseCFSFile(fid) where fid is the file handle The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSCloseCFSFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSCloseCFSFile.m/#cfsclosecfsfile","text":"CFSCloseCFSFile closes a cfs file Example: ret=CFSCloseCFSFile(fid) where fid is the file handle The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSCloseCFSFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSCreateBuffer.m/","text":"CFSCreateBuffer \u00b6 CFSCreateBuffer creates a MATLAB buffer with a class appropriate to the CFS varType Example: buf=CFSCreateBuffer(points , varType) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSCreateBuffer"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSCreateBuffer.m/#cfscreatebuffer","text":"CFSCreateBuffer creates a MATLAB buffer with a class appropriate to the CFS varType Example: buf=CFSCreateBuffer(points , varType) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSCreateBuffer"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSFindClass.m/","text":"CFSFindClass \u00b6 CFSFindClass returns a MATLAB class corresponding to a CFS class The CFS classes are defined in the header files for cfs32 . dll Example vclass = CFSFindClass ( varType ) vclass is a string varType is an integer The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details ( www . ced . co . uk ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 -------------------------------------------------------------------------","title":"CFSFindClass"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSFindClass.m/#cfsfindclass","text":"CFSFindClass returns a MATLAB class corresponding to a CFS class The CFS classes are defined in the header files for cfs32 . dll Example vclass = CFSFindClass ( varType ) vclass is a string varType is an integer The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details ( www . ced . co . uk ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King 's College London 2007 -------------------------------------------------------------------------","title":"CFSFindClass"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetChanData.m/","text":"CFSGetChanData \u00b6 CFSGetChanData - gateway to cfs32 . dll GetChanData function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 ------------------------------------------------------------------------- Revisions: 03 . 12 . 10 Accommodate data arrays > 65535 elements","title":"CFSGetChanData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetChanData.m/#cfsgetchandata","text":"CFSGetChanData - gateway to cfs32 . dll GetChanData function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 ------------------------------------------------------------------------- Revisions: 03 . 12 . 10 Accommodate data arrays > 65535 elements","title":"CFSGetChanData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSChan.m/","text":"CFSGetDSChan \u00b6 CFSGetDSChan - gateway to cfs32 . dll CFSGetDSChan function Example: [ chOffset , points , yScale , yOffset , xScale , xOffset ] = ... CFSGetDSChan(fid , chan , DS) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSChan.m/#cfsgetdschan","text":"CFSGetDSChan - gateway to cfs32 . dll CFSGetDSChan function Example: [ chOffset , points , yScale , yOffset , xScale , xOffset ] = ... CFSGetDSChan(fid , chan , DS) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSFlagValue.m/","text":"CFSGetDSFlagValue \u00b6 CFSGetDSFlagValue returns the DS flag values form a cfs file Example: val=CFSGetDSFlagValue(number) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSFlagValue"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSFlagValue.m/#cfsgetdsflagvalue","text":"CFSGetDSFlagValue returns the DS flag values form a cfs file Example: val=CFSGetDSFlagValue(number) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSFlagValue"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSFlags.m/","text":"CFSGetDSFlags \u00b6 CFSGetDSFlags returns the DS flags form a cfs file Example: val=CFSGetDSFlags(fid , DS) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSFlags"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetDSFlags.m/#cfsgetdsflags","text":"CFSGetDSFlags returns the DS flags form a cfs file Example: val=CFSGetDSFlags(fid , DS) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetDSFlags"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetFileChan.m/","text":"CFSGetFileChan \u00b6 CFSGetFileChan - gateway to cfs32 . dll GetFileChan function Example: [ chanName , yUnits , xUnits , dataType , dataKind , spacing , other ] = ... CFSGetFileChan(fid , chan) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetFileChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetFileChan.m/#cfsgetfilechan","text":"CFSGetFileChan - gateway to cfs32 . dll GetFileChan function Example: [ chanName , yUnits , xUnits , dataType , dataKind , spacing , other ] = ... CFSGetFileChan(fid , chan) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetFileChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetFileInfo.m/","text":"CFSGetFileInfo \u00b6 CFSGetFileInfo - gateway to cfs32 . dll GetFileIfo function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetFileInfo.m/#cfsgetfileinfo","text":"CFSGetFileInfo - gateway to cfs32 . dll GetFileIfo function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetGenInfo.m/","text":"CFSGetGenInfo \u00b6 CFSGetGenInfo - gateway to cfs32 . dll GetGenIfo function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetGenInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetGenInfo.m/#cfsgetgeninfo","text":"CFSGetGenInfo - gateway to cfs32 . dll GetGenIfo function The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetGenInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetVarDesc.m/","text":"CFSGetVarDesc \u00b6 CFSGetVarDesc returns a varaivble description from a cfs file Example: [ varSize , varType , units , about ] =CFSGetVarDesc(fid , n , flag) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetVarDesc"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetVarDesc.m/#cfsgetvardesc","text":"CFSGetVarDesc returns a varaivble description from a cfs file Example: [ varSize , varType , units , about ] =CFSGetVarDesc(fid , n , flag) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetVarDesc"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetVarVal.m/","text":"CFSGetVarVal \u00b6 CFSGetVarVal - gateway to cfs32 . dll GetVarVal function Example: value=CFSGetVarVal(fid , varNo , flag , DS) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetVarVal"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSGetVarVal.m/#cfsgetvarval","text":"CFSGetVarVal - gateway to cfs32 . dll GetVarVal function Example: value=CFSGetVarVal(fid , varNo , flag , DS) The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSGetVarVal"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSOpenCFSFile.m/","text":"CFSOpenCFSFile \u00b6 CFSOpenCFSFile opens a cfs file and returns the handle Example: fid=CFSOpenCFSFile(filename) where fid is the file handle The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSOpenCFSFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/CFSOpenCFSFile.m/#cfsopencfsfile","text":"CFSOpenCFSFile opens a cfs file and returns the handle Example: fid=CFSOpenCFSFile(filename) where fid is the file handle The CFS filing system is copyright Cambridge Electonic Design . See the Cambridge Electonic Design CFS manual for further details (www . ced . co . uk) ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/07 Copyright \u00a9 The Author & King's College London 2007 -------------------------------------------------------------------------","title":"CFSOpenCFSFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/GetFrameInfo.m/","text":"GetFrameInfo \u00b6 GetFrameInfo - returns the frame start time , frame state and DS Flags Values are read via the CED cfs32 . dll Windows application extension Example : [ Start markers ] = GetFrameInfo ( fid , DS , nDSVars ) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details ( www . ced . co . uk ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"GetFrameInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/GetFrameInfo.m/#getframeinfo","text":"GetFrameInfo - returns the frame start time , frame state and DS Flags Values are read via the CED cfs32 . dll Windows application extension Example : [ Start markers ] = GetFrameInfo ( fid , DS , nDSVars ) The CFS filing system is copyright Cambridge Electronic Design . See the Cambridge Electonic Design CFS manual for further details ( www . ced . co . uk ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 07 Copyright \u00a9 The Author & King ' s College London 2007 -------------------------------------------------------------------------","title":"GetFrameInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/cfs.m/","text":"cfs \u00b6 CFS Create structures to define interfaces found in 'cfs'.","title":"cfs"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/cfs.m/#cfs","text":"CFS Create structures to define interfaces found in 'cfs'.","title":"cfs"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/private/sizeof.m/","text":"sizeof \u00b6 SIZEOF returns the size in bytes of the class Example: BYTES=SIZEOF('CLASSNAME') Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King\u0092s College London 2006 Revisions:","title":"sizeof"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/CFS/private/sizeof.m/#sizeof","text":"SIZEOF returns the size in bytes of the class Example: BYTES=SIZEOF('CLASSNAME') Author: Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King\u0092s College London 2006 Revisions:","title":"sizeof"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/HEKA/ImportHEKA.m/","text":"ImportHEKA \u00b6 ImportHEKA imports HEKA PatchMaster and ChartMaster . DAT files Example : OUTPUTFILE = ImportHEKA ( FILENAME ) OUTPUTFILE = ImportHEKA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the HEKA DAT file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportHEKA has been tested with Windows generated . DAT files on Windows , Linux and Mac OS10 .4 . Both bundled and unbundled data files are supported . If your files are unbundled , they must all be in the same folder . Notes : Timestamps from the data file are rounded to the nearest nanonsecond for sigTOOL . Waveform data are scaled to SI units of A or V in HEKA files . For sigTOOL , they are scaled to pA , pV , nA , nV ... etc as appropriate given the data range . The HEKA DAT format is versatile and not all combinations of settings may have been anticipated here . If you encounter problems importing files please report the bug and send a sample DAT file using Help -> Bug Report in the sigTOOL GUI -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- --------------------------------------------------------------------------","title":"ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/HEKA/ImportHEKA.m/#importheka","text":"ImportHEKA imports HEKA PatchMaster and ChartMaster . DAT files Example : OUTPUTFILE = ImportHEKA ( FILENAME ) OUTPUTFILE = ImportHEKA ( FILENAME , TARGETPATH ) FILENAME is the path and name of the HEKA DAT file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . ImportHEKA has been tested with Windows generated . DAT files on Windows , Linux and Mac OS10 .4 . Both bundled and unbundled data files are supported . If your files are unbundled , they must all be in the same folder . Notes : Timestamps from the data file are rounded to the nearest nanonsecond for sigTOOL . Waveform data are scaled to SI units of A or V in HEKA files . For sigTOOL , they are scaled to pA , pV , nA , nV ... etc as appropriate given the data range . The HEKA DAT format is versatile and not all combinations of settings may have been anticipated here . If you encounter problems importing files please report the bug and send a sample DAT file using Help -> Bug Report in the sigTOOL GUI -------------------------------------------------------------------------- Author : Malcolm Lidierth 12 / 09 Copyright \u00a9 The Author & King 's College London 2009- --------------------------------------------------------------------------","title":"ImportHEKA"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/Example.m/","text":"Example \u00b6 Prompt for the correct DLL","title":"Example"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/Example.m/#example","text":"Prompt for the correct DLL","title":"Example"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ExampleAnalog.m/","text":"ExampleAnalog \u00b6 function OutputAnalogVector = ExampleAnalog ()","title":"ExampleAnalog"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ExampleAnalog.m/#exampleanalog","text":"function OutputAnalogVector = ExampleAnalog ()","title":"ExampleAnalog"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/compileNeuroShare.m/","text":"compileNeuroShare \u00b6 This will generate the Neuroshare mexprog library ( application extension ) for the Neuroshare / MATLAB interface . The file extension will be platform / MATLAB version specific There should be no need to run this on Windows ( not too sure about Linux ) Requires main . c , mexversion . c and ns . c and associated . h file to complete . For authorship of this API see these files or visit www . neuroshare . org . Malcolm Lidierth 03 / 08","title":"compileNeuroShare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/compileNeuroShare.m/#compileneuroshare","text":"This will generate the Neuroshare mexprog library ( application extension ) for the Neuroshare / MATLAB interface . The file extension will be platform / MATLAB version specific There should be no need to run this on Windows ( not too sure about Linux ) Requires main . c , mexversion . c and ns . c and associated . h file to complete . For authorship of this API see these files or visit www . neuroshare . org . Malcolm Lidierth 03 / 08","title":"compileNeuroShare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_CloseFile.m/","text":"ns_CloseFile \u00b6 ns_CloseFile Closes a neural data file Usage : ns_RESULT = ns_CloseFile ( hFile ) Description : Closes a previously opened file specified by the file handle hFile . Parameters : hFile Handle / Indentification number to an open file . Return Values : ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 4 / 2003","title":"ns_CloseFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_CloseFile.m/#ns_closefile","text":"ns_CloseFile Closes a neural data file Usage : ns_RESULT = ns_CloseFile ( hFile ) Description : Closes a previously opened file specified by the file handle hFile . Parameters : hFile Handle / Indentification number to an open file . Return Values : ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 4 / 2003","title":"ns_CloseFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetAnalogData.m/","text":"ns_GetAnalogData \u00b6 ns_GetAnalogData Retrieves analog data by index Usage : [ ns_RESULT , ContCount , Data ] = ns_GetAnalogData ( hFile , EntityID , StartIndex , IndexCount ) Description : Returns the data values associated with the Analog Entity indexed EntityID in the file referenced by hFile . The index of the first data value is StartIndex and the requested number of data samples is given by IndexCount . The requested data values are returned in the variable Data . Although the samples in an analog entity are indexed , they are not guaranteed to be continuous in time and may contain gaps between some of the indexes . When the requested data is returned , ContCount contains the number of continuous data points present in the data ( starting at StartIndex ) . If the index range specified by StartIndex and IndexCount contains invalid indexes , the function will return ns_BADINDEX . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the Analog Entity in the data file . StartIndex Starting index number of the analog data item . IndexCount Number of analog values to retrieve . Return Values : ContCount Number of continuous data values starting with StartIndex . This field is ignored if the pointer is set to NULL . Data Array of double precision values to receive the analog data . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index or range specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetAnalogData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetAnalogData.m/#ns_getanalogdata","text":"ns_GetAnalogData Retrieves analog data by index Usage : [ ns_RESULT , ContCount , Data ] = ns_GetAnalogData ( hFile , EntityID , StartIndex , IndexCount ) Description : Returns the data values associated with the Analog Entity indexed EntityID in the file referenced by hFile . The index of the first data value is StartIndex and the requested number of data samples is given by IndexCount . The requested data values are returned in the variable Data . Although the samples in an analog entity are indexed , they are not guaranteed to be continuous in time and may contain gaps between some of the indexes . When the requested data is returned , ContCount contains the number of continuous data points present in the data ( starting at StartIndex ) . If the index range specified by StartIndex and IndexCount contains invalid indexes , the function will return ns_BADINDEX . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the Analog Entity in the data file . StartIndex Starting index number of the analog data item . IndexCount Number of analog values to retrieve . Return Values : ContCount Number of continuous data values starting with StartIndex . This field is ignored if the pointer is set to NULL . Data Array of double precision values to receive the analog data . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index or range specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetAnalogData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetAnalogInfo.m/","text":"ns_GetAnalogInfo \u00b6 ns_GetAnalogInfo Retrieves information specific to analog entities Usage : [ ns_RESULT , nsAnalogInfo ] = ns_GetAnalogInfo ( hFile , EntityID ) Description : Returns information about the Analog Entity associated with EntityID and the file hFile . The information is stored in nsAnalogInfo structure . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsAnalogInfo ns_ANALOGINFO structure to receive the Analog Entity information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetAnalogInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetAnalogInfo.m/#ns_getanaloginfo","text":"ns_GetAnalogInfo Retrieves information specific to analog entities Usage : [ ns_RESULT , nsAnalogInfo ] = ns_GetAnalogInfo ( hFile , EntityID ) Description : Returns information about the Analog Entity associated with EntityID and the file hFile . The information is stored in nsAnalogInfo structure . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsAnalogInfo ns_ANALOGINFO structure to receive the Analog Entity information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetAnalogInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEntityInfo.m/","text":"ns_GetEntityInfo \u00b6 ns_GetEntityInfo Retrieves general entity information and type Usage : [ ns_RESULT , nsEntityInfo ] = ns_GetEntityInfo ( hFile , EntityID ) Description : Retrieves general information about the entity , EntityID , from the file referenced by the file handle hFile . The information is passed in the structure nsEntityInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . The total number of entities in the data file is provided by the member EntityCount in the ns_FILEINFO structure . Return Values : nsEntityInfo ns_ENTITYINFO structure to receive entity information ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetEntityInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEntityInfo.m/#ns_getentityinfo","text":"ns_GetEntityInfo Retrieves general entity information and type Usage : [ ns_RESULT , nsEntityInfo ] = ns_GetEntityInfo ( hFile , EntityID ) Description : Retrieves general information about the entity , EntityID , from the file referenced by the file handle hFile . The information is passed in the structure nsEntityInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . The total number of entities in the data file is provided by the member EntityCount in the ns_FILEINFO structure . Return Values : nsEntityInfo ns_ENTITYINFO structure to receive entity information ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetEntityInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEventData.m/","text":"ns_GetEventData \u00b6 ns_GetEventData Retrieves event data by index Usage : [ ns_RESULT , TimeStamp , Data , DataSize ] = ns_GetEventData ( hFile , EntityID , Index ) Description : Returns the data values from the file referenced by hFile and the Event Entity EntityID . The Event data entry specified by Index is written to Data and the timestamp of the entry is returned to TimeStamp . Upon return of the function , the value at DataSize contains the number of bytes actually written to Data . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index The index number of the requested Event data item . Return Values : TimeStamp Variable that receives the timestamp of the Event data item . Data Variable that receives the data for the Event entry . The format of Event data is specified by the member EventType in ns_EVENTINFO . DataSize Variable that receives the actual number of bytes of data retrieved in the data buffer . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetEventData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEventData.m/#ns_geteventdata","text":"ns_GetEventData Retrieves event data by index Usage : [ ns_RESULT , TimeStamp , Data , DataSize ] = ns_GetEventData ( hFile , EntityID , Index ) Description : Returns the data values from the file referenced by hFile and the Event Entity EntityID . The Event data entry specified by Index is written to Data and the timestamp of the entry is returned to TimeStamp . Upon return of the function , the value at DataSize contains the number of bytes actually written to Data . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index The index number of the requested Event data item . Return Values : TimeStamp Variable that receives the timestamp of the Event data item . Data Variable that receives the data for the Event entry . The format of Event data is specified by the member EventType in ns_EVENTINFO . DataSize Variable that receives the actual number of bytes of data retrieved in the data buffer . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetEventData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEventInfo.m/","text":"ns_GetEventInfo \u00b6 ns_GetEventInfo Retrieves information specific to event entities Usage : [ ns_RESULT , nsEventInfo ] = ns_GetEventInfo ( hFile , EntityID ) Description : Retrieves information from the file referenced by hFile about the Event Entity , EntityID , in the structure nsEventInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsEventInfo ns_EVENTINFO structure to receive the Event Entity information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetEventInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetEventInfo.m/#ns_geteventinfo","text":"ns_GetEventInfo Retrieves information specific to event entities Usage : [ ns_RESULT , nsEventInfo ] = ns_GetEventInfo ( hFile , EntityID ) Description : Retrieves information from the file referenced by hFile about the Event Entity , EntityID , in the structure nsEventInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsEventInfo ns_EVENTINFO structure to receive the Event Entity information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetEventInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetFileInfo.m/","text":"ns_GetFileInfo \u00b6 ns_GetFileInfo Retrieves file information and entity counts Usage : [ ns_RESULT , nsFileInfo ] = ns_GetFileInfo ( hFile ) Description : Provides general information about the data file referenced by hFile . This information is returned in the structure nsFileInfo . Parameters : hFile Handle / Indentification number to an open file . Return Values : nsFileInfo ns_FILEINFO structure that receives the file information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_FILEERROR File access or read error ns_BADFILE Invalid file handle passed to function Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 4 / 2003","title":"ns_GetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetFileInfo.m/#ns_getfileinfo","text":"ns_GetFileInfo Retrieves file information and entity counts Usage : [ ns_RESULT , nsFileInfo ] = ns_GetFileInfo ( hFile ) Description : Provides general information about the data file referenced by hFile . This information is returned in the structure nsFileInfo . Parameters : hFile Handle / Indentification number to an open file . Return Values : nsFileInfo ns_FILEINFO structure that receives the file information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_FILEERROR File access or read error ns_BADFILE Invalid file handle passed to function Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 4 / 2003","title":"ns_GetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetIndexByTime.m/","text":"ns_GetIndexByTime \u00b6 ns_GetIndexByTime Retrieves an entity index by time Usage : [ ns_RESULT , Index ] = ns_GetIndexByTime ( hFile , EntityID , Time , Flag ) Description : Searches in the file referenced by hFile for the data item identified by the index EntityID . The flag specifies whether to locate the data item that starts before or after the time Time . The index of the requested data item is returned in Index . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Time Time of the data to search for Flag Flag specifying whether the index to be retrieved belongs to the data item occurring before or after the specified time Time . The flags are defined : # define ns_BEFORE - 1 // return the data entry occuring // before and inclusive of the time // dTime . # define ns_CLOSEST 0 // return the data entry occuring // at or closest to the time dTime # define ns_AFTER + 1 // return the data entry occuring // after and inclusive of the time // dTime . Return Values : Index Variable to receive the entry index . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error ns_BADINDEX Unable to find an valid index given the search parameters Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetIndexByTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetIndexByTime.m/#ns_getindexbytime","text":"ns_GetIndexByTime Retrieves an entity index by time Usage : [ ns_RESULT , Index ] = ns_GetIndexByTime ( hFile , EntityID , Time , Flag ) Description : Searches in the file referenced by hFile for the data item identified by the index EntityID . The flag specifies whether to locate the data item that starts before or after the time Time . The index of the requested data item is returned in Index . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Time Time of the data to search for Flag Flag specifying whether the index to be retrieved belongs to the data item occurring before or after the specified time Time . The flags are defined : # define ns_BEFORE - 1 // return the data entry occuring // before and inclusive of the time // dTime . # define ns_CLOSEST 0 // return the data entry occuring // at or closest to the time dTime # define ns_AFTER + 1 // return the data entry occuring // after and inclusive of the time // dTime . Return Values : Index Variable to receive the entry index . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error ns_BADINDEX Unable to find an valid index given the search parameters Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetIndexByTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetLastErrorMsg.m/","text":"ns_GetLastErrorMsg \u00b6 ns_GetLastErrorMsg Retrieves the extended error message for the last error Usage : [ ns_RESULT , LastError ] = ns_GetLastErrorMsg Description : Returns the last error message in text form to LastError . This function should be called immediately following a function whose return value indicates that an error occurred . The maximum size of the error message text is 256 characters . Return Values : LastError Variable to receive the extended last error message . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_LIBERROR Library error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 21 / 2003","title":"ns_GetLastErrorMsg"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetLastErrorMsg.m/#ns_getlasterrormsg","text":"ns_GetLastErrorMsg Retrieves the extended error message for the last error Usage : [ ns_RESULT , LastError ] = ns_GetLastErrorMsg Description : Returns the last error message in text form to LastError . This function should be called immediately following a function whose return value indicates that an error occurred . The maximum size of the error message text is 256 characters . Return Values : LastError Variable to receive the extended last error message . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_LIBERROR Library error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 2 / 21 / 2003","title":"ns_GetLastErrorMsg"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetLibraryInfo.m/","text":"ns_GetLibraryInfo \u00b6 ns_GetLibraryInfo Get library version information Usage : [ ns_RESULT , nsLibraryInfo ] = ns_GetLibraryInfo () Description : Obtains information about the API library . Return Values : nsLibraryInfo Structure to receive library version information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_LIBERROR Library Error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetLibraryInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetLibraryInfo.m/#ns_getlibraryinfo","text":"ns_GetLibraryInfo Get library version information Usage : [ ns_RESULT , nsLibraryInfo ] = ns_GetLibraryInfo () Description : Obtains information about the API library . Return Values : nsLibraryInfo Structure to receive library version information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_LIBERROR Library Error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetLibraryInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetNeuralData.m/","text":"ns_GetNeuralData \u00b6 ns_GetNeuralData Retrieves neural event data by index Usage : [ ns_RESULT , Data ] = ns_GetNeuralData ( hFile , EntityID , StartIndex , IndexCount ) Description : Returns an array of timestamps for the neural events of the entity specified by EntityID and referenced by the file handle hFile . The index of the first timestamp is StartIndex and the requested number of timestamps is given by IndexCount . The timestamps are returned in Data . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . StartIndex First index number of the requested Neural Events timestamp . IndexCount Number of timestamps to retrieve . Return Values : Data Array of double precision timestamps . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetNeuralData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetNeuralData.m/#ns_getneuraldata","text":"ns_GetNeuralData Retrieves neural event data by index Usage : [ ns_RESULT , Data ] = ns_GetNeuralData ( hFile , EntityID , StartIndex , IndexCount ) Description : Returns an array of timestamps for the neural events of the entity specified by EntityID and referenced by the file handle hFile . The index of the first timestamp is StartIndex and the requested number of timestamps is given by IndexCount . The timestamps are returned in Data . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . StartIndex First index number of the requested Neural Events timestamp . IndexCount Number of timestamps to retrieve . Return Values : Data Array of double precision timestamps . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 8 / 11 / 2003","title":"ns_GetNeuralData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetNeuralInfo.m/","text":"ns_GetNeuralInfo \u00b6 ns_GetNeuralInfo Retrieves information for neural event entities Usage : [ ns_RESULT , nsNeuralInfo ] = ns_GetNeuralInfo ( hFile , EntityID ) Description : Retrieves information on Neural Event entity EntityID from the file referenced by hFile . The information is returned in the nsNeuralInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsNeuralInfo ns_NEURALINFO structure to receive the Neural Event information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 10 / 24 / 2003","title":"ns_GetNeuralInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetNeuralInfo.m/#ns_getneuralinfo","text":"ns_GetNeuralInfo Retrieves information for neural event entities Usage : [ ns_RESULT , nsNeuralInfo ] = ns_GetNeuralInfo ( hFile , EntityID ) Description : Retrieves information on Neural Event entity EntityID from the file referenced by hFile . The information is returned in the nsNeuralInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsNeuralInfo ns_NEURALINFO structure to receive the Neural Event information . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 10 / 24 / 2003","title":"ns_GetNeuralInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentData.m/","text":"ns_GetSegmentData \u00b6 ns_GetSegmentData Retrieves segment data by index Usage : [ ns_RESULT , TimeStamp , Data , SampleCount , UnitID ] = ns_GetSegmentData ( hFile , EntityID , Index ) Description : Returns the Segment data values in entry Index of the entity EntityID from the file referenced by hFile . The data values are returned in Data . The timestamp of the entry id returned in TimeStamp . The number of samples written to Data is returned in SampleCount . The data variable should be accessed as a 2 - dimensional array for samples and sources . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index Index number of the requested Segment data item . Remarks : A zero unit ID is unclassified , then follow unit 1 , 2 , 3 , etc . Unit 255 is noise . Return Values : TimeStamp Time stamp of the requested Segment data item . Data Variable to receive the requested data . SampleCount Number of samples returned in the data variable . UnitID Unit classification code for the Segment Entity . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 10 / 24 / 2003","title":"ns_GetSegmentData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentData.m/#ns_getsegmentdata","text":"ns_GetSegmentData Retrieves segment data by index Usage : [ ns_RESULT , TimeStamp , Data , SampleCount , UnitID ] = ns_GetSegmentData ( hFile , EntityID , Index ) Description : Returns the Segment data values in entry Index of the entity EntityID from the file referenced by hFile . The data values are returned in Data . The timestamp of the entry id returned in TimeStamp . The number of samples written to Data is returned in SampleCount . The data variable should be accessed as a 2 - dimensional array for samples and sources . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index Index number of the requested Segment data item . Remarks : A zero unit ID is unclassified , then follow unit 1 , 2 , 3 , etc . Unit 255 is noise . Return Values : TimeStamp Time stamp of the requested Segment data item . Data Variable to receive the requested data . SampleCount Number of samples returned in the data variable . UnitID Unit classification code for the Segment Entity . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 10 / 24 / 2003","title":"ns_GetSegmentData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentInfo.m/","text":"ns_GetSegmentInfo \u00b6 ns_GetSegmentInfo Retrieves information specific to segment entities Usage : [ ns_RESULT , nsSegmentInfo ] = ns_GetSegmentInfo ( hFile , EntityID ) Description : Retrieves information on the Segment Entity , EntityID , in the file referenced by the handle hFile . The information is written to nsSegmentInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsSegmentInfo ns_SEGMENTINFO structure that receives segment information for the requested Segment Entity . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetSegmentInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentInfo.m/#ns_getsegmentinfo","text":"ns_GetSegmentInfo Retrieves information specific to segment entities Usage : [ ns_RESULT , nsSegmentInfo ] = ns_GetSegmentInfo ( hFile , EntityID ) Description : Retrieves information on the Segment Entity , EntityID , in the file referenced by the handle hFile . The information is written to nsSegmentInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Return Values : nsSegmentInfo ns_SEGMENTINFO structure that receives segment information for the requested Segment Entity . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetSegmentInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentSourceInfo.m/","text":"ns_GetSegmentSourceInfo \u00b6 ns_GetSegmentSourceInfo Retrieves information about the sources that generated the segment data Usage : [ ns_RESULT , nsSegmentSourceInfo ] = ns_GetSegmentSourceInfo ( hFile , EntityID , SourceID ) Description : Retrieves information about the source entity , SourceID , for the Segment Entity identified by EntityID , from the file referenced by the handle hFile . The information is written to the nsSegmentSourceInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the Segment Entity . SourceID Identification number of the Segment Entity source . Return Values : nsSegmentSourceInfo ns_SEGSOURCEINFO structure that receives information about the source . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADSOURCE Invalid source identifier specified ns_FILEERROR File access or read error Remarks : The value of SourceID is an integer index value ranging from 0 to SourceCount - 1 ( which is returned by the function ns_GetSegmentInfo ) . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetSegmentSourceInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetSegmentSourceInfo.m/#ns_getsegmentsourceinfo","text":"ns_GetSegmentSourceInfo Retrieves information about the sources that generated the segment data Usage : [ ns_RESULT , nsSegmentSourceInfo ] = ns_GetSegmentSourceInfo ( hFile , EntityID , SourceID ) Description : Retrieves information about the source entity , SourceID , for the Segment Entity identified by EntityID , from the file referenced by the handle hFile . The information is written to the nsSegmentSourceInfo . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the Segment Entity . SourceID Identification number of the Segment Entity source . Return Values : nsSegmentSourceInfo ns_SEGSOURCEINFO structure that receives information about the source . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADSOURCE Invalid source identifier specified ns_FILEERROR File access or read error Remarks : The value of SourceID is an integer index value ranging from 0 to SourceCount - 1 ( which is returned by the function ns_GetSegmentInfo ) . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetSegmentSourceInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetTimeByIndex.m/","text":"ns_GetTimeByIndex \u00b6 ns_GetTimeByIndex Retrieves time range from entity indexes Usage : [ ns_RESULT , Time ] = ns_GetTimeByIndex ( hFile , EntityID , Index ) Description : Retrieves the timestamp for the entity identified by EntityID and numbered Index , from the data file referenced by hFile . The timestamp is returned in Time . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index Index of the requested data . Return Values : Time Variable to receive the timestamp . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetTimeByIndex"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_GetTimeByIndex.m/#ns_gettimebyindex","text":"ns_GetTimeByIndex Retrieves time range from entity indexes Usage : [ ns_RESULT , Time ] = ns_GetTimeByIndex ( hFile , EntityID , Index ) Description : Retrieves the timestamp for the entity identified by EntityID and numbered Index , from the data file referenced by hFile . The timestamp is returned in Time . Parameters : hFile Handle / Indentification number to an open file . EntityID Identification number of the entity in the data file . Index Index of the requested data . Return Values : Time Variable to receive the timestamp . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_BADFILE Invalid file handle passed to function ns_BADENTITY Invalid or inappropriate entity identifier specified ns_BADINDEX Invalid entity index specified ns_FILEERROR File access or read error Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_GetTimeByIndex"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_OpenFile.m/","text":"ns_OpenFile \u00b6 ns_OpenFile Opens a neural data file Usage : [ ns_RESULT , hFile ] = ns_OpenFile ( ' filename.ext ' ) Description : Opens the file specified by filename and returns a file handle , hFile , that is used to access the opened file . Parameters : filename Pointer to a null - terminated string that specifies the name of the file to open . Return Values : hFile Handle / Indentification number to the opened file . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_TYPEERROR Library unable to open file type ns_FILEERROR File access or read error Remarks : All files are opened for read - only , as no writing capabilities have been implemented . If the command succeeds in opening the file , the application should call ns_CloseFile for each open file before terminating . This function has to be called before any other Neuroshare function is called . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_OpenFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_OpenFile.m/#ns_openfile","text":"ns_OpenFile Opens a neural data file Usage : [ ns_RESULT , hFile ] = ns_OpenFile ( ' filename.ext ' ) Description : Opens the file specified by filename and returns a file handle , hFile , that is used to access the opened file . Parameters : filename Pointer to a null - terminated string that specifies the name of the file to open . Return Values : hFile Handle / Indentification number to the opened file . ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_TYPEERROR Library unable to open file type ns_FILEERROR File access or read error Remarks : All files are opened for read - only , as no writing capabilities have been implemented . If the command succeeds in opening the file , the application should call ns_CloseFile for each open file before terminating . This function has to be called before any other Neuroshare function is called . Copyright ( C ) 2003 Neuroshare Project Author : Almut Branner Last modification : 6 / 20 / 2003","title":"ns_OpenFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_SetLibrary.m/","text":"ns_SetLibrary \u00b6 ns_SetDLL Opens a Neuroshare Shared Library (. DLL or . so ) in prepearation for other work Usage : [ ns_RESULT ] = ns_SetLibrary ( 'filename.dll' ) Description : Opens the dynamic linked library specified by filename Parameters : filename Pointer to a null - terminated string that specifies the name of the file to open . Return Values : ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_TYPEERROR Library unable to open file type ns_LIBERROR File access or read error Remarks : Any already opened libraries , as well as any open files will be closed immediately . All files are opened for read - only , as no writing capabilities have been implemented . If the command succeeds in opening the file , the application should call ns_CloseFile for each open file before terminating . This function has to be called before any other Neuroshare function is called . Copyright ( C ) 2003 Neuroshare Project Author : Kirk Korver Last modification : 12 / 17 / 2003","title":"ns_SetLibrary"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/NeuroShare/ns_SetLibrary.m/#ns_setlibrary","text":"ns_SetDLL Opens a Neuroshare Shared Library (. DLL or . so ) in prepearation for other work Usage : [ ns_RESULT ] = ns_SetLibrary ( 'filename.dll' ) Description : Opens the dynamic linked library specified by filename Parameters : filename Pointer to a null - terminated string that specifies the name of the file to open . Return Values : ns_RESULT This function returns ns_OK if the file is successfully opened . Otherwise one of the following error codes is generated : ns_TYPEERROR Library unable to open file type ns_LIBERROR File access or read error Remarks : Any already opened libraries , as well as any open files will be closed immediately . All files are opened for read - only , as no writing capabilities have been implemented . If the command succeeds in opening the file , the application should call ns_CloseFile for each open file before terminating . This function has to be called before any other Neuroshare function is called . Copyright ( C ) 2003 Neuroshare Project Author : Kirk Korver Last modification : 12 / 17 / 2003","title":"ns_SetLibrary"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetADCChannel.m/","text":"ABFGetADCChannel \u00b6 ABFGetADCChannel reads a data channel from an Axon Instruments ABF file [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel , episode ) Examples : [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel ); [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel , episode ); Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read channel : the target channel , range 0-15 episode : if specified the data episode to read outputs : the data in a NxM matrix , each column representing one episode times : a matrix of sampling times , one value for each data point in data npoints : a vector , one value for the number of samples in each episode ( i . e . each column of data ) s : a structure with the channel comment , title and units data is single floating point and is scales to the units in s . Units This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : --------------------------------------------------------------------------","title":"ABFGetADCChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetADCChannel.m/#abfgetadcchannel","text":"ABFGetADCChannel reads a data channel from an Axon Instruments ABF file [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel , episode ) Examples : [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel ); [ data , times , npoints , s ] = ABFGetADCChannel ( dllname , filename , channel , episode ); Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read channel : the target channel , range 0-15 episode : if specified the data episode to read outputs : the data in a NxM matrix , each column representing one episode times : a matrix of sampling times , one value for each data point in data npoints : a vector , one value for the number of samples in each episode ( i . e . each column of data ) s : a structure with the channel comment , title and units data is single floating point and is scales to the units in s . Units This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : --------------------------------------------------------------------------","title":"ABFGetADCChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetDACChannel.m/","text":"ABFGetDACChannel \u00b6 [ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel , episode ) ABFGetDACChannel reads a data channel from an Axon Instruments ABF file Examples : [ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel ); [ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel , episode ); Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read channel : the target channel , range 0-15 episode : if specified the data episode to read outputs : the data in a NxM matrix , each column representing one episode npoints : a vector , one value for the number of samples in each episode ( i . e . each column of data ) s : a structure with the channel comment , title and units data is single floating point and is scales to the units in s . Units This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : --------------------------------------------------------------------------","title":"ABFGetDACChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetDACChannel.m/#abfgetdacchannel","text":"[ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel , episode ) ABFGetDACChannel reads a data channel from an Axon Instruments ABF file Examples : [ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel ); [ data , npoints , s ] = ABFGetDACChannel ( dllname , filename , channel , episode ); Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read channel : the target channel , range 0-15 episode : if specified the data episode to read outputs : the data in a NxM matrix , each column representing one episode npoints : a vector , one value for the number of samples in each episode ( i . e . each column of data ) s : a structure with the channel comment , title and units data is single floating point and is scales to the units in s . Units This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : --------------------------------------------------------------------------","title":"ABFGetDACChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetFileInfo.m/","text":"ABFGetFileInfo \u00b6 ABFGetFileInfo returns some header data from an Axon Instruments ABF file Examples : s1 = ABFGetFileInfo ( dllname , filename ); [ s1 s2 ] = ABFGetFileInfo ( dllname , filename ); s1 is returned with limited information ( obsolete : maintained for for backwards compatibility only ) s2 contains the full ABF header ( see ABFHEADR . PDF for details ) Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : 12.09 Modified to call ABFGetFileInfo2 and return full ABF header --------------------------------------------------------------------------","title":"ABFGetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/axon/ABFGetFileInfo.m/#abfgetfileinfo","text":"ABFGetFileInfo returns some header data from an Axon Instruments ABF file Examples : s1 = ABFGetFileInfo ( dllname , filename ); [ s1 s2 ] = ABFGetFileInfo ( dllname , filename ); s1 is returned with limited information ( obsolete : maintained for for backwards compatibility only ) s2 contains the full ABF header ( see ABFHEADR . PDF for details ) Inputs : dllname : the full path and name of the Axon Instruments ABFFIO . DLL filename : the path and file name of the ABF file to read This routine calls the Axon Instruments DLL and is therefore Windows only -------------------------------------------------------------------------- Author : Malcolm Lidierth 06 / 07 Copyright \u00a9 The Author & King ' s College London 2007 Acknowledgements : Revisions : 12.09 Modified to call ABFGetFileInfo2 and return full ABF header --------------------------------------------------------------------------","title":"ABFGetFileInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/map/new.m/","text":"new \u00b6 NEW Create structures to define interfaces found in 'ns'.","title":"new"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/map/new.m/#new","text":"NEW Create structures to define interfaces found in 'ns'.","title":"new"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/Contents.m/","text":"Contents \u00b6 SON Files progressbar - WAITBAR Display wait bar . SONADCToDouble - scales a SON ADC channel to double precision floating point SONADCToSingle - scales a SON ADC channel to single precision floating point SONChanList - returns a structure with details of active channels in a SON file SONChannelInfo - reads the SON file channel header for a channel SONCreateChannel - Obsolete function . To write to a file use the SON32 library SONFileHeader - reads the file header for a SON file SONGetADCChannel - reads an ADC ( waveform ) channel from a SON file . SONGetADCMarkerChannel - reads an ADCMark channel from a SON file . SONGetBlockHeaders - returns a matrix containing the SON data block headers SONGetChannel - provides a gateway to the individual channel read functions . SONGetEventChannel - reads an event channel from a SON file SONGetMarkerChannel - reads a marker channel from a SON file . SONGetRealMarkerChannel - reads an RealMark channel from a SON file . SONGetRealWaveChannel - reads an ADC ( waveform ) channel from a SON file . SONGetSampleInterval - returns the sampling interval in microseconds SONGetSampleTicks - Finds the sampling interval on a data channel in a SON file SONGetTextMarkerChannel - reads a marker channel from a SON file . SONRealToADC - Converts floating point array to int16 SONTest - tests the integrity of a SON File usinf CED ' s SonFix program. SONTicksToSeconds - scales timestamp vector IN SONUpgradeToVersion6 - Obsolete function SONVersion - returns / displays the version number of the matlab SON library","title":"Contents"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/Contents.m/#contents","text":"SON Files progressbar - WAITBAR Display wait bar . SONADCToDouble - scales a SON ADC channel to double precision floating point SONADCToSingle - scales a SON ADC channel to single precision floating point SONChanList - returns a structure with details of active channels in a SON file SONChannelInfo - reads the SON file channel header for a channel SONCreateChannel - Obsolete function . To write to a file use the SON32 library SONFileHeader - reads the file header for a SON file SONGetADCChannel - reads an ADC ( waveform ) channel from a SON file . SONGetADCMarkerChannel - reads an ADCMark channel from a SON file . SONGetBlockHeaders - returns a matrix containing the SON data block headers SONGetChannel - provides a gateway to the individual channel read functions . SONGetEventChannel - reads an event channel from a SON file SONGetMarkerChannel - reads a marker channel from a SON file . SONGetRealMarkerChannel - reads an RealMark channel from a SON file . SONGetRealWaveChannel - reads an ADC ( waveform ) channel from a SON file . SONGetSampleInterval - returns the sampling interval in microseconds SONGetSampleTicks - Finds the sampling interval on a data channel in a SON file SONGetTextMarkerChannel - reads a marker channel from a SON file . SONRealToADC - Converts floating point array to int16 SONTest - tests the integrity of a SON File usinf CED ' s SonFix program. SONTicksToSeconds - scales timestamp vector IN SONUpgradeToVersion6 - Obsolete function SONVersion - returns / displays the version number of the matlab SON library","title":"Contents"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/MakeMATFile.m/","text":"MakeMATFile \u00b6 Create MAT-file and write header This function is used by the MATLAB SON library Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006","title":"MakeMATFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/MakeMATFile.m/#makematfile","text":"Create MAT-file and write header This function is used by the MATLAB SON library Malcolm Lidierth 07/06 Copyright \u00a9 The Author & King's College London 2006","title":"MakeMATFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/OpenMATFile.m/","text":"OpenMATFile \u00b6 Open MAT file for use by SON library This function is called when writing data to a standard MAT - file . Called from the MATLAB SON library Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King ' s College London 2006","title":"OpenMATFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/OpenMATFile.m/#openmatfile","text":"Open MAT file for use by SON library This function is called when writing data to a standard MAT - file . Called from the MATLAB SON library Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King ' s College London 2006","title":"OpenMATFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONADCToDouble.m/","text":"SONADCToDouble \u00b6 SONADCTODOUBLE scales a SON ADC channel to double precision floating point [ OUT {, HEADER }] = SONADCTODOUBLE ( IN {, HEADER } ) Applies the scale and offset supplied in HEADER to the data contained in IN . These values are derived form the channel header on disc . OUT = ( IN * SCALE / 6553 . 6 ) + OFFSET If no HEADER is supplied as input , a scale of 1 . 0 and offset of 0 . 0 are assumed . If supplied as output , HEADER will be updated with fields for the min and max values and channel kind will be replaced with 9 ( i . e . the RealWave channel value ) . Malcolm Lidierth 03 / 02 Updated 03 / 06 ML Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONADCToDouble"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONADCToDouble.m/#sonadctodouble","text":"SONADCTODOUBLE scales a SON ADC channel to double precision floating point [ OUT {, HEADER }] = SONADCTODOUBLE ( IN {, HEADER } ) Applies the scale and offset supplied in HEADER to the data contained in IN . These values are derived form the channel header on disc . OUT = ( IN * SCALE / 6553 . 6 ) + OFFSET If no HEADER is supplied as input , a scale of 1 . 0 and offset of 0 . 0 are assumed . If supplied as output , HEADER will be updated with fields for the min and max values and channel kind will be replaced with 9 ( i . e . the RealWave channel value ) . Malcolm Lidierth 03 / 02 Updated 03 / 06 ML Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONADCToDouble"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONADCToSingle.m/","text":"SONADCToSingle \u00b6 SONADCTOSINGLE scales a SON ADC channel to single precision floating point [ OUT {, HEADER }] = SONADCTODOUBLE ( IN {, HEADER } ) Applies the scale and offset supplied in HEADER to the data contained in IN . These values are derived form the channel header on disc . OUT = ( IN * SCALE / 6553 . 6 ) + OFFSET If no HEADER is supplied as input , a scale of 1 . 0 and offset of 0 . 0 are assumed . If supplied as output , HEADER will be updated with fields for the min and max values and channel kind will be replaced with 9 ( i . e . the RealWave channel value ) . Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONADCToSingle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONADCToSingle.m/#sonadctosingle","text":"SONADCTOSINGLE scales a SON ADC channel to single precision floating point [ OUT {, HEADER }] = SONADCTODOUBLE ( IN {, HEADER } ) Applies the scale and offset supplied in HEADER to the data contained in IN . These values are derived form the channel header on disc . OUT = ( IN * SCALE / 6553 . 6 ) + OFFSET If no HEADER is supplied as input , a scale of 1 . 0 and offset of 0 . 0 are assumed . If supplied as output , HEADER will be updated with fields for the min and max values and channel kind will be replaced with 9 ( i . e . the RealWave channel value ) . Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONADCToSingle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONChanList.m/","text":"SONChanList \u00b6 SONCHANLIST returns a structure with details of active channels in a SON file LIST = SONCHANLIST ( FID ) FID is the file handle . List is a structure with field for the channel number , kind , title , comment and the number of physical port data were collected from","title":"SONChanList"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONChanList.m/#sonchanlist","text":"SONCHANLIST returns a structure with details of active channels in a SON file LIST = SONCHANLIST ( FID ) FID is the file handle . List is a structure with field for the channel number , kind , title , comment and the number of physical port data were collected from","title":"SONChanList"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONChannelInfo.m/","text":"SONChannelInfo \u00b6 SONCHANNELINFO reads the SON file channel header for a channel Output follows the CED disk header structure but a FileName field is added to tag the returned structure with its source file . INFO = SONCHANNELINFO ( FID , CHAN ) where FID is the matlab file handle and CHAN is the channel number ( 1 - Max ) Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONChannelInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONChannelInfo.m/#sonchannelinfo","text":"SONCHANNELINFO reads the SON file channel header for a channel Output follows the CED disk header structure but a FileName field is added to tag the returned structure with its source file . INFO = SONCHANNELINFO ( FID , CHAN ) where FID is the matlab file handle and CHAN is the channel number ( 1 - Max ) Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONChannelInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONCreateChannel.m/","text":"SONCreateChannel \u00b6 Obsolete function . To write to a file use the SON32 library Create a new channel in SON file fid using the existing channel SrcChan channel header as a template . Channel data is contained in data . If data is type int16 a new ADC channel will be written . If floating point a RealWave channel will be written as long as the file is of a high enough version ( 6 or beyond ) Returns the SON channel number of the created channel Malcolm Lidierth 02 / 02 14 / 5 / 03 Add feature to use title from input dataheader for new channels comment 21 / 5 / 03 If writing ADC data update the units field in the channel header","title":"SONCreateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONCreateChannel.m/#soncreatechannel","text":"Obsolete function . To write to a file use the SON32 library Create a new channel in SON file fid using the existing channel SrcChan channel header as a template . Channel data is contained in data . If data is type int16 a new ADC channel will be written . If floating point a RealWave channel will be written as long as the file is of a high enough version ( 6 or beyond ) Returns the SON channel number of the created channel Malcolm Lidierth 02 / 02 14 / 5 / 03 Add feature to use title from input dataheader for new channels comment 21 / 5 / 03 If writing ADC data update the units field in the channel header","title":"SONCreateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONFileHeader.m/","text":"SONFileHeader \u00b6 SONFILEHEADER reads the file header for a SON file HEADER = SONFILEHEADER ( FID ) Used internally by the library . See CED documentation of SON system for details . 24 / 6 / 05 Fix filecomment - now 5 x1 not 5 x5 Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONFileHeader"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONFileHeader.m/#sonfileheader","text":"SONFILEHEADER reads the file header for a SON file HEADER = SONFILEHEADER ( FID ) Used internally by the library . See CED documentation of SON system for details . 24 / 6 / 05 Fix filecomment - now 5 x1 not 5 x5 Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONFileHeader"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetADCChannel.m/","text":"SONGetADCChannel \u00b6 SONGETADCCHANNEL reads an ADC ( waveform ) channel from a SON file . [ DATA {, HEADER }] = SONGETADCCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}}) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 {, OPTIONS }) reads all the data on channel 1 [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 , 10 {, OPTIONS }) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS }) reads disc blocks 10 - 20 for continuous data or epochs 10 - 20 for triggered data When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file specified in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 1 , 'progress' , 'mat' , 'myfile.mat' ); Returns the signed 16 bit integer ADC values in DATA ( scaled , offset and cast to double if 'scale' is used as an option ) . If present , HEADER will be returned with the channel header information from the file . For continuously sampled data , DATA is a simple vector . If sampling was triggered , DATA will be 2 - dimensional matrix with each epoch ( frame ) of data in a separate column . Examples : [ data , header ] = SONGetADCChannel ( fid , 1 , 'ticks' ) reads all data on channel 1 returning an int16 vector or matrix Times in header will be in clock ticks options = { 'progress' 'scale' 'ticks' } [ data , header ] = SONGetADCChannel ( fid , 1 , 200 , 399 , options {:}) reads epochs 200 - 399 from channel 1 and displays a progress bar . Data is returned in double - precision floating point after scaling and applying the offset stored on disc . If sampling was continuous , data will be a vector containing data blocks 200 - 399. If triggered , data will be a 200 column matrix , each column containing one data epoch . HEADER could have the following example field values FileName : source filename ( and path ) system : SON version identifier FileChannel : Channel number in file phyChan : Physical ( hardware ) port . kind : 1 ( or 9 if scaled ) - channel type identifier comment : Channel comment title : Channel title sampleinterval : sampling interval in microseconds ( Changed in v2 . 2 ) scale : e . g . 200 , scaling factor used to convert to 'units' offset : e . g . 1 offset applied to scaled data units : Channel units npoints : e . g . [ 1 x200 double ] number of valid data points in each column of DATA mode : 'Triggered' or 'Continuous' sampling start : e . g [ 1 x200 double ] start time for each column in data in 'TimeUnits' stop : e . g . [ 1 x200 double ] end time for each column in data in 'TimeUnits' Epochs : a cell array e . g . {[ 200 ] [ 399 ] 'of' [ 961 ] 'epochs' } lists the blocks or epochs read TimeUnits : e . g . 'Ticks' the time units transpose : default 0 , a flag , 0 for row - wise and 1 for columnwise organization of data min and max fields will also be present if the data are scaled 11 / 03 / 06 Memory pre - allocations changed to speed up execution SONADCToDouble code embedded in function Memory mapping embedded in function 31 / 3 / 06 Use Version 7.0 \"zeros\" for int16 pre - allocation - include if / else for backwards compat 20 / 5 / 06 Varargin handling tidied Memory mapping improved . Now uses the ADCARRAY class 12 / 7 / 06 Memory mapping removed . Now files data in a Level 5 Version 6 compatible MAT file . Use 'where.m' to map the MAT - file . 20 / 02 / 08 Always build header , whether nargout == 2 or not 20 / 01 / 10 R2010a compatibility changes Malcolm Lidierth 03 / 02 Updated 12 / 06 ML Copyright \u00a9 The Author & King 's College London 2002-2006","title":"SONGetADCChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetADCChannel.m/#songetadcchannel","text":"SONGETADCCHANNEL reads an ADC ( waveform ) channel from a SON file . [ DATA {, HEADER }] = SONGETADCCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}}) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 {, OPTIONS }) reads all the data on channel 1 [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 , 10 {, OPTIONS }) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETADCCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS }) reads disc blocks 10 - 20 for continuous data or epochs 10 - 20 for triggered data When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file specified in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 1 , 'progress' , 'mat' , 'myfile.mat' ); Returns the signed 16 bit integer ADC values in DATA ( scaled , offset and cast to double if 'scale' is used as an option ) . If present , HEADER will be returned with the channel header information from the file . For continuously sampled data , DATA is a simple vector . If sampling was triggered , DATA will be 2 - dimensional matrix with each epoch ( frame ) of data in a separate column . Examples : [ data , header ] = SONGetADCChannel ( fid , 1 , 'ticks' ) reads all data on channel 1 returning an int16 vector or matrix Times in header will be in clock ticks options = { 'progress' 'scale' 'ticks' } [ data , header ] = SONGetADCChannel ( fid , 1 , 200 , 399 , options {:}) reads epochs 200 - 399 from channel 1 and displays a progress bar . Data is returned in double - precision floating point after scaling and applying the offset stored on disc . If sampling was continuous , data will be a vector containing data blocks 200 - 399. If triggered , data will be a 200 column matrix , each column containing one data epoch . HEADER could have the following example field values FileName : source filename ( and path ) system : SON version identifier FileChannel : Channel number in file phyChan : Physical ( hardware ) port . kind : 1 ( or 9 if scaled ) - channel type identifier comment : Channel comment title : Channel title sampleinterval : sampling interval in microseconds ( Changed in v2 . 2 ) scale : e . g . 200 , scaling factor used to convert to 'units' offset : e . g . 1 offset applied to scaled data units : Channel units npoints : e . g . [ 1 x200 double ] number of valid data points in each column of DATA mode : 'Triggered' or 'Continuous' sampling start : e . g [ 1 x200 double ] start time for each column in data in 'TimeUnits' stop : e . g . [ 1 x200 double ] end time for each column in data in 'TimeUnits' Epochs : a cell array e . g . {[ 200 ] [ 399 ] 'of' [ 961 ] 'epochs' } lists the blocks or epochs read TimeUnits : e . g . 'Ticks' the time units transpose : default 0 , a flag , 0 for row - wise and 1 for columnwise organization of data min and max fields will also be present if the data are scaled 11 / 03 / 06 Memory pre - allocations changed to speed up execution SONADCToDouble code embedded in function Memory mapping embedded in function 31 / 3 / 06 Use Version 7.0 \"zeros\" for int16 pre - allocation - include if / else for backwards compat 20 / 5 / 06 Varargin handling tidied Memory mapping improved . Now uses the ADCARRAY class 12 / 7 / 06 Memory mapping removed . Now files data in a Level 5 Version 6 compatible MAT file . Use 'where.m' to map the MAT - file . 20 / 02 / 08 Always build header , whether nargout == 2 or not 20 / 01 / 10 R2010a compatibility changes Malcolm Lidierth 03 / 02 Updated 12 / 06 ML Copyright \u00a9 The Author & King 's College London 2002-2006","title":"SONGetADCChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetADCMarkerChannel.m/","text":"SONGetADCMarkerChannel \u00b6 SONGETADCMARKERCHANNEL reads an ADCMark channel from a SON file . [ DATA {, HEADER }] = SONGETADCMARKERCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 {, OPTIONS } ) reads all the data on channel 1 [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 , 10 {, OPTIONS } ) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS } ) reads disc blocks 10 - 20 DATA is a structure with 3 fields . DATA . TIMINGS contains timestamps DATA . MARKERS contains 4 uint8 marker values for each event DATA . ADC contains the ADC data associated with each timestamp When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - calls SONADCToDouble to apply the channel scale and offset to DATA . ADC which will be cast to double precision ' progress ' - causes a progress bar to be displayed during the read . Returns the signed 16 bit integer ADC values in DATA . ADC ( scaled , offset and cast to double if ' scale ' is used as an option ) . If present , HEADER will be returned with the channel header information from the file . Example : options = { ' scale ' ' microseconds ' } [ data , header ] = SONGetADCMarkerChannel ( fid , 1 , 20 , 40 , options {:} ) reads blocks 20 - 40 from channel 1 and displays a progress bar . Timestamps in data . timings wil be in microseconds data . adc will be returned in double - precision floating point after scaling and applying the offset stored on disc via SONADCToDouble . in this case HEADER could have the following example field values FileName : ' c:\\matlab704\\work\\02feb00.smr ' system : ' SON4 ' FileChannel : 3 phyChan : - 1 kind : 6 npoints : 9273 values : 100 preTrig : 10 comment : ' No comment ' title : ' Memory ' sampleinterval : 2 . 0000 e - 004 scale : 1 offset : 0 units : ' volt ' interleave : [] TimeUnits : ' microseconds ' Epochs : {[ 20 ] [ 40 ] ' of ' [ 95 ] ' blocks ' } transpose : 0 Malcolm Lidierth 02 / 02 Updated 09 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetADCMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetADCMarkerChannel.m/#songetadcmarkerchannel","text":"SONGETADCMARKERCHANNEL reads an ADCMark channel from a SON file . [ DATA {, HEADER }] = SONGETADCMARKERCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 {, OPTIONS } ) reads all the data on channel 1 [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 , 10 {, OPTIONS } ) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETADCMARKERCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS } ) reads disc blocks 10 - 20 DATA is a structure with 3 fields . DATA . TIMINGS contains timestamps DATA . MARKERS contains 4 uint8 marker values for each event DATA . ADC contains the ADC data associated with each timestamp When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - calls SONADCToDouble to apply the channel scale and offset to DATA . ADC which will be cast to double precision ' progress ' - causes a progress bar to be displayed during the read . Returns the signed 16 bit integer ADC values in DATA . ADC ( scaled , offset and cast to double if ' scale ' is used as an option ) . If present , HEADER will be returned with the channel header information from the file . Example : options = { ' scale ' ' microseconds ' } [ data , header ] = SONGetADCMarkerChannel ( fid , 1 , 20 , 40 , options {:} ) reads blocks 20 - 40 from channel 1 and displays a progress bar . Timestamps in data . timings wil be in microseconds data . adc will be returned in double - precision floating point after scaling and applying the offset stored on disc via SONADCToDouble . in this case HEADER could have the following example field values FileName : ' c:\\matlab704\\work\\02feb00.smr ' system : ' SON4 ' FileChannel : 3 phyChan : - 1 kind : 6 npoints : 9273 values : 100 preTrig : 10 comment : ' No comment ' title : ' Memory ' sampleinterval : 2 . 0000 e - 004 scale : 1 offset : 0 units : ' volt ' interleave : [] TimeUnits : ' microseconds ' Epochs : {[ 20 ] [ 40 ] ' of ' [ 95 ] ' blocks ' } transpose : 0 Malcolm Lidierth 02 / 02 Updated 09 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetADCMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetBlockHeaders.m/","text":"SONGetBlockHeaders \u00b6 SONGETBLOCKHEADERS returns a matrix containing the SON data block headers in file ' fid ' for channel ' chan ' . The returned header in memory contains , for each disk block , a column with rows 1 - 5 representing : Offset to start of block in file Start time in clock ticks End time in clock ticks Chan number Items See CED documentation for details - note this header is a modified form of the disk header Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetBlockHeaders"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetBlockHeaders.m/#songetblockheaders","text":"SONGETBLOCKHEADERS returns a matrix containing the SON data block headers in file ' fid ' for channel ' chan ' . The returned header in memory contains , for each disk block , a column with rows 1 - 5 representing : Offset to start of block in file Start time in clock ticks End time in clock ticks Chan number Items See CED documentation for details - note this header is a modified form of the disk header Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetBlockHeaders"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetChannel.m/","text":"SONGetChannel \u00b6 SONGETCHANNEL provides a gateway to the individual channel read functions . [ DATA {, HEADER }] = SONGETCHANNEL ( FID , CHAN {, OPTIONS }); where : FID is the matlab file handle CHAN is the channel number to read ( 1 to Max ) OPTIONS if present , are a set of one or more arguments ( see below ) DATA receives the data or structure from the read operation . HEADER , if present , receives the channel header information When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file whose name is supplied in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 5 , 'progress' , 'mat' , 'myfile.mat' ); In this case , d will be stored in variable chan5 . Use SONImport in preference to this option or , better , ImportSMR in sigTOOL . See also SONIMPORT Malcolm Lidierth 02 / 02 Updated 06 / 07 ML Error checking now allows Spike for Mac files to be loaded Copyright \u00a9 The Author & King 's College London 2002-2006","title":"SONGetChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetChannel.m/#songetchannel","text":"SONGETCHANNEL provides a gateway to the individual channel read functions . [ DATA {, HEADER }] = SONGETCHANNEL ( FID , CHAN {, OPTIONS }); where : FID is the matlab file handle CHAN is the channel number to read ( 1 to Max ) OPTIONS if present , are a set of one or more arguments ( see below ) DATA receives the data or structure from the read operation . HEADER , if present , receives the channel header information When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file whose name is supplied in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 5 , 'progress' , 'mat' , 'myfile.mat' ); In this case , d will be stored in variable chan5 . Use SONImport in preference to this option or , better , ImportSMR in sigTOOL . See also SONIMPORT Malcolm Lidierth 02 / 02 Updated 06 / 07 ML Error checking now allows Spike for Mac files to be loaded Copyright \u00a9 The Author & King 's College London 2002-2006","title":"SONGetChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetEventChannel.m/","text":"SONGetEventChannel \u00b6 SONGETEVENTCHANNEL reads an event channel from a SON file DATA {, H }] = SONGETEVENTCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle and chan is the channel number ( 1 - max ) If START / STOP are absent , all data is read . When present , START or START and STOP together set the disc blocks to read . This allows large data files to be read in parts . OPTIONS , if present , must be a cell array of strings and must be the last argument in the list . Valid options : ' ticks ' , ' microseconds ' , ' milliseconds ' , ' seconds ' ( default ) . Other options will be ignored . DATA is returned as a double precision array with the timestamps , in units determined by OPTIONS . H , if present , is returned with the channel header . e . g . [ data , h ] = SONGetEventChannel ( fid , 1 , 10 , 11 , ' microseconds ' ) reads Block 10 - 11 of Channel 1 and returns that data in microseconds [ data , h ] = SONGetEventChannel ( fid , 1 , ' ticks ' ) reads all blocks returning data in clock ticks See also SONGetMarkerChannel , SONGetADCMarkerChannel , SONGetRealMarkerChannel , SONGetTextMarkerChannel Malcolm Lidierth 02 / 02 Updated 10 / 06 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetEventChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetEventChannel.m/#songeteventchannel","text":"SONGETEVENTCHANNEL reads an event channel from a SON file DATA {, H }] = SONGETEVENTCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle and chan is the channel number ( 1 - max ) If START / STOP are absent , all data is read . When present , START or START and STOP together set the disc blocks to read . This allows large data files to be read in parts . OPTIONS , if present , must be a cell array of strings and must be the last argument in the list . Valid options : ' ticks ' , ' microseconds ' , ' milliseconds ' , ' seconds ' ( default ) . Other options will be ignored . DATA is returned as a double precision array with the timestamps , in units determined by OPTIONS . H , if present , is returned with the channel header . e . g . [ data , h ] = SONGetEventChannel ( fid , 1 , 10 , 11 , ' microseconds ' ) reads Block 10 - 11 of Channel 1 and returns that data in microseconds [ data , h ] = SONGetEventChannel ( fid , 1 , ' ticks ' ) reads all blocks returning data in clock ticks See also SONGetMarkerChannel , SONGetADCMarkerChannel , SONGetRealMarkerChannel , SONGetTextMarkerChannel Malcolm Lidierth 02 / 02 Updated 10 / 06 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetEventChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetMarkerChannel.m/","text":"SONGetMarkerChannel \u00b6 SONGETMARKERCHANNEL reads a marker channel from a SON file. [data{, h}]=SONGETMARKER(FID, CHAN) FID is the MATLAB file handle and CHAN is the channel number (1 to Max) DATA is a structure containing: DATA.TIMINGS: a length n vector with the marker timestamps DATA.MARKERS: an n x 4 array of uint8 type, containing the marker values When present, OPTIONS must be the last input argument. Valid options are: 'ticks', 'microseconds', 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit (seconds by default)in HEADER 'scale' - no effect 'progress' - causes a progress bar to be displayed during the read. Malcolm Lidierth 02/02 Updated 10/06 ML Copyright \u00a9 The Author & King's College London 2002-2006 Revisions 21.01.10 R2010a compatibility","title":"SONGetMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetMarkerChannel.m/#songetmarkerchannel","text":"SONGETMARKERCHANNEL reads a marker channel from a SON file. [data{, h}]=SONGETMARKER(FID, CHAN) FID is the MATLAB file handle and CHAN is the channel number (1 to Max) DATA is a structure containing: DATA.TIMINGS: a length n vector with the marker timestamps DATA.MARKERS: an n x 4 array of uint8 type, containing the marker values When present, OPTIONS must be the last input argument. Valid options are: 'ticks', 'microseconds', 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit (seconds by default)in HEADER 'scale' - no effect 'progress' - causes a progress bar to be displayed during the read. Malcolm Lidierth 02/02 Updated 10/06 ML Copyright \u00a9 The Author & King's College London 2002-2006 Revisions 21.01.10 R2010a compatibility","title":"SONGetMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetRealMarkerChannel.m/","text":"SONGetRealMarkerChannel \u00b6 SONGETREALMARKERCHANNEL reads an RealMark channel from a SON file . [ DATA {, HEADER }] = SONGETREALMARKERCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 {, OPTIONS } ) reads all the data on channel 1 [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 , 10 {, OPTIONS } ) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS } ) reads disc blocks 10 - 20 DATA is a structure with 3 fields . DATA . TIMINGS contains timestamps DATA . MARKERS contains 4 uint8 marker values for each event DATA . ADC contains the realwave data associated with each timestamp When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - no effects ' progress ' - causes a progress bar to be displayed during the read . Malcolm Lidierth 02 / 02 Updated 09 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetRealMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetRealMarkerChannel.m/#songetrealmarkerchannel","text":"SONGETREALMARKERCHANNEL reads an RealMark channel from a SON file . [ DATA {, HEADER }] = SONGETREALMARKERCHANNEL ( FID , CHAN {, START {, STOP {, OPTIONS }}} ) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 {, OPTIONS } ) reads all the data on channel 1 [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 , 10 {, OPTIONS } ) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETREALMARKERCHANNEL ( FID , 1 , 10 , 20 {, OPTIONS } ) reads disc blocks 10 - 20 DATA is a structure with 3 fields . DATA . TIMINGS contains timestamps DATA . MARKERS contains 4 uint8 marker values for each event DATA . ADC contains the realwave data associated with each timestamp When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - no effects ' progress ' - causes a progress bar to be displayed during the read . Malcolm Lidierth 02 / 02 Updated 09 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetRealMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetRealWaveChannel.m/","text":"SONGetRealWaveChannel \u00b6 SONGETREALWAVECHANNEL reads an ADC ( waveform ) channel from a SON file . [ DATA {, HEADER }] = SONGETREALWAVECHANNEL ( FID , ... CHAN {, START {, STOP {, OPTIONS }}}) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 {, OPTIONS }) reads all the data on channel 1 [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 , 10 {, OPTIONS }) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 , 10 , 20 {, OPTIONS }) reads disc blocks 10 - 20 for continuous data or epochs 10 - 20 for triggered data When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file specified in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 1 , 'progress' , 'mat' , 'myfile.mat' );","title":"SONGetRealWaveChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetRealWaveChannel.m/#songetrealwavechannel","text":"SONGETREALWAVECHANNEL reads an ADC ( waveform ) channel from a SON file . [ DATA {, HEADER }] = SONGETREALWAVECHANNEL ( FID , ... CHAN {, START {, STOP {, OPTIONS }}}) FID is the matlab file handle , CHAN is the channel number ( 1 = max ) [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 {, OPTIONS }) reads all the data on channel 1 [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 , 10 {, OPTIONS }) reads disc block 10 for continuous data or epoch 10 for triggered data [ DATA , HEADER ] = SONGETREALWAVECHANNEL ( FID , 1 , 10 , 20 {, OPTIONS }) reads disc blocks 10 - 20 for continuous data or epochs 10 - 20 for triggered data When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'progress' - causes a progress bar to be displayed during the read . 'mat' - the loaded data will be appended to the MAT - file specified in the next optional input e . g . : [ d , h ] = SONGetADCChannel ( fid , 1 , 'progress' , 'mat' , 'myfile.mat' );","title":"SONGetRealWaveChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetSampleInterval.m/","text":"SONGetSampleInterval \u00b6 SONGETSAMPLEINTERVAL returns the sampling interval in microseconds on a waveform data channel in a SON file , i . e . the reciprocal of the sampling rate for the channel , together with the time of the first sample [ INTERVAL {, START }] = SONGETSAMPLEINTERVAL ( FID , CHAN ) FID is the matlab file handle and CHAN is the channel number ( 1 - max ) The sampling INTERVAL and , if requested START time for the data are returned in seconds . Note that , as of Version 2 . 2 , the returned times are always in microseconds . Uncomment the last line for backwards compatibility Malcolm Lidierth 02 / 02 Updated 09 / 06 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetSampleInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetSampleInterval.m/#songetsampleinterval","text":"SONGETSAMPLEINTERVAL returns the sampling interval in microseconds on a waveform data channel in a SON file , i . e . the reciprocal of the sampling rate for the channel , together with the time of the first sample [ INTERVAL {, START }] = SONGETSAMPLEINTERVAL ( FID , CHAN ) FID is the matlab file handle and CHAN is the channel number ( 1 - max ) The sampling INTERVAL and , if requested START time for the data are returned in seconds . Note that , as of Version 2 . 2 , the returned times are always in microseconds . Uncomment the last line for backwards compatibility Malcolm Lidierth 02 / 02 Updated 09 / 06 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetSampleInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetSampleTicks.m/","text":"SONGetSampleTicks \u00b6 Finds the sampling interval on a data channel in a SON file in clock ticks and returns the time of the first sample Malcolm Lidierth 02/02 Updated 09/05 ML Copyright \u00a9 The Author & King's College London 2002-2006","title":"SONGetSampleTicks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetSampleTicks.m/#songetsampleticks","text":"Finds the sampling interval on a data channel in a SON file in clock ticks and returns the time of the first sample Malcolm Lidierth 02/02 Updated 09/05 ML Copyright \u00a9 The Author & King's College London 2002-2006","title":"SONGetSampleTicks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetTextMarkerChannel.m/","text":"SONGetTextMarkerChannel \u00b6 SONGETTEXTMARKERCHANNEL reads a marker channel from a SON file . [ data {, h }] = SONGETMARKER ( FID , CHAN ) FID is the MATLAB file handle and CHAN is the channel number ( 1 to Max ) DATA is a structure containing : DATA . TIMINGS : a length n vector with the marker timestamps DATA . MARKERS : an n x 4 array of uint8 type , containing the marker values DATA . TEXT : an n x m array , with m characters for each of the n tiemstamps When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - no effect ' progress ' - causes a progress bar to be displayed during the read . Revised 01 / 05 / 06 Bug : Remove double call to SONTicksToSeconds introduced with v2 . 00 . 26 / 9 / 06 Change : Now returns uint8 Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetTextMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONGetTextMarkerChannel.m/#songettextmarkerchannel","text":"SONGETTEXTMARKERCHANNEL reads a marker channel from a SON file . [ data {, h }] = SONGETMARKER ( FID , CHAN ) FID is the MATLAB file handle and CHAN is the channel number ( 1 to Max ) DATA is a structure containing : DATA . TIMINGS : a length n vector with the marker timestamps DATA . MARKERS : an n x 4 array of uint8 type , containing the marker values DATA . TEXT : an n x m array , with m characters for each of the n tiemstamps When present , OPTIONS must be the last input argument . Valid options are : ' ticks ' , ' microseconds ' , ' milliseconds ' and ' seconds ' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER ' scale ' - no effect ' progress ' - causes a progress bar to be displayed during the read . Revised 01 / 05 / 06 Bug : Remove double call to SONTicksToSeconds introduced with v2 . 00 . 26 / 9 / 06 Change : Now returns uint8 Malcolm Lidierth 02 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONGetTextMarkerChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONImport.m/","text":"SONImport \u00b6 SONIMPORT copies all channels into a MAT - file Note : Use ImportSMR in the sigTOOL package in preference to SONImport unless you want data stored in the same way as with previous versions of the SON library . SONIMPORT ( FID , { OPTIONS }); where : FID is the matlab file handle OPTIONS if present , are a set of one or more arguments ( see below ) When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision Other options will have no effect Returns 0 if successful , - 1 otherwise SONIMPORT stores data in a Level 5 Version 6 compatible MAT - file that can be read on any MATLAB supported platform . SONIMPORT copies the FileHeader returned by SONFileHeader to the MAT - file then loads each channel in turn . The DATA and HEADER fields that would be returned by SONGETCHANNEL are then saved . The DATA vector , matrix or structure is saved as CHANX where X is the channel number e . g . CHAN1 for channel 1. The HEADER is saved as a structure named HEADX . Note that SONIMPORT loads each channel in turn but loads the entire channel . Very lengthy channels can cause an out - of - memory error , particularly when scaling waveform data to double precision . SONIMPORT issues a warning when this happens and attempts to recover by calling SONGETCHANNEL ( FID , CHAN , 'MAT' , 'MATFILENAME' {, OPTIONS }) The waveform load routines ( SONGETADCCHANNEL and SONGETREALWAVECHANNEL ) will add the data for the specified channel block - by - block ( or frame - by - frame ) using low - level I / O without having all the data loaded at once . If this fails , an incomplete channel entry will be left corrupting the MAT - file . SONIMPORT then deletes the MAT - file and returns - 1. The low - level I / O to the MAT - files has not yet been tested on the Mac or other big - endian platforms . Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006","title":"SONImport"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONImport.m/#sonimport","text":"SONIMPORT copies all channels into a MAT - file Note : Use ImportSMR in the sigTOOL package in preference to SONImport unless you want data stored in the same way as with previous versions of the SON library . SONIMPORT ( FID , { OPTIONS }); where : FID is the matlab file handle OPTIONS if present , are a set of one or more arguments ( see below ) When present , OPTIONS must be the last input argument . Valid options are : 'ticks' , 'microseconds' , 'milliseconds' and 'seconds' cause times to be scaled to the appropriate unit ( seconds by default ) in HEADER 'scale' - calls SONADCToDouble to apply the channel scale and offset to DATA which will be cast to double precision Other options will have no effect Returns 0 if successful , - 1 otherwise SONIMPORT stores data in a Level 5 Version 6 compatible MAT - file that can be read on any MATLAB supported platform . SONIMPORT copies the FileHeader returned by SONFileHeader to the MAT - file then loads each channel in turn . The DATA and HEADER fields that would be returned by SONGETCHANNEL are then saved . The DATA vector , matrix or structure is saved as CHANX where X is the channel number e . g . CHAN1 for channel 1. The HEADER is saved as a structure named HEADX . Note that SONIMPORT loads each channel in turn but loads the entire channel . Very lengthy channels can cause an out - of - memory error , particularly when scaling waveform data to double precision . SONIMPORT issues a warning when this happens and attempts to recover by calling SONGETCHANNEL ( FID , CHAN , 'MAT' , 'MATFILENAME' {, OPTIONS }) The waveform load routines ( SONGETADCCHANNEL and SONGETREALWAVECHANNEL ) will add the data for the specified channel block - by - block ( or frame - by - frame ) using low - level I / O without having all the data loaded at once . If this fails , an incomplete channel entry will be left corrupting the MAT - file . SONIMPORT then deletes the MAT - file and returns - 1. The low - level I / O to the MAT - files has not yet been tested on the Mac or other big - endian platforms . Malcolm Lidierth 07 / 06 Copyright \u00a9 The Author & King 's College London 2006","title":"SONImport"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONMarkerDisplay.m/","text":"SONMarkerDisplay \u00b6 SONMarkerDisplay is used by sigTOOL and is not part of the stand-alone SON library","title":"SONMarkerDisplay"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONMarkerDisplay.m/#sonmarkerdisplay","text":"SONMarkerDisplay is used by sigTOOL and is not part of the stand-alone SON library","title":"SONMarkerDisplay"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONRealToADC.m/","text":"SONRealToADC \u00b6 SONREALTOADC Converts floating point array to int16 and returns a header with updated scale and offset Example: [OUT,HOUT]=SONREALTOADC(IN, HIN) The input data are scaled to fill the maximum range of the int16 output array. Scale and offset in HOUT are updated in SON format. Malcolm Lidierth Updated 10/06 Copyright \u00a9 The Author & King's College London 2002-2006 Changes: 06/07 casting order changed to reduce rounding effects 09/07 Scale factor: correct to 65535","title":"SONRealToADC"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONRealToADC.m/#sonrealtoadc","text":"SONREALTOADC Converts floating point array to int16 and returns a header with updated scale and offset Example: [OUT,HOUT]=SONREALTOADC(IN, HIN) The input data are scaled to fill the maximum range of the int16 output array. Scale and offset in HOUT are updated in SON format. Malcolm Lidierth Updated 10/06 Copyright \u00a9 The Author & King's College London 2002-2006 Changes: 06/07 casting order changed to reduce rounding effects 09/07 Scale factor: correct to 65535","title":"SONRealToADC"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONTest.m/","text":"SONTest \u00b6 SONTEST tests the integrity of a SON File usinf CED ' s SonFix program. SONTEST ( FILE ) FILE may be a string or a file identifier If FILE contains a directory root but no filename or * . smr , all files in the directory will be tested . Files currently open for writing within Matlab will not be tested . The version of SonFix should be dated 18 Feb 2002 or later to cope with version 6 . *** Edit SONTest . m to contain the correct path for the SONFIX program *** Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONTest"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONTest.m/#sontest","text":"SONTEST tests the integrity of a SON File usinf CED ' s SonFix program. SONTEST ( FILE ) FILE may be a string or a file identifier If FILE contains a directory root but no filename or * . smr , all files in the directory will be tested . Files currently open for writing within Matlab will not be tested . The version of SonFix should be dated 18 Feb 2002 or later to cope with version 6 . *** Edit SONTest . m to contain the correct path for the SONFIX program *** Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONTest"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONTicksToSeconds.m/","text":"SONTicksToSeconds \u00b6 SONTICKSTOSECONDS scales timestamp vector IN [ OUT ,{ TIMEUNITS }] = SONTICKSTOSECONDS ( FID , IN {, OPTIONS } ) FID is the matlab file handle , IN is a vector of timestamps from the file . OPTIONS if present , may contain : ' Ticks ' : Returns the time in base clock ticks ' microseconds ' , ' milliseconds ' or ' seconds ' ( = default ) : scales the output to the appropriate unit OUT contains the scaled timestamps . TIMEUNITS , if present , is a string copied from OPTIONS giving the time units Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONTicksToSeconds"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONTicksToSeconds.m/#sontickstoseconds","text":"SONTICKSTOSECONDS scales timestamp vector IN [ OUT ,{ TIMEUNITS }] = SONTICKSTOSECONDS ( FID , IN {, OPTIONS } ) FID is the matlab file handle , IN is a vector of timestamps from the file . OPTIONS if present , may contain : ' Ticks ' : Returns the time in base clock ticks ' microseconds ' , ' milliseconds ' or ' seconds ' ( = default ) : scales the output to the appropriate unit OUT contains the scaled timestamps . TIMEUNITS , if present , is a string copied from OPTIONS giving the time units Malcolm Lidierth 03 / 02 Updated 06 / 05 ML Copyright \u00a9 The Author & King ' s College London 2002-2006","title":"SONTicksToSeconds"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONUpgradeToVersion6.m/","text":"SONUpgradeToVersion6 \u00b6 Obsolete function Upgrades SON file ADC and ADCMark data to SON version 6 . File header date and time fields are not upgraded The file header creator field is set to 'MAT-TO-6' but only if it is '00000000' to begin with . IT IS RECOMMENDED THAT YOU BACKUP FILES BEFORE USING THIS ROUTINE .","title":"SONUpgradeToVersion6"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONUpgradeToVersion6.m/#sonupgradetoversion6","text":"Obsolete function Upgrades SON file ADC and ADCMark data to SON version 6 . File header date and time fields are not upgraded The file header creator field is set to 'MAT-TO-6' but only if it is '00000000' to begin with . IT IS RECOMMENDED THAT YOU BACKUP FILES BEFORE USING THIS ROUTINE .","title":"SONUpgradeToVersion6"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONVersion.m/","text":"SONVersion \u00b6 SONVERSION returns / displays the version number of the matlab SON library VER = SONVERSION returns and displays the version while VER = SONVERSION ( ' nodisplay ' ) suppresses the display Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King ' s College London 2002-2009","title":"SONVersion"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SONVersion.m/#sonversion","text":"SONVERSION returns / displays the version number of the matlab SON library VER = SONVERSION returns and displays the version while VER = SONVERSION ( ' nodisplay ' ) suppresses the display Author : Malcolm Lidierth 10 / 06 Copyright \u00a9 The Author & King ' s College London 2002-2009","title":"SONVersion"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/progressbar.m/","text":"progressbar \u00b6 Updated to support scProgressBar in sigTOOL WAITBAR Display wait bar . H = WAITBAR ( X , 'title' , property , value , property , value , ... ) creates and displays a waitbar of fractional length X . The handle to the waitbar figure is returned in H . X should be between 0 and 1. Optional arguments property and value allow to set corresponding waitbar figure properties . Property can also be an action keyword 'CreateCancelBtn' , in which case a cancel button will be added to the figure , and the passed value string will be executed upon clicking on the cancel button or the close figure button . WAITBAR ( X ) will set the length of the bar in the most recently created waitbar window to the fractional length X . WAITBAR ( X , H ) will set the length of the bar in waitbar H to the fractional length X . WAITBAR ( X , H , 'updated title' ) will update the title text in the waitbar figure , in addition to setting the fractional length to X . WAITBAR is typically used inside a FOR loop that performs a lengthy computation . A sample usage is shown below : h = waitbar ( 0 , 'Please wait...' ); for i = 1 : 100 , % computation here % waitbar ( i / 100 , h ) end close ( h )","title":"progressbar"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/progressbar.m/#progressbar","text":"Updated to support scProgressBar in sigTOOL WAITBAR Display wait bar . H = WAITBAR ( X , 'title' , property , value , property , value , ... ) creates and displays a waitbar of fractional length X . The handle to the waitbar figure is returned in H . X should be between 0 and 1. Optional arguments property and value allow to set corresponding waitbar figure properties . Property can also be an action keyword 'CreateCancelBtn' , in which case a cancel button will be added to the figure , and the passed value string will be executed upon clicking on the cancel button or the close figure button . WAITBAR ( X ) will set the length of the bar in the most recently created waitbar window to the fractional length X . WAITBAR ( X , H ) will set the length of the bar in waitbar H to the fractional length X . WAITBAR ( X , H , 'updated title' ) will update the title text in the waitbar figure , in addition to setting the fractional length to X . WAITBAR is typically used inside a FOR loop that performs a lengthy computation . A sample usage is shown below : h = waitbar ( 0 , 'Please wait...' ); for i = 1 : 100 , % computation here % waitbar ( i / 100 , h ) end close ( h )","title":"progressbar"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/Contents.m/","text":"Contents \u00b6 SON32 Files son32 - Prototype file . Create structures to define interfaces found in 'matlab' . SONAppID - sets or gets the creator lable from a SON file SONBlocks - returns the number of blocks written to disk for the channel SONBookFileSpace - Allocates disk space for a file SONCanWrite - test whether a file can be written to SONChanBytes - returns the number of bytes written , or buffered , on the SONChanDelete - deletes a channel from a SON file SONChanDivide - returns the clock ticks per ADC value from the specified SONChanInterleave - Returns the channel interleave factor for ADCMark channels SONChanKind - Returns the channel type SONChanMaxTime - returns the sample time for the last data item on a channel SONCleanUp - File cleanup . Not used in Windows SONCloseFile - closes an opened SON file SONCommitFile - flushes data to disc SONCreateFile - creates a new SON file SONDateTime - gets or sets the creation data / time data in a SON file SONDelBlocks - returns the number of deleted blocks in file FH on channel CHAN SONEmptyFile - Deletes data written to file FH SONExtMarkAlign - gets and sets the alignment state for marker channels SONFActive - tests filter mask layers to see if they are active SONFControl - Reads , sets or clears specified bits in a filter mask structure SONFEqual - Tests a filter mask structure for active layers SONFileBytes - Returns the number of bytes in the file SONFileSize - Returns the expected size of a file SONFilter - tests whether a set of markers are included in the set defined SONFMode - creates a filter mask structure and / or SONGetADCData - returns data for Adc , AdcMark , RealWave ( and RealMark ? ) SONGetADCInfo - Returns information about an ADC data channel SONGetChanComment - returns the comment string for the specified channel SONGetChanTitle - Returns the channel title SONGetEventData - returns the timings for an Event or marker channel SONGetExtMarkData - returns the timings , marker values and extra data SONGetExtMarkInfo - returns details about an extended marker channel SONGetExtraData - reads or writes the extra data area of a SON file SONGetExtraDataSize - Returns the size of the extra data area of file FH in bytes SONGetFileComment - returns the file comment SONGetFreeChan - returns the number of the first free channel in a file SONGetFreeChanl - SONGETFREECHAN returns the number of the first free channel in a file SONGetMarkData - returns the timings and marker values for a Marker , AdcMark , SONGetRealData - returns data for Adc , AdcMark , RealWave ( and RealMark ? ) SONGetTimePerADC - returns the number of clock ticks per ADC conversion SONGetusPerTime - returns the tick interval in units of SONTimeBase () SONGetVersion - returns the SON file system version number for a file SONIdealRate - gets or sets the ideal sampling rate on a channel SONIsSaving - returns the save state for a specified channel SONItemSize - returns the size of a data item on the specified channel ( bytes ) SONKillRange - attempts to discard data from a file between two times SONLastPointsTime - returns the time for which a read will terminate SONLastTime - returns information about the last entry on a channel SONLatestTime - is used to flush data to disk SONLoad - loads the son32 . dll library and defines global constants SONMaxChans - returns the number of channels supported by a SON file SONMaxTime - returns the maximum time for data in a file SONOpenNewFile - ( obsolete ) creates a new SON file and returns the handle SONOpenOldFile - opens an existing a SON file and returns a handle SONPhyChan - returns the physical channel ( hardware port ) for a channel SONPhysChan - SONPHYCHAN returns the physical channel ( hardware port ) for a channel SONPhySz - returns the buffer size for the specified chanel SONSave - sets the write state for a channel from a specified time SONSaveRange - sets the write state to save for a channel in the given time range SONSetADCOffset - sets the offset on an ADC channel SONSetADCScale - sets the scale on an ADC channel SONSetADCUnits - sets the units string for a channel SONSetBuffering - specifies the buffer size for writing to a channel SONSetBuffSpace - allocates buufer space for file writes SONSetChanComment - sets the channel comment SONSetChanTitle - sets the channel title SONSetEventChan - sets up a new event or marker channel SONSetFileClock - sets the basic time units and the clocks per ADC conversion SONSetFileComment - sets one of the five file comment fields SONSetInitLow - sets the initial state on an EventBoth ( level ) channel SONSetMarker - replaces the data associated with a marker on disc SONSetRealChan - creates real wave channel SONSetRealMarkChan - creates a REALMARK channel SONSetTextMarkChan - creates a TEXTMARK channel SONSetWaveChan - creates an ADC channel SONSetWaveMarkChan - creates a REALMARK channel SONTimeBase - Get or set the base time units for the file SONUpdateStart - flushes the SON file header to disc SONVersion - returns the MATLAB library version number ( Not a CED function ) SONWriteADCBlock - writes data to an ADC channel SONWriteEventBlock - writes data to an ADC channel SONWriteExtMarkBlock - writes data to a marker channel SONWriteMarkBlock - writes data to a marker channel SONWriteRealBlock - SONWRITERealBLOCK writes data to an Real channel SONYRange - returns the expected minimum and maximum values for a channel","title":"Contents"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/Contents.m/#contents","text":"SON32 Files son32 - Prototype file . Create structures to define interfaces found in 'matlab' . SONAppID - sets or gets the creator lable from a SON file SONBlocks - returns the number of blocks written to disk for the channel SONBookFileSpace - Allocates disk space for a file SONCanWrite - test whether a file can be written to SONChanBytes - returns the number of bytes written , or buffered , on the SONChanDelete - deletes a channel from a SON file SONChanDivide - returns the clock ticks per ADC value from the specified SONChanInterleave - Returns the channel interleave factor for ADCMark channels SONChanKind - Returns the channel type SONChanMaxTime - returns the sample time for the last data item on a channel SONCleanUp - File cleanup . Not used in Windows SONCloseFile - closes an opened SON file SONCommitFile - flushes data to disc SONCreateFile - creates a new SON file SONDateTime - gets or sets the creation data / time data in a SON file SONDelBlocks - returns the number of deleted blocks in file FH on channel CHAN SONEmptyFile - Deletes data written to file FH SONExtMarkAlign - gets and sets the alignment state for marker channels SONFActive - tests filter mask layers to see if they are active SONFControl - Reads , sets or clears specified bits in a filter mask structure SONFEqual - Tests a filter mask structure for active layers SONFileBytes - Returns the number of bytes in the file SONFileSize - Returns the expected size of a file SONFilter - tests whether a set of markers are included in the set defined SONFMode - creates a filter mask structure and / or SONGetADCData - returns data for Adc , AdcMark , RealWave ( and RealMark ? ) SONGetADCInfo - Returns information about an ADC data channel SONGetChanComment - returns the comment string for the specified channel SONGetChanTitle - Returns the channel title SONGetEventData - returns the timings for an Event or marker channel SONGetExtMarkData - returns the timings , marker values and extra data SONGetExtMarkInfo - returns details about an extended marker channel SONGetExtraData - reads or writes the extra data area of a SON file SONGetExtraDataSize - Returns the size of the extra data area of file FH in bytes SONGetFileComment - returns the file comment SONGetFreeChan - returns the number of the first free channel in a file SONGetFreeChanl - SONGETFREECHAN returns the number of the first free channel in a file SONGetMarkData - returns the timings and marker values for a Marker , AdcMark , SONGetRealData - returns data for Adc , AdcMark , RealWave ( and RealMark ? ) SONGetTimePerADC - returns the number of clock ticks per ADC conversion SONGetusPerTime - returns the tick interval in units of SONTimeBase () SONGetVersion - returns the SON file system version number for a file SONIdealRate - gets or sets the ideal sampling rate on a channel SONIsSaving - returns the save state for a specified channel SONItemSize - returns the size of a data item on the specified channel ( bytes ) SONKillRange - attempts to discard data from a file between two times SONLastPointsTime - returns the time for which a read will terminate SONLastTime - returns information about the last entry on a channel SONLatestTime - is used to flush data to disk SONLoad - loads the son32 . dll library and defines global constants SONMaxChans - returns the number of channels supported by a SON file SONMaxTime - returns the maximum time for data in a file SONOpenNewFile - ( obsolete ) creates a new SON file and returns the handle SONOpenOldFile - opens an existing a SON file and returns a handle SONPhyChan - returns the physical channel ( hardware port ) for a channel SONPhysChan - SONPHYCHAN returns the physical channel ( hardware port ) for a channel SONPhySz - returns the buffer size for the specified chanel SONSave - sets the write state for a channel from a specified time SONSaveRange - sets the write state to save for a channel in the given time range SONSetADCOffset - sets the offset on an ADC channel SONSetADCScale - sets the scale on an ADC channel SONSetADCUnits - sets the units string for a channel SONSetBuffering - specifies the buffer size for writing to a channel SONSetBuffSpace - allocates buufer space for file writes SONSetChanComment - sets the channel comment SONSetChanTitle - sets the channel title SONSetEventChan - sets up a new event or marker channel SONSetFileClock - sets the basic time units and the clocks per ADC conversion SONSetFileComment - sets one of the five file comment fields SONSetInitLow - sets the initial state on an EventBoth ( level ) channel SONSetMarker - replaces the data associated with a marker on disc SONSetRealChan - creates real wave channel SONSetRealMarkChan - creates a REALMARK channel SONSetTextMarkChan - creates a TEXTMARK channel SONSetWaveChan - creates an ADC channel SONSetWaveMarkChan - creates a REALMARK channel SONTimeBase - Get or set the base time units for the file SONUpdateStart - flushes the SON file header to disc SONVersion - returns the MATLAB library version number ( Not a CED function ) SONWriteADCBlock - writes data to an ADC channel SONWriteEventBlock - writes data to an ADC channel SONWriteExtMarkBlock - writes data to a marker channel SONWriteMarkBlock - writes data to a marker channel SONWriteRealBlock - SONWRITERealBLOCK writes data to an Real channel SONYRange - returns the expected minimum and maximum values for a channel","title":"Contents"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONAppID.m/","text":"SONAppID \u00b6 SONAPPID sets or gets the creator lable from a SON file Implemented through SONAppID . dll LABLE = SONAPPID ( FH ) returns the creator lable LABLE2 = SONAPPID ( FH , LABLE2 ) sets the lable to LABLE2 then reads it back to LABLE1 FH is the SON file handle LABLE , LABLE1 etc are MATLAB strings . Only the first 8 characters will be used . Returns no errors Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONAppID"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONAppID.m/#sonappid","text":"SONAPPID sets or gets the creator lable from a SON file Implemented through SONAppID . dll LABLE = SONAPPID ( FH ) returns the creator lable LABLE2 = SONAPPID ( FH , LABLE2 ) sets the lable to LABLE2 then reads it back to LABLE1 FH is the SON file handle LABLE , LABLE1 etc are MATLAB strings . Only the first 8 characters will be used . Returns no errors Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONAppID"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONBlocks.m/","text":"SONBlocks \u00b6 SONBLOCKS returns the number of blocks written to disk for the channel [ NBLOCKS ]= SONBLOCKS ( FH , CHAN ) FH SON file handle CHAN is the channel number from 0 to SONMAXCHANS - 1 Returns 0 or the number of blocks ; Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONBlocks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONBlocks.m/#sonblocks","text":"SONBLOCKS returns the number of blocks written to disk for the channel [ NBLOCKS ]= SONBLOCKS ( FH , CHAN ) FH SON file handle CHAN is the channel number from 0 to SONMAXCHANS - 1 Returns 0 or the number of blocks ; Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONBlocks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONBookFileSpace.m/","text":"SONBookFileSpace \u00b6 SONBOOKFILESPACE Allocates disk space for a file ERR = SONBOOKFILESPACE ( FH , LSPACE ) FHH SON32 . DLL file handle LSPACE space in bytes Returns 0 or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONBookFileSpace"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONBookFileSpace.m/#sonbookfilespace","text":"SONBOOKFILESPACE Allocates disk space for a file ERR = SONBOOKFILESPACE ( FH , LSPACE ) FHH SON32 . DLL file handle LSPACE space in bytes Returns 0 or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONBookFileSpace"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCanWrite.m/","text":"SONCanWrite \u00b6 SONCANWRITE test whether a file can be written to BOOLEAN = SONCANWRITE ( FH ) FH SON32 . DLL file handle Returns 0 if FALSE , 1 if TRUE Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCanWrite"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCanWrite.m/#soncanwrite","text":"SONCANWRITE test whether a file can be written to BOOLEAN = SONCANWRITE ( FH ) FH SON32 . DLL file handle Returns 0 if FALSE , 1 if TRUE Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCanWrite"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanBytes.m/","text":"SONChanBytes \u00b6 SONCHANBYTES returns the number of bytes written, or buffered, on the specified channel BYTES=SONCHANBYTES(FH, CHAN) FH SON file handle CHAN Channel number 0 to SONMAXCHANS-1 Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONChanBytes"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanBytes.m/#sonchanbytes","text":"SONCHANBYTES returns the number of bytes written, or buffered, on the specified channel BYTES=SONCHANBYTES(FH, CHAN) FH SON file handle CHAN Channel number 0 to SONMAXCHANS-1 Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONChanBytes"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanDelete.m/","text":"SONChanDelete \u00b6 SONCHANDELETE deletes a channel from a SON file RET = SONCHANDELETE ( FH , CHAN {, QUERY } ) FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 QUERY ( if present ) = 0 Do not query <> 0 Query before deleting ( default ) Returns 0 if deletion successful , negative error code otherwise Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanDelete"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanDelete.m/#sonchandelete","text":"SONCHANDELETE deletes a channel from a SON file RET = SONCHANDELETE ( FH , CHAN {, QUERY } ) FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 QUERY ( if present ) = 0 Do not query <> 0 Query before deleting ( default ) Returns 0 if deletion successful , negative error code otherwise Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanDelete"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanDivide.m/","text":"SONChanDivide \u00b6 SONCHANDIVIDE returns the clock ticks per ADC value from the specified channel LDIVIDE=SONCHANDIVIDE(FH, CHAN) FH SON file handle CHAN Channel number See also SONGETUSPERTIME Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONChanDivide"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanDivide.m/#sonchandivide","text":"SONCHANDIVIDE returns the clock ticks per ADC value from the specified channel LDIVIDE=SONCHANDIVIDE(FH, CHAN) FH SON file handle CHAN Channel number See also SONGETUSPERTIME Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONChanDivide"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanInterleave.m/","text":"SONChanInterleave \u00b6 SONCHANINTERLEAVE Returns the channel interleave factor for ADCMark channels in SON V6 or above INTERLEAVE = SONCHANINTERLEAVE ( FH , CHAN ) FH SON File Handle Chan Channel number Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanInterleave"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanInterleave.m/#sonchaninterleave","text":"SONCHANINTERLEAVE Returns the channel interleave factor for ADCMark channels in SON V6 or above INTERLEAVE = SONCHANINTERLEAVE ( FH , CHAN ) FH SON File Handle Chan Channel number Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanInterleave"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanKind.m/","text":"SONChanKind \u00b6 SONCHANKIND Returns the channel type KIND = SONCHANKIND ( FH , CHAN ) where FH is the file handle CHAN is the channel number ( 0 to SONMAXCHANS - 1 ) Returns kind as an enumerated string - see CED documentation for values No errors returned Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King 's College London 2005-2006","title":"SONChanKind"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanKind.m/#sonchankind","text":"SONCHANKIND Returns the channel type KIND = SONCHANKIND ( FH , CHAN ) where FH is the file handle CHAN is the channel number ( 0 to SONMAXCHANS - 1 ) Returns kind as an enumerated string - see CED documentation for values No errors returned Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King 's College London 2005-2006","title":"SONChanKind"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanMaxTime.m/","text":"SONChanMaxTime \u00b6 SONCHANMAXTIME returns the sample time for the last data item on a channel MAXTIME = SONCHANMAXTIME ( FH , CHAN ) where FH is the SON file handle CHAN the channel ( 0 - SONMaxChannels () - 1 ) MAXTIME is returned in clock ticks Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanMaxTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONChanMaxTime.m/#sonchanmaxtime","text":"SONCHANMAXTIME returns the sample time for the last data item on a channel MAXTIME = SONCHANMAXTIME ( FH , CHAN ) where FH is the SON file handle CHAN the channel ( 0 - SONMaxChannels () - 1 ) MAXTIME is returned in clock ticks Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONChanMaxTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCleanUp.m/","text":"SONCleanUp \u00b6 SONCLEANUP File cleanup. Not used in Windows Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONCleanUp"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCleanUp.m/#soncleanup","text":"SONCLEANUP File cleanup. Not used in Windows Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONCleanUp"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCloseFile.m/","text":"SONCloseFile \u00b6 SONCLOSEFILE closes an opened SON file ERR = SONCLOSEFILE ( FH ) where FH is the SON32 . DLL handle for the file Returns zero if all OK . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCloseFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCloseFile.m/#sonclosefile","text":"SONCLOSEFILE closes an opened SON file ERR = SONCLOSEFILE ( FH ) where FH is the SON32 . DLL handle for the file Returns zero if all OK . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCloseFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCommitFile.m/","text":"SONCommitFile \u00b6 SONCOMMITFILE flushes data to disc FH is the SON file handle BDELETE , if non - zero , causes the data buffers to be deleted Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCommitFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCommitFile.m/#soncommitfile","text":"SONCOMMITFILE flushes data to disc FH is the SON file handle BDELETE , if non - zero , causes the data buffers to be deleted Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCommitFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCreateFile.m/","text":"SONCreateFile \u00b6 SONCREATEFILE creates a new SON file FH = SONCREATEFILE ( FILNAME , NCHANS , EXTRA ) FILENAME = string wiht file and path NCHAN = number of channels 32 to 256 EXTRA = number of bytes to reserve for user specified data area in the file header . Returns FH , a file handle or a negative error code This function replaces SONOpenNewFile See also SONOPENNEWFILE Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCreateFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONCreateFile.m/#soncreatefile","text":"SONCREATEFILE creates a new SON file FH = SONCREATEFILE ( FILNAME , NCHANS , EXTRA ) FILENAME = string wiht file and path NCHAN = number of channels 32 to 256 EXTRA = number of bytes to reserve for user specified data area in the file header . Returns FH , a file handle or a negative error code This function replaces SONOpenNewFile See also SONOPENNEWFILE Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONCreateFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONDateTime.m/","text":"SONDateTime \u00b6 SONDATETIME gets or sets the creation data / time data in a SON file The date / time are returned in standard MATLAB format Implemented through SONDateTime . dll DATEVECTOR = SONDATETIME ( FH ) returns the creation date / time from the file DATEVECTOR1 = SONDATETIME ( FH , DATEVECTOR2 ) sets the time / date field to DATAVECTOR2 then reads it back to DATAVECTOR1 ( which may be the same vector ) FH is the SON file handle DATEVECTOR is a 1 x6 double vector as returned by the MATLAB builtin CLOCK function If an error occurs , the returned vector will be filled with zeros . Note : the date / time field is available in SON files of Version 6 and higher only . See also CLOCK , DATESTR Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONDateTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONDateTime.m/#sondatetime","text":"SONDATETIME gets or sets the creation data / time data in a SON file The date / time are returned in standard MATLAB format Implemented through SONDateTime . dll DATEVECTOR = SONDATETIME ( FH ) returns the creation date / time from the file DATEVECTOR1 = SONDATETIME ( FH , DATEVECTOR2 ) sets the time / date field to DATAVECTOR2 then reads it back to DATAVECTOR1 ( which may be the same vector ) FH is the SON file handle DATEVECTOR is a 1 x6 double vector as returned by the MATLAB builtin CLOCK function If an error occurs , the returned vector will be filled with zeros . Note : the date / time field is available in SON files of Version 6 and higher only . See also CLOCK , DATESTR Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONDateTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONDelBlocks.m/","text":"SONDelBlocks \u00b6 SONDELBLOCKS returns the number of deleted blocks in file FH on channel CHAN BLOCKS=SONDELBLOCKS(FH, CHAN) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONDelBlocks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONDelBlocks.m/#sondelblocks","text":"SONDELBLOCKS returns the number of deleted blocks in file FH on channel CHAN BLOCKS=SONDELBLOCKS(FH, CHAN) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONDelBlocks"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONEmptyFile.m/","text":"SONEmptyFile \u00b6 SONEMPTYFILE Deletes data written to file FH ERR = SONEMPTYFILE ( FH ) - see CED documentation for details Malcolm Lidierth 05 / 05 Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONEmptyFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONEmptyFile.m/#sonemptyfile","text":"SONEMPTYFILE Deletes data written to file FH ERR = SONEMPTYFILE ( FH ) - see CED documentation for details Malcolm Lidierth 05 / 05 Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONEmptyFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONExtMarkAlign.m/","text":"SONExtMarkAlign \u00b6 SONEXTMARKALIGN gets and sets the alignment state for marker channels This is a feature of V7 of the SON filing system Using aligned markers improves cross - platform portability of SON files STATE = SONEXTMARKALIGN ( FH , N ) FH = SON file handle N = - 2 , Check channel alignment - 1 , Check the file header alignment flag 0 , Set the file header flag to unaligned 1 , Set the file header flag to aligned See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONExtMarkAlign"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONExtMarkAlign.m/#sonextmarkalign","text":"SONEXTMARKALIGN gets and sets the alignment state for marker channels This is a feature of V7 of the SON filing system Using aligned markers improves cross - platform portability of SON files STATE = SONEXTMARKALIGN ( FH , N ) FH = SON file handle N = - 2 , Check channel alignment - 1 , Check the file header alignment flag 0 , Set the file header flag to unaligned 1 , Set the file header flag to aligned See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONExtMarkAlign"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFActive.m/","text":"SONFActive \u00b6 SONFACTIVE tests filter mask layers to see if they are active Implemented through SONFActive . dll ANS = SONFActive ( FilterMask ) Bits 0 to 3 are set in ANS if filter mask layers 0 to 3 are active . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFActive"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFActive.m/#sonfactive","text":"SONFACTIVE tests filter mask layers to see if they are active Implemented through SONFActive . dll ANS = SONFActive ( FilterMask ) Bits 0 to 3 are set in ANS if filter mask layers 0 to 3 are active . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFActive"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFControl.m/","text":"SONFControl \u00b6 Reads , sets or clears specified bits in a filter mask structure Implemented through SONFControl . dll [ VAL FILTERMASK ] = SONFCONTROL ( FILTERMASK , LAYER , ITEM , ACTION ) INPUTS : FILTERMASK , filter mask structure LAYER , the layer to change ( 0 to 3 ) or ' ALL ' for all layers ITEM , the item to read or change ( 0 to 255 ) or ' ALL ' for all items ACTION the action to take ' READ ' , ' SET ' , ' CLEAR ' or ' INVERT ' . OUTPUTS : VAL For a read : set to the state of the item or , if LAYER or ITEMS are ' ALL ' set to 1 if all set and 0 if all are cleared For a write : returns 0 or a negative error FILTERMASK is a copy of the input filter with the required bits set , cleared or inverted . N . B . any non - numeric input is assumed to represent ' ALL ' above . For string inputs only the first character is used . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFControl"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFControl.m/#sonfcontrol","text":"Reads , sets or clears specified bits in a filter mask structure Implemented through SONFControl . dll [ VAL FILTERMASK ] = SONFCONTROL ( FILTERMASK , LAYER , ITEM , ACTION ) INPUTS : FILTERMASK , filter mask structure LAYER , the layer to change ( 0 to 3 ) or ' ALL ' for all layers ITEM , the item to read or change ( 0 to 255 ) or ' ALL ' for all items ACTION the action to take ' READ ' , ' SET ' , ' CLEAR ' or ' INVERT ' . OUTPUTS : VAL For a read : set to the state of the item or , if LAYER or ITEMS are ' ALL ' set to 1 if all set and 0 if all are cleared For a write : returns 0 or a negative error FILTERMASK is a copy of the input filter with the required bits set , cleared or inverted . N . B . any non - numeric input is assumed to represent ' ALL ' above . For string inputs only the first character is used . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFControl"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFEqual.m/","text":"SONFEqual \u00b6 Tests a filter mask structure for active layers Implemented through SONFEqual . dll ANS = SONFEQUAL ( FILTERMASK ) Sets bits 1 to 4 in the output if layers 1 to 4 of the filter mask do anything i . e . have cleared bits Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFEqual"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFEqual.m/#sonfequal","text":"Tests a filter mask structure for active layers Implemented through SONFEqual . dll ANS = SONFEQUAL ( FILTERMASK ) Sets bits 1 to 4 in the output if layers 1 to 4 of the filter mask do anything i . e . have cleared bits Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFEqual"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFMode.m/","text":"SONFMode \u00b6 SONFMODE creates a filter mask structure and / or sets the mode for marker filtering Implemented though SONFMode . dll FILTERMASK = SONFMODE ( MODE ) FILTERMASK = SONFMODE ( FILTERMASK , MODE ) INPUTS : FILTERMASK , if present , is a filter mask structure that will be copied to the output MODE is a string , currently ' OR ' , ' AND ' or ' NOCHANGE ' ( not case sensitive ) - N . B . only the 1 st letter is examined . If ' nochange ' is set without an input filter mask , or no mode is specified , ' AND ' mode is selected by default . OUTPUT : A FILTERMASK structure with flags set according to MODE . If a filter mask is provided on input , mask values will be copied from it to the output mask filter . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFMode.m/#sonfmode","text":"SONFMODE creates a filter mask structure and / or sets the mode for marker filtering Implemented though SONFMode . dll FILTERMASK = SONFMODE ( MODE ) FILTERMASK = SONFMODE ( FILTERMASK , MODE ) INPUTS : FILTERMASK , if present , is a filter mask structure that will be copied to the output MODE is a string , currently ' OR ' , ' AND ' or ' NOCHANGE ' ( not case sensitive ) - N . B . only the 1 st letter is examined . If ' nochange ' is set without an input filter mask , or no mode is specified , ' AND ' mode is selected by default . OUTPUT : A FILTERMASK structure with flags set according to MODE . If a filter mask is provided on input , mask values will be copied from it to the output mask filter . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONFMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFileBytes.m/","text":"SONFileBytes \u00b6 SONFILEBYTES Returns the number of bytes in the file BYTES=SONFILEBYTES(FH) where FH is the file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFileBytes"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFileBytes.m/#sonfilebytes","text":"SONFILEBYTES Returns the number of bytes in the file BYTES=SONFILEBYTES(FH) where FH is the file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFileBytes"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFileSize.m/","text":"SONFileSize \u00b6 SONFILESIZE Returns the expected size of a file BYTES=SONFILESIZE(FH) where FH is the file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFileSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFileSize.m/#sonfilesize","text":"SONFILESIZE Returns the expected size of a file BYTES=SONFILESIZE(FH) where FH is the file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFileSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFilter.m/","text":"SONFilter \u00b6 SONFILTER tests whether a set of markers are included in the set defined by a filter mask Implemented though SONFilter.dll ANS=SONFILTER(MARKERS, FILTERMASK) INPUTS: MARKERS is EITHER 1. a TMarker structure as defined in the SON system or 2. a 4-byte uint8 vector containing the marker values FILTERMASK is the filter mask structure OUTPUTS: 1= the markers are included in the filter mask, 0 otherwise Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFilter"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONFilter.m/#sonfilter","text":"SONFILTER tests whether a set of markers are included in the set defined by a filter mask Implemented though SONFilter.dll ANS=SONFILTER(MARKERS, FILTERMASK) INPUTS: MARKERS is EITHER 1. a TMarker structure as defined in the SON system or 2. a 4-byte uint8 vector containing the marker values FILTERMASK is the filter mask structure OUTPUTS: 1= the markers are included in the filter mask, 0 otherwise Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONFilter"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetADCData.m/","text":"SONGetADCData \u00b6 SONGETADCDATA returns data for Adc , AdcMark , RealWave ( and RealMark ? ) data channels Implemented through SONGetADCData . dll [ npoints , bTime , data ] = SONGETADCDATA ( fh , chan ,... maxpoints , sTime , eTime {, FilterMask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data points to return The routine will calculate MAXPOINTS if this is passed as zero or less . STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error BTIME = the time for the first sample returned in data ( in clock ticks ) DATA = the output data array Alternative call : [ npoints , bTime ] = SONGETADCDATA ( fh , chan ,... data , sTime , eTime {, FilterMask } ) Here , DATA must be a pre - allocated int16 column vector . SON32 . DLL will place data directly into this array in the matlab workspace . For repeated calls , this can be faster but it breaks normal matlab conventions . For error codes returned in NPOINTS see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetADCData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetADCData.m/#songetadcdata","text":"SONGETADCDATA returns data for Adc , AdcMark , RealWave ( and RealMark ? ) data channels Implemented through SONGetADCData . dll [ npoints , bTime , data ] = SONGETADCDATA ( fh , chan ,... maxpoints , sTime , eTime {, FilterMask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data points to return The routine will calculate MAXPOINTS if this is passed as zero or less . STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error BTIME = the time for the first sample returned in data ( in clock ticks ) DATA = the output data array Alternative call : [ npoints , bTime ] = SONGETADCDATA ( fh , chan ,... data , sTime , eTime {, FilterMask } ) Here , DATA must be a pre - allocated int16 column vector . SON32 . DLL will place data directly into this array in the matlab workspace . For repeated calls , this can be faster but it breaks normal matlab conventions . For error codes returned in NPOINTS see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetADCData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetADCInfo.m/","text":"SONGetADCInfo \u00b6 SONGETADCINFO Returns information about an ADC data channel ( scale {, offset {, units {, points {, preTrig }}}} ) = SONGetADCInfo ( fh , chan ) Inputs FH SON file handle CHAN Channel number 0 to SONMaxChan () - 1 Outputs SCALE } As defined in Spike2 OFFSET } UNITS character string with units POINTS number of points for ADCMark channel PRETRIG number of pre - Trigger points for ADCMArk channel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetADCInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetADCInfo.m/#songetadcinfo","text":"SONGETADCINFO Returns information about an ADC data channel ( scale {, offset {, units {, points {, preTrig }}}} ) = SONGetADCInfo ( fh , chan ) Inputs FH SON file handle CHAN Channel number 0 to SONMaxChan () - 1 Outputs SCALE } As defined in Spike2 OFFSET } UNITS character string with units POINTS number of points for ADCMark channel PRETRIG number of pre - Trigger points for ADCMArk channel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetADCInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetChanComment.m/","text":"SONGetChanComment \u00b6 SONGETCHANCOMMENT returns the comment string for the specified channel COMMENT = SONGETCHANCOMMENT ( FH , CHAN ) FH SON file handle CHAN Channel number ( 0 to SONMAXCHANS - 1 ) Returns the channel comment as a string . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetChanComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetChanComment.m/#songetchancomment","text":"SONGETCHANCOMMENT returns the comment string for the specified channel COMMENT = SONGETCHANCOMMENT ( FH , CHAN ) FH SON file handle CHAN Channel number ( 0 to SONMAXCHANS - 1 ) Returns the channel comment as a string . Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetChanComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetChanTitle.m/","text":"SONGetChanTitle \u00b6 SONGETCHANTITLE Returns the channel title TITLE=SONGETCHANTITLE(FH, CHAN) INPUTS FH is the file handle CHAN is the channel number (0 to SONMaxChans()-1 OUTPUT the channel title as a string Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetChanTitle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetChanTitle.m/#songetchantitle","text":"SONGETCHANTITLE Returns the channel title TITLE=SONGETCHANTITLE(FH, CHAN) INPUTS FH is the file handle CHAN is the channel number (0 to SONMaxChans()-1 OUTPUT the channel title as a string Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetChanTitle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetEventData.m/","text":"SONGetEventData \u00b6 SONGETEVENTDATA returns the timings for an Event or marker channel Implemented through SONGetEventData . dll [ npoints , times , levlow ] = SONGETEVENTDATA ( fh , chan , maxpoints , stime , etime {, filtermask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) LEVLOW = For a EventBoth ( level ) channel , this is set to 1 if the first event is a high to low transition , 0 otherwise For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetEventData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetEventData.m/#songeteventdata","text":"SONGETEVENTDATA returns the timings for an Event or marker channel Implemented through SONGetEventData . dll [ npoints , times , levlow ] = SONGETEVENTDATA ( fh , chan , maxpoints , stime , etime {, filtermask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) LEVLOW = For a EventBoth ( level ) channel , this is set to 1 if the first event is a high to low transition , 0 otherwise For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetEventData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtMarkData.m/","text":"SONGetExtMarkData \u00b6 SONGETEXTMARKDATA returns the timings , marker values and extra data for an AdcMark , RealMark or TextMark channel Implemented through SONGetExtMarkData . dll [ npoints , times , markers , extra ] = SONGETEXTMARKDATA ( fh , chan , maxpoints , stime , etime {, filtermask }) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return ( up to 32767 , if zero this will be set to 32767 ) STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) MARKERS = an NPOINT x 4 byte array , with 4 markers for each of the timestamps in TIMES . EXTRA = An X x NPOINT array . The NPOINT columns contain the extra data for each marker . The length of the columns varies between channels . EXTRA is int16 for ADCMark channels , single for RealMark and uint8 for TextMark Note : If required , cast TextMark EXTRA data to type char in MATLAB If you do not need the EXTRA data , use SONGetMarkData instead For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King 's College London 2005-2006","title":"SONGetExtMarkData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtMarkData.m/#songetextmarkdata","text":"SONGETEXTMARKDATA returns the timings , marker values and extra data for an AdcMark , RealMark or TextMark channel Implemented through SONGetExtMarkData . dll [ npoints , times , markers , extra ] = SONGETEXTMARKDATA ( fh , chan , maxpoints , stime , etime {, filtermask }) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return ( up to 32767 , if zero this will be set to 32767 ) STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) MARKERS = an NPOINT x 4 byte array , with 4 markers for each of the timestamps in TIMES . EXTRA = An X x NPOINT array . The NPOINT columns contain the extra data for each marker . The length of the columns varies between channels . EXTRA is int16 for ADCMark channels , single for RealMark and uint8 for TextMark Note : If required , cast TextMark EXTRA data to type char in MATLAB If you do not need the EXTRA data , use SONGetMarkData instead For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King 's College London 2005-2006","title":"SONGetExtMarkData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtMarkInfo.m/","text":"SONGetExtMarkInfo \u00b6 SONGETEXTMARKINFO returns details about an extended marker channel [UNITS, POINTS, PRETRIG]=SONGETEXTMARKINFO(FH, CHAN) INPUTS: FH the SON file handle CHAN channel number (0 - SONMaxChans()-1) OUTPUTS: UNITS a string with the channel units POINTS the number of items of extra data PRETRIG the number of pre-trigger items Returns no error codes Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetExtMarkInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtMarkInfo.m/#songetextmarkinfo","text":"SONGETEXTMARKINFO returns details about an extended marker channel [UNITS, POINTS, PRETRIG]=SONGETEXTMARKINFO(FH, CHAN) INPUTS: FH the SON file handle CHAN channel number (0 - SONMaxChans()-1) OUTPUTS: UNITS a string with the channel units POINTS the number of items of extra data PRETRIG the number of pre-trigger items Returns no error codes Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetExtMarkInfo"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtraData.m/","text":"SONGetExtraData \u00b6 SONGETEXTRADATA reads or writes the extra data area of a SON file [ ERR , BUFFER ] = SONGETEXTRADATA ( FH , N , DATATYPE , BYTEOFFSET , FLAG ) or ERR = SONGETEXTRADATA ( FH , BUFFER , BYTEOFFSET , FLAG ) INPUTS : FH the SON file handle N the number of items to read DATATYPE string class descriptor for the read BYTEOFFSET the offset from the start of the data area BUFFER the data to write FLAG 0 to read and 1 to write data OUTPUTS ERR = 0 if OK or a negative error BUFFER the output data for a read e . g . [ err data ] = SONGetExtraData ( fh , 100 , ' int32 ' , 64 , 0 ) reads 100 32 - bit integer values from the data area starting 64 bytes into the area Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetExtraData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtraData.m/#songetextradata","text":"SONGETEXTRADATA reads or writes the extra data area of a SON file [ ERR , BUFFER ] = SONGETEXTRADATA ( FH , N , DATATYPE , BYTEOFFSET , FLAG ) or ERR = SONGETEXTRADATA ( FH , BUFFER , BYTEOFFSET , FLAG ) INPUTS : FH the SON file handle N the number of items to read DATATYPE string class descriptor for the read BYTEOFFSET the offset from the start of the data area BUFFER the data to write FLAG 0 to read and 1 to write data OUTPUTS ERR = 0 if OK or a negative error BUFFER the output data for a read e . g . [ err data ] = SONGetExtraData ( fh , 100 , ' int32 ' , 64 , 0 ) reads 100 32 - bit integer values from the data area starting 64 bytes into the area Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetExtraData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtraDataSize.m/","text":"SONGetExtraDataSize \u00b6 SONGETEXTRADATASIZE returns the size of the extra data area of file FH in bytes BYTES=SONGETEXTRADATASIZE(FH) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetExtraDataSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetExtraDataSize.m/#songetextradatasize","text":"SONGETEXTRADATASIZE returns the size of the extra data area of file FH in bytes BYTES=SONGETEXTRADATASIZE(FH) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetExtraDataSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFileComment.m/","text":"SONGetFileComment \u00b6 SONGETFILECOMMENT returns the file comment STRING=SONGETFILE(FH, N) where FH is the file handle and N is the comment number (0-4); Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFileComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFileComment.m/#songetfilecomment","text":"SONGETFILECOMMENT returns the file comment STRING=SONGETFILE(FH, N) where FH is the file handle and N is the comment number (0-4); Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFileComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFreeChan.m/","text":"SONGetFreeChan \u00b6 SONGETFREECHAN returns the number of the first free channel in a file CHAN=SONGETFREECHAN(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFreeChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFreeChan.m/#songetfreechan","text":"SONGETFREECHAN returns the number of the first free channel in a file CHAN=SONGETFREECHAN(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFreeChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFreeChanl.m/","text":"SONGetFreeChanl \u00b6 SONGETFREECHAN returns the number of the first free channel in a file CHAN=SONGETFREECHAN(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFreeChanl"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetFreeChanl.m/#songetfreechanl","text":"SONGETFREECHAN returns the number of the first free channel in a file CHAN=SONGETFREECHAN(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetFreeChanl"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetMarkData.m/","text":"SONGetMarkData \u00b6 SONGETMARKDATA returns the timings and marker values for a Marker , AdcMark , RealMark or TextMark channel Implemented through SONGetMarkData . dll [ npoints , times , markers ] = SONGETMARKDATA ( fh , chan , maxpoints , stime , etime {, filtermask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return ( up to 32767 , if zero will be set to 32767 ) STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) DATA = an NPOINT x 4 byte array , with 4 markers for each of the timestamps in TIMES . Note : For easier compatability with version 1 . 0 of the library use a structure for the outputs e . g . [ npoints , data . timings , data . markers ] = SONGETMARKDATA ( fh , chan , maxpoints , stime , etime ) For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetMarkData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetMarkData.m/#songetmarkdata","text":"SONGETMARKDATA returns the timings and marker values for a Marker , AdcMark , RealMark or TextMark channel Implemented through SONGetMarkData . dll [ npoints , times , markers ] = SONGETMARKDATA ( fh , chan , maxpoints , stime , etime {, filtermask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data values to return ( up to 32767 , if zero will be set to 32767 ) STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error TIMES = an NPOINT column vector containing the timestamps ( in clock ticks ) DATA = an NPOINT x 4 byte array , with 4 markers for each of the timestamps in TIMES . Note : For easier compatability with version 1 . 0 of the library use a structure for the outputs e . g . [ npoints , data . timings , data . markers ] = SONGETMARKDATA ( fh , chan , maxpoints , stime , etime ) For error codes , see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetMarkData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetRealData.m/","text":"SONGetRealData \u00b6 SONGETREALDATA returns data for Adc , AdcMark , RealWave ( and RealMark ? ) data channels Implemented through SONGetRealData . dll [ npoints , bTime , data ] = SONGETREALDATA ( fh , chan ,... maxpoints , sTime , eTime {, FilterMask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data points to return The routine will calculate MAXPOINTS if this is passed as zero or less . STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error BTIME = the time for the first sample returned in data ( in clock ticks ) DATA = the output data array Alternative call : [ npoints , bTime ] = SONGETREALDATA ( fh , chan ,... data , sTime , eTime {, FilterMask } ) Here , DATA must be a pre - allocated int16 column vector . SON32 . DLL will place data directly into this array in the matlab workspace . For repeated calls , this can be faster but it breaks normal matlab conventions . For error codes returned in NPOINTS see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetRealData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetRealData.m/#songetrealdata","text":"SONGETREALDATA returns data for Adc , AdcMark , RealWave ( and RealMark ? ) data channels Implemented through SONGetRealData . dll [ npoints , bTime , data ] = SONGETREALDATA ( fh , chan ,... maxpoints , sTime , eTime {, FilterMask } ) INPUTS : FH = file handle CHAN = channel number 0 to SONMAXCHANS - 1 MAXPOINTS = Maximum number of data points to return The routine will calculate MAXPOINTS if this is passed as zero or less . STIME = the start time for the data search ( in clock ticks ) ETIME = the end time for teh search ( in clock ticks ) FILTERMASK if present is a filter mask structure There will be no filtering if this is absent . OUTPUTS : NPOINTS = number of data points returned or a negative error BTIME = the time for the first sample returned in data ( in clock ticks ) DATA = the output data array Alternative call : [ npoints , bTime ] = SONGETREALDATA ( fh , chan ,... data , sTime , eTime {, FilterMask } ) Here , DATA must be a pre - allocated int16 column vector . SON32 . DLL will place data directly into this array in the matlab workspace . For repeated calls , this can be faster but it breaks normal matlab conventions . For error codes returned in NPOINTS see the CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetRealData"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetTimePerADC.m/","text":"SONGetTimePerADC \u00b6 SONGETTIMEPERADC returns the number of clock ticks per ADC conversion TICKS=SONGETTIMEPERADC(FH) FH = file handle Returns the number of ticks (no error codes) See also SONGETUSPERTIME, SONCHANDIVIDE Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetTimePerADC"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetTimePerADC.m/#songettimeperadc","text":"SONGETTIMEPERADC returns the number of clock ticks per ADC conversion TICKS=SONGETTIMEPERADC(FH) FH = file handle Returns the number of ticks (no error codes) See also SONGETUSPERTIME, SONCHANDIVIDE Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetTimePerADC"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetVersion.m/","text":"SONGetVersion \u00b6 SONGETVERSION returns the SON file system version number for a file VERSION = SONGETVERSION ( FH ) where fh is the SON File handle Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetVersion"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetVersion.m/#songetversion","text":"SONGETVERSION returns the SON file system version number for a file VERSION = SONGETVERSION ( FH ) where fh is the SON File handle Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONGetVersion"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetusPerTime.m/","text":"SONGetusPerTime \u00b6 SONGETUSPERTIME returns the tick interval in units of SONTimeBase() USPERTIME=SONGETUSPERTIME(FH) FH SON file handle See also SONGETTIMEPERADC, SONCHANDIVIDE Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetusPerTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONGetusPerTime.m/#songetuspertime","text":"SONGETUSPERTIME returns the tick interval in units of SONTimeBase() USPERTIME=SONGETUSPERTIME(FH) FH SON file handle See also SONGETTIMEPERADC, SONCHANDIVIDE Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONGetusPerTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONIdealRate.m/","text":"SONIdealRate \u00b6 SONIDEALRATE gets or sets the ideal sampling rate on a channel RATE = SONIDEALRATE ( FH , CHAN ) returns the current rate on channel CHAN in file FH RATE = SONIDEALRATE ( FH , CHAN , NEWRATE ) returns the rate at the time of the call an sets a new rate if NEWRATE > 0 Caution : this ovewrites the existing rate setting in the file FH is the SON file handle , CHAN is the channel number ( 0 - SONMaxChans () - 1 ) Note that the ideal rate setting does not influence the real rate of sampling Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONIdealRate"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONIdealRate.m/#sonidealrate","text":"SONIDEALRATE gets or sets the ideal sampling rate on a channel RATE = SONIDEALRATE ( FH , CHAN ) returns the current rate on channel CHAN in file FH RATE = SONIDEALRATE ( FH , CHAN , NEWRATE ) returns the rate at the time of the call an sets a new rate if NEWRATE > 0 Caution : this ovewrites the existing rate setting in the file FH is the SON file handle , CHAN is the channel number ( 0 - SONMaxChans () - 1 ) Note that the ideal rate setting does not influence the real rate of sampling Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONIdealRate"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONIsSaving.m/","text":"SONIsSaving \u00b6 SONISSAVING returns the save state for a specified channel STATE = SONISSAVING ( FH , CHAN ) where FH is the SON file handle and CHAN is the channel number ( 0 - SONMaxChan () - 1 ) Returns 0 if not saving , 1 if saving or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONIsSaving"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONIsSaving.m/#sonissaving","text":"SONISSAVING returns the save state for a specified channel STATE = SONISSAVING ( FH , CHAN ) where FH is the SON file handle and CHAN is the channel number ( 0 - SONMaxChan () - 1 ) Returns 0 if not saving , 1 if saving or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONIsSaving"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONItemSize.m/","text":"SONItemSize \u00b6 SONITEMSIZE returns the size of a data item on the specified channel (bytes) BYTES=SONITEMSIZE(FH, CHAN) where FH is the SON file handle and CHAN is the channel number (0 - SONMaxChan()-1) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONItemSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONItemSize.m/#sonitemsize","text":"SONITEMSIZE returns the size of a data item on the specified channel (bytes) BYTES=SONITEMSIZE(FH, CHAN) where FH is the SON file handle and CHAN is the channel number (0 - SONMaxChan()-1) Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONItemSize"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONKillRange.m/","text":"SONKillRange \u00b6 SONKILLRANGE attempts to discard data from a file between two times FLAG = SONKILLRANGE ( FH , CHAN , STARTTIME , ENDTIME ) FH is the SON file handle , CHAN is the channel number and STARTTIME and ENDTIME specify the time range ( in clock ticks within which to discard data . This is only useful when data are being written to a new file . See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONKillRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONKillRange.m/#sonkillrange","text":"SONKILLRANGE attempts to discard data from a file between two times FLAG = SONKILLRANGE ( FH , CHAN , STARTTIME , ENDTIME ) FH is the SON file handle , CHAN is the channel number and STARTTIME and ENDTIME specify the time range ( in clock ticks within which to discard data . This is only useful when data are being written to a new file . See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONKillRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLastPointsTime.m/","text":"SONLastPointsTime \u00b6 SONLASTPOINTSTIME returns the time for which a read will terminate Implemented through SONLastPointsTime . dll TIME = SONGETADCDATA ( FH , CHAN , ETIME , STIME , LPOINTS , BADC {, FILTERMASK } ) INPUTS : FH SON File Handle CHAN Channel number ( 1 to SONMaxChannels ) STIME Searches back from this time ETIME stops search at this time ( eTime must be less than sTime ) LPOINTS the number of points it is dsired to read BADC ADCMark data will be treated as Adc if this set FILTERMASK , if present , a filter mask Returns the time at which the read will end i . e . the time of the final data point or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONLastPointsTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLastPointsTime.m/#sonlastpointstime","text":"SONLASTPOINTSTIME returns the time for which a read will terminate Implemented through SONLastPointsTime . dll TIME = SONGETADCDATA ( FH , CHAN , ETIME , STIME , LPOINTS , BADC {, FILTERMASK } ) INPUTS : FH SON File Handle CHAN Channel number ( 1 to SONMaxChannels ) STIME Searches back from this time ETIME stops search at this time ( eTime must be less than sTime ) LPOINTS the number of points it is dsired to read BADC ADCMark data will be treated as Adc if this set FILTERMASK , if present , a filter mask Returns the time at which the read will end i . e . the time of the final data point or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONLastPointsTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLastTime.m/","text":"SONLastTime \u00b6 SONLASTTIME returns information about the last entry on a channel before a specified time Implemented through SONLastTime . dll [ time , data , markers , markerflag ] = ... SONGETADCDATA ( fh , chan , eTime , sTime {, FilterMask } ) INPUTS : FH SON File Handle CHAN Channel number ( 1 to SONMaxChannels ) STIME Searches back from this time ETIME stops search at this time ( eTime must be less than sTime ) FILTERMASK , if present , a filter mask OUTPUTS : TIME The time of the last data point between ETIME and STIME or a negative error code DATA Value at TIME for an ADC or Real channel . For an EventBoth channel the InitLow value MARKERS the marker codes for the event at TIME for a marker channel MARKERFLAG Set to 1 if CHAN is a marker channel , 0 otherwise Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONLastTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLastTime.m/#sonlasttime","text":"SONLASTTIME returns information about the last entry on a channel before a specified time Implemented through SONLastTime . dll [ time , data , markers , markerflag ] = ... SONGETADCDATA ( fh , chan , eTime , sTime {, FilterMask } ) INPUTS : FH SON File Handle CHAN Channel number ( 1 to SONMaxChannels ) STIME Searches back from this time ETIME stops search at this time ( eTime must be less than sTime ) FILTERMASK , if present , a filter mask OUTPUTS : TIME The time of the last data point between ETIME and STIME or a negative error code DATA Value at TIME for an ADC or Real channel . For an EventBoth channel the InitLow value MARKERS the marker codes for the event at TIME for a marker channel MARKERFLAG Set to 1 if CHAN is a marker channel , 0 otherwise Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONLastTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLatestTime.m/","text":"SONLatestTime \u00b6 SONLATESTTIME is used to flush data to disk FLAG=SONLATESTTIME(FH, CHAN, STIME) where FH is the SON file handle, Chan is the channel, and STIME is the latest valid time in clock ticks See CED documentaion Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONLatestTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLatestTime.m/#sonlatesttime","text":"SONLATESTTIME is used to flush data to disk FLAG=SONLATESTTIME(FH, CHAN, STIME) where FH is the SON file handle, Chan is the channel, and STIME is the latest valid time in clock ticks See CED documentaion Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONLatestTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLoad.m/","text":"SONLoad \u00b6 SONLOAD loads the son32 . dll library and defines global constants Version 32 of the SON library works only under Windows and requires version 7 of MATALAB and a copy of CED 's son32.dll. The routines use CEDs son32 . dll to provide I / O . This file must be present in a 'c:\\Spike5' directory ( unless you edit SONLoad AND SONDef . h and recompile the C source files ) Routines are accessed via calllib where possible or through external dlls where callib can not presently provide support ( i . e . where there are non - scalar structures or fields in the call to son32 . dll ) SONLoad () has no arguments and should be run before calling any library routines that use the MATLAB calllib function . Author : Malcolm Lidierth Matlab SON library : Copyright 2005 \u00a9 King \u0092 s College London","title":"SONLoad"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONLoad.m/#sonload","text":"SONLOAD loads the son32 . dll library and defines global constants Version 32 of the SON library works only under Windows and requires version 7 of MATALAB and a copy of CED 's son32.dll. The routines use CEDs son32 . dll to provide I / O . This file must be present in a 'c:\\Spike5' directory ( unless you edit SONLoad AND SONDef . h and recompile the C source files ) Routines are accessed via calllib where possible or through external dlls where callib can not presently provide support ( i . e . where there are non - scalar structures or fields in the call to son32 . dll ) SONLoad () has no arguments and should be run before calling any library routines that use the MATLAB calllib function . Author : Malcolm Lidierth Matlab SON library : Copyright 2005 \u00a9 King \u0092 s College London","title":"SONLoad"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONMaxChans.m/","text":"SONMaxChans \u00b6 SONMAXCHANS returns the number of channels supported by a SON file N=SONMAXCHANS(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONMaxChans"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONMaxChans.m/#sonmaxchans","text":"SONMAXCHANS returns the number of channels supported by a SON file N=SONMAXCHANS(FH) where FH is the SON file handle Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONMaxChans"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONMaxTime.m/","text":"SONMaxTime \u00b6 SONMAXTIME returns the maximum time for data in a file TIME = SONMAXTIME ( FH ) where FH is the SON file handle . TIME is returned in clock ticks ML / 05 / 05","title":"SONMaxTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONMaxTime.m/#sonmaxtime","text":"SONMAXTIME returns the maximum time for data in a file TIME = SONMAXTIME ( FH ) where FH is the SON file handle . TIME is returned in clock ticks ML / 05 / 05","title":"SONMaxTime"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONOpenNewFile.m/","text":"SONOpenNewFile \u00b6 SONOPENNEWFILE (obsolete) creates a new SON file and returns the handle HANDLE=SONOPENNEWFILE(STR, EXTRABYTES) where STR is the file name (with path). EXTRABYTES sets the size of the optional user data area Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONOpenNewFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONOpenNewFile.m/#sonopennewfile","text":"SONOPENNEWFILE (obsolete) creates a new SON file and returns the handle HANDLE=SONOPENNEWFILE(STR, EXTRABYTES) where STR is the file name (with path). EXTRABYTES sets the size of the optional user data area Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONOpenNewFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONOpenOldFile.m/","text":"SONOpenOldFile \u00b6 SONOPENOLDFILE opens an existing a SON file and returns a handle from SON32 . DLL . Note that this is not a MATLAB handle . FH = SONOPENOLDFILE ( filename , iMode ) filename is a string iMode = 0 for Read / Write 1 for Read Only 2 for Read / Write but accept Read Only Returns the SON file handle or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONOpenOldFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONOpenOldFile.m/#sonopenoldfile","text":"SONOPENOLDFILE opens an existing a SON file and returns a handle from SON32 . DLL . Note that this is not a MATLAB handle . FH = SONOPENOLDFILE ( filename , iMode ) filename is a string iMode = 0 for Read / Write 1 for Read Only 2 for Read / Write but accept Read Only Returns the SON file handle or a negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONOpenOldFile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhyChan.m/","text":"SONPhyChan \u00b6 SONPHYCHAN returns the physical channel ( hardware port ) for a channel in a file PCHAN = SONPHYCHAN ( FH , CHAN ) where FH is the SON file handle and CHAN is the file channel number . PCHAN is negative for channels with no hardware port Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhyChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhyChan.m/#sonphychan","text":"SONPHYCHAN returns the physical channel ( hardware port ) for a channel in a file PCHAN = SONPHYCHAN ( FH , CHAN ) where FH is the SON file handle and CHAN is the file channel number . PCHAN is negative for channels with no hardware port Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhyChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhySz.m/","text":"SONPhySz \u00b6 SONPHYSZ returns the buffer size for the specified chanel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhySz"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhySz.m/#sonphysz","text":"SONPHYSZ returns the buffer size for the specified chanel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhySz"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhysChan.m/","text":"SONPhysChan \u00b6 SONPHYCHAN returns the physical channel ( hardware port ) for a channel in a file PCHAN = SONPHYCHAN ( FH , CHAN ) where FH is the SON file handle and CHAN is the file channel number . PCHAN is negative for channels with no hardware port Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhysChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONPhysChan.m/#sonphyschan","text":"SONPHYCHAN returns the physical channel ( hardware port ) for a channel in a file PCHAN = SONPHYCHAN ( FH , CHAN ) where FH is the SON file handle and CHAN is the file channel number . PCHAN is negative for channels with no hardware port Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONPhysChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSave.m/","text":"SONSave \u00b6 SONSAVE sets the write state for a channel from a specified time FLAG = SONSAVE ( FH , CHAN , STIME , BKEEP ) INPUTS : FH is the SON file handle CHAN is a channel number ( 0 - SONMaxChans () - 1 ) or - 1 for all channels STIME the time for this write state to take effect from ( clock ticks ) BKEEP non - zero to keep , zero to discard data Returns 0 if changes are effective , 0 if not or a negative error code See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSave"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSave.m/#sonsave","text":"SONSAVE sets the write state for a channel from a specified time FLAG = SONSAVE ( FH , CHAN , STIME , BKEEP ) INPUTS : FH is the SON file handle CHAN is a channel number ( 0 - SONMaxChans () - 1 ) or - 1 for all channels STIME the time for this write state to take effect from ( clock ticks ) BKEEP non - zero to keep , zero to discard data Returns 0 if changes are effective , 0 if not or a negative error code See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSave"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSaveRange.m/","text":"SONSaveRange \u00b6 SONSAVERANGE sets the write state to save for a channel in the given time range FLAG = SONSAVERANGE ( FH , CHAN , STARTTIME , ENDTIME ) INPUTS : FH is the SON file handle CHAN is a channel number ( 0 - SONMaxChans () - 1 ) or - 1 for all channels STARTTIME the time to save data from ENDTIME the end time Note that times are in clock ticks Returns 0 if changes are effective , 0 if not or a negative error code See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONSaveRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSaveRange.m/#sonsaverange","text":"SONSAVERANGE sets the write state to save for a channel in the given time range FLAG = SONSAVERANGE ( FH , CHAN , STARTTIME , ENDTIME ) INPUTS : FH is the SON file handle CHAN is a channel number ( 0 - SONMaxChans () - 1 ) or - 1 for all channels STARTTIME the time to save data from ENDTIME the end time Note that times are in clock ticks Returns 0 if changes are effective , 0 if not or a negative error code See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005 - 2006","title":"SONSaveRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCOffset.m/","text":"SONSetADCOffset \u00b6 SONSETADCOFFSET sets the offset on an ADC channel SONADCOFFSET ( FH , CHAN , OFFSET ) where FH is the SON file handle , CHAN is the channel number and OFFSET is the new value to be written to the file An ADC value is converted to a real value as : Real value = ( 16 - bit ADC value * scale / 6553 . 6 ) + offset see also : SONSetADCScale No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCOffset"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCOffset.m/#sonsetadcoffset","text":"SONSETADCOFFSET sets the offset on an ADC channel SONADCOFFSET ( FH , CHAN , OFFSET ) where FH is the SON file handle , CHAN is the channel number and OFFSET is the new value to be written to the file An ADC value is converted to a real value as : Real value = ( 16 - bit ADC value * scale / 6553 . 6 ) + offset see also : SONSetADCScale No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCOffset"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCScale.m/","text":"SONSetADCScale \u00b6 SONSETADCSCALE sets the scale on an ADC channel SONADCOFFSET ( FH , CHAN , SCALE ) where FH is the SON file handle , CHAN is the channel number and SCALE is the new value to be written to the file An ADC value is converted to a real value as : Real value = ( 16 - bit ADC value * scale / 6553 . 6 ) + offset see also : SONSetADCOffset No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCScale"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCScale.m/#sonsetadcscale","text":"SONSETADCSCALE sets the scale on an ADC channel SONADCOFFSET ( FH , CHAN , SCALE ) where FH is the SON file handle , CHAN is the channel number and SCALE is the new value to be written to the file An ADC value is converted to a real value as : Real value = ( 16 - bit ADC value * scale / 6553 . 6 ) + offset see also : SONSetADCOffset No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCScale"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCUnits.m/","text":"SONSetADCUnits \u00b6 SONSETADCUNITS sets the units string for a channel SONADCUNITS ( FH , CHAN , UNITS ) where FH is the SON file handle , CHAN is the channel number and UNITS is the string to be written to the file . No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCUnits"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetADCUnits.m/#sonsetadcunits","text":"SONSETADCUNITS sets the units string for a channel SONADCUNITS ( FH , CHAN , UNITS ) where FH is the SON file handle , CHAN is the channel number and UNITS is the string to be written to the file . No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetADCUnits"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetBuffSpace.m/","text":"SONSetBuffSpace \u00b6 SONSETBUFFSPACE allocates buufer space for file writes Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetBuffSpace"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetBuffSpace.m/#sonsetbuffspace","text":"SONSETBUFFSPACE allocates buufer space for file writes Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetBuffSpace"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetBuffering.m/","text":"SONSetBuffering \u00b6 SONSETBUFFERING specifies the buffer size for writing to a channel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetBuffering"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetBuffering.m/#sonsetbuffering","text":"SONSETBUFFERING specifies the buffer size for writing to a channel Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetBuffering"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetChanComment.m/","text":"SONSetChanComment \u00b6 SONSETCHANCOMMENT sets the channel comment FH = SON file handle CHAN = channel number (0 to Max-1) str = string with new comment Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONSetChanComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetChanComment.m/#sonsetchancomment","text":"SONSETCHANCOMMENT sets the channel comment FH = SON file handle CHAN = channel number (0 to Max-1) str = string with new comment Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONSetChanComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetChanTitle.m/","text":"SONSetChanTitle \u00b6 SONSETCHANTITLE sets the channel title FH = SON file handle CHAN = channel number (0 to Max-1) str = string with new title Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONSetChanTitle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetChanTitle.m/#sonsetchantitle","text":"SONSETCHANTITLE sets the channel title FH = SON file handle CHAN = channel number (0 to Max-1) str = string with new title Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONSetChanTitle"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetEventChan.m/","text":"SONSetEventChan \u00b6 SONSETEVENTCHAN sets up a new event or marker channel ERR = SONSETEVENTCHAN ( FH , CHAN , PHYCH , BUFSZ , COMMENT , TITLE , RATE , KIND ) INPUTS : FH the SON file handle CHAN the channel number PHYCH the physical channel number BUFSZ size of the write buffer COMMENT the channel comment TITLE the channel title RATE the ideal or expected rate KIND is a string that sets the channel type : ' EventRise ' , ' EventFall ' , ' EventBoth ' or ' Marker ' Returns zero or a negative error code in ERR See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetEventChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetEventChan.m/#sonseteventchan","text":"SONSETEVENTCHAN sets up a new event or marker channel ERR = SONSETEVENTCHAN ( FH , CHAN , PHYCH , BUFSZ , COMMENT , TITLE , RATE , KIND ) INPUTS : FH the SON file handle CHAN the channel number PHYCH the physical channel number BUFSZ size of the write buffer COMMENT the channel comment TITLE the channel title RATE the ideal or expected rate KIND is a string that sets the channel type : ' EventRise ' , ' EventFall ' , ' EventBoth ' or ' Marker ' Returns zero or a negative error code in ERR See CED documentation for details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetEventChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetFileClock.m/","text":"SONSetFileClock \u00b6 SONSETFILECLOCK sets the basic time units and the clocks per ADC conversion SONSETFILECLOCK ( FH , USPERTIME , TIMEPERADC ) INPUTS : FH the SON file handle USPERTIME the number of microseconds per clock tick TIMEPERADC the number of clock ticks per ADC conversion See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetFileClock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetFileClock.m/#sonsetfileclock","text":"SONSETFILECLOCK sets the basic time units and the clocks per ADC conversion SONSETFILECLOCK ( FH , USPERTIME , TIMEPERADC ) INPUTS : FH the SON file handle USPERTIME the number of microseconds per clock tick TIMEPERADC the number of clock ticks per ADC conversion See CED documentation for further details Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetFileClock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetFileComment.m/","text":"SONSetFileComment \u00b6 SONSETFILECOMMENT sets one of the five file comment fields SONSETFILECOMMENT ( FH , WHICH , COMMENT ) FH is the SON file handle WHICH selects the comment ( 0 - 4 ) COMMENT is a string No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetFileComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetFileComment.m/#sonsetfilecomment","text":"SONSETFILECOMMENT sets one of the five file comment fields SONSETFILECOMMENT ( FH , WHICH , COMMENT ) FH is the SON file handle WHICH selects the comment ( 0 - 4 ) COMMENT is a string No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetFileComment"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetInitLow.m/","text":"SONSetInitLow \u00b6 SONSETINITLOW sets the initial state on an EventBoth ( level ) channel SONSETINITLOW ( FH , CHAN , FLAG ) where FH is the SON file handle and CHAN is the channel number . FLAG is ' TRUE ' if the first transition is high - to - low , ' FALSE ' otherwise . No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetInitLow"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetInitLow.m/#sonsetinitlow","text":"SONSETINITLOW sets the initial state on an EventBoth ( level ) channel SONSETINITLOW ( FH , CHAN , FLAG ) where FH is the SON file handle and CHAN is the channel number . FLAG is ' TRUE ' if the first transition is high - to - low , ' FALSE ' otherwise . No return value Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetInitLow"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetMarker.m/","text":"SONSetMarker \u00b6 SONSETMARKER replaces the data associated with a marker on disc Implemented through SONSetMarker . dll RET = SONSETMARKER ( FH , CHAN , TIME , NEWTIME , { NEWMARKERS , { NEWEXTRA }} ) FH = the SON file handle CHAN = the target marker channel TIME = the current timestamp of the target marker entry ( clock ticks ) NEWTIME = a new time that will replace the timestamp in TIME NEWMARKERS = if present , a set of 4 uint8 marker values that will replace those on disc NEWEXTRA = if present , the extra data to replace all or some of the existing extra data These may be : int16 ( for AdcMark ) single ( for RealMark ) or uint8 ( for TextMark ) ( N . B . not char which is 16 bit in matlab ) The data type for NEWEXTRA must match that of the target channel ( the function returns SON_NO_EXTRA if it does not . e . g SONSetMarker ( fh , 2 , 140100 , 140200 ) replaces the timestamp only SONSetMarker ( fh , 2 , 140100 , 14020 , uint8 ( [ 22 33 44 55 ] )) replaces the markers also SONSetMarker ( fh , 2 , 140100 , 14020 , uint8 ( [ 22 33 44 55 ] ) , int16 ( [ 0 0 ] )) also replaces the first two extra data entries with zero on an AdcMark channel Returns : 1 if the replacement occured . 0 if not e . g . NEWEXTRA is longer than the existing entry or the new timestamp would break the temporal sequence of successive entries or an negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetMarker"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetMarker.m/#sonsetmarker","text":"SONSETMARKER replaces the data associated with a marker on disc Implemented through SONSetMarker . dll RET = SONSETMARKER ( FH , CHAN , TIME , NEWTIME , { NEWMARKERS , { NEWEXTRA }} ) FH = the SON file handle CHAN = the target marker channel TIME = the current timestamp of the target marker entry ( clock ticks ) NEWTIME = a new time that will replace the timestamp in TIME NEWMARKERS = if present , a set of 4 uint8 marker values that will replace those on disc NEWEXTRA = if present , the extra data to replace all or some of the existing extra data These may be : int16 ( for AdcMark ) single ( for RealMark ) or uint8 ( for TextMark ) ( N . B . not char which is 16 bit in matlab ) The data type for NEWEXTRA must match that of the target channel ( the function returns SON_NO_EXTRA if it does not . e . g SONSetMarker ( fh , 2 , 140100 , 140200 ) replaces the timestamp only SONSetMarker ( fh , 2 , 140100 , 14020 , uint8 ( [ 22 33 44 55 ] )) replaces the markers also SONSetMarker ( fh , 2 , 140100 , 14020 , uint8 ( [ 22 33 44 55 ] ) , int16 ( [ 0 0 ] )) also replaces the first two extra data entries with zero on an AdcMark channel Returns : 1 if the replacement occured . 0 if not e . g . NEWEXTRA is longer than the existing entry or the new timestamp would break the temporal sequence of successive entries or an negative error code Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetMarker"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetRealChan.m/","text":"SONSetRealChan \u00b6 SONSETREALCHAN creates real wave channel RET = SONSETREALCHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE ,... COMMENT , CHANTITLE , SCALE , OFFSET , UNITS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string SCALE = scale factor OFFSET = offset UNITS = channel units string Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetRealChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetRealChan.m/#sonsetrealchan","text":"SONSETREALCHAN creates real wave channel RET = SONSETREALCHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE ,... COMMENT , CHANTITLE , SCALE , OFFSET , UNITS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string SCALE = scale factor OFFSET = offset UNITS = channel units string Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetRealChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetRealMarkChan.m/","text":"SONSetRealMarkChan \u00b6 SONSETREALMARKCHAN creates a REALMARK channel RET = SONSETREALMARKCHAN ( FH , CHAN , SPHYCH , BUFSIZE , COMMENT ,... CHANTITLE , RATE , MINIMUM , MAXIMUM , UNITS , POINTS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = expected mean rate ( only used in sampling ) MAXIMUM = approximate maximum value ( for display only ) MINIMUM = approximate minimum value ( for display only ) UNITS = channel units string POINTS = number of extra data entries for each marker Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetRealMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetRealMarkChan.m/#sonsetrealmarkchan","text":"SONSETREALMARKCHAN creates a REALMARK channel RET = SONSETREALMARKCHAN ( FH , CHAN , SPHYCH , BUFSIZE , COMMENT ,... CHANTITLE , RATE , MINIMUM , MAXIMUM , UNITS , POINTS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = expected mean rate ( only used in sampling ) MAXIMUM = approximate maximum value ( for display only ) MINIMUM = approximate minimum value ( for display only ) UNITS = channel units string POINTS = number of extra data entries for each marker Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetRealMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetTextMarkChan.m/","text":"SONSetTextMarkChan \u00b6 SONSETTEXTMARKCHAN creates a TEXTMARK channel FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = the expected data rate ( during sampling ) UNITS = channel units string POINTS = maximum number of characters per marker Returns zero or a negagtive error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetTextMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetTextMarkChan.m/#sonsettextmarkchan","text":"SONSETTEXTMARKCHAN creates a TEXTMARK channel FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = the expected data rate ( during sampling ) UNITS = channel units string POINTS = maximum number of characters per marker Returns zero or a negagtive error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetTextMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetWaveChan.m/","text":"SONSetWaveChan \u00b6 SONSETWAVECHAN creates an ADC channel RET = SONSETWAVECHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE ,... COMMENT , CHANTITLE , SCALE , OFFSET , UNITS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string SCALE = scale factor OFFSET = offset UNITS = channel units string Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetWaveChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetWaveChan.m/#sonsetwavechan","text":"SONSETWAVECHAN creates an ADC channel RET = SONSETWAVECHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE ,... COMMENT , CHANTITLE , SCALE , OFFSET , UNITS ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string SCALE = scale factor OFFSET = offset UNITS = channel units string Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetWaveChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetWaveMarkChan.m/","text":"SONSetWaveMarkChan \u00b6 SONSETWAVEMARKCHAN creates a REALMARK channel RET = SONSETWAVEMARKCHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE , COMMENT ,... CHANTITLE , RATE , SCALE , OFFSET , UNITS , POINTS , PRETRIG , NTRACE ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = expected mean rate ( only used in sampling ) SCALE = scale factor OFFSET = offset UNITS = channel units string POINTS = number of extra data entries for each marker PRETRIG = pre - trigger wvaeform points NTRACE = number of interleaved traces ( 1 to 4 ) Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetWaveMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONSetWaveMarkChan.m/#sonsetwavemarkchan","text":"SONSETWAVEMARKCHAN creates a REALMARK channel RET = SONSETWAVEMARKCHAN ( FH , CHAN , SPHYCH , DVD , BUFSIZE , COMMENT ,... CHANTITLE , RATE , SCALE , OFFSET , UNITS , POINTS , PRETRIG , NTRACE ) FH = SON file handle CHAN = the channel number for the new channel SPHYCH = the physical channel number DVD = the number of clock ticks per sample BUFSIZE = the size of the internal buffer ( up to 32768 bytes ) COMMENT = channel comment string CHANTITLE = channel title string RATE = expected mean rate ( only used in sampling ) SCALE = scale factor OFFSET = offset UNITS = channel units string POINTS = number of extra data entries for each marker PRETRIG = pre - trigger wvaeform points NTRACE = number of interleaved traces ( 1 to 4 ) Returns zero or a negative error Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONSetWaveMarkChan"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONTimeBase.m/","text":"SONTimeBase \u00b6 SONTIMEBASE Get or set the base time units for the file ( usually 1 e - 6 seconds ) DTICKLEN = SONTIMEBASE ( FH , DTB ) FH SON file handle DTB If <= 0 ignored > 0 the new value to set Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONTimeBase"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONTimeBase.m/#sontimebase","text":"SONTIMEBASE Get or set the base time units for the file ( usually 1 e - 6 seconds ) DTICKLEN = SONTIMEBASE ( FH , DTB ) FH SON file handle DTB If <= 0 ignored > 0 the new value to set Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONTimeBase"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONUpdateStart.m/","text":"SONUpdateStart \u00b6 SONUPDATESTART flushes the SON file header to disc RET=SONUPDATESTART(FH) where FH is the SON file handle Returns zero or a negative error Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONUpdateStart"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONUpdateStart.m/#sonupdatestart","text":"SONUPDATESTART flushes the SON file header to disc RET=SONUPDATESTART(FH) where FH is the SON file handle Returns zero or a negative error Author:Malcolm Lidierth Matlab SON library: Copyright \u00a9 The Author & King's College London 2005-2006","title":"SONUpdateStart"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteADCBlock.m/","text":"SONWriteADCBlock \u00b6 SONWRITEADCBLOCK writes data to an ADC channel RET = SONWRITEADCBLOCK ( FH , CHAN , BUFFER , COUNT , STARTTIME ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written ( int16 ADC data ) COUNT the number of data items to write from buffer STARTTIME the time of the first sample in buffer ( in clock ticks ) RET is the time for the next sample to be supplied in a subsequqnt call to SONWRITEADCBLOCK ( assuming continuous sampling ) or a negative error code . Fo efficient use of disc space , COUNT should be a multiple of ( BUFSIZE - 20 bytes ) / 2 , where BUFSIZE is supplied in a prior call to SONSETADCCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteADCBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteADCBlock.m/#sonwriteadcblock","text":"SONWRITEADCBLOCK writes data to an ADC channel RET = SONWRITEADCBLOCK ( FH , CHAN , BUFFER , COUNT , STARTTIME ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written ( int16 ADC data ) COUNT the number of data items to write from buffer STARTTIME the time of the first sample in buffer ( in clock ticks ) RET is the time for the next sample to be supplied in a subsequqnt call to SONWRITEADCBLOCK ( assuming continuous sampling ) or a negative error code . Fo efficient use of disc space , COUNT should be a multiple of ( BUFSIZE - 20 bytes ) / 2 , where BUFSIZE is supplied in a prior call to SONSETADCCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteADCBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteEventBlock.m/","text":"SONWriteEventBlock \u00b6 SONWRITEEVENTBLOCK writes data to an ADC channel RET = SONWRITEEVENTBLOCK ( FH , CHAN , BUFFER , COUNT ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written containing int32 timestamps COUNT the number of data items to write from buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETEVENTCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteEventBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteEventBlock.m/#sonwriteeventblock","text":"SONWRITEEVENTBLOCK writes data to an ADC channel RET = SONWRITEEVENTBLOCK ( FH , CHAN , BUFFER , COUNT ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written containing int32 timestamps COUNT the number of data items to write from buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETEVENTCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteEventBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteExtMarkBlock.m/","text":"SONWriteExtMarkBlock \u00b6 SONWRITEEXTMARKBLOCK writes data to a marker channel Calls gatewaySONWriteMarkBlock . dll after transposing EXTRA RET = SONWRITEEXTMARKBLOCK ( FH , CHAN , TIMESTAMPS , MARKERS , EXTRA , COUNT ) INPUTS : FH the SON file handle CHAN the target channel TIMESTAMPS a vector of int32 timestamps for the markers which should be at least COUNT in length MARKERS the 4 xCOUNT array of uint8 marker values , one set of 4 for each timestamp EXTRA the array of extra data , int16 , single or text COUNT the number of marker items to write to the buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETWAVECHAN , SONSETREALMARKCHAN or SONSETTEXTMARKCHAN ( 20 is the size of the block header on disc - see CED documentation ) See also SONSETWAVECHAN , SONSETREALMARKCHAN , SONSETTEXTMARKCHAN , SONWRITEMARKBLOCK Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteExtMarkBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteExtMarkBlock.m/#sonwriteextmarkblock","text":"SONWRITEEXTMARKBLOCK writes data to a marker channel Calls gatewaySONWriteMarkBlock . dll after transposing EXTRA RET = SONWRITEEXTMARKBLOCK ( FH , CHAN , TIMESTAMPS , MARKERS , EXTRA , COUNT ) INPUTS : FH the SON file handle CHAN the target channel TIMESTAMPS a vector of int32 timestamps for the markers which should be at least COUNT in length MARKERS the 4 xCOUNT array of uint8 marker values , one set of 4 for each timestamp EXTRA the array of extra data , int16 , single or text COUNT the number of marker items to write to the buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETWAVECHAN , SONSETREALMARKCHAN or SONSETTEXTMARKCHAN ( 20 is the size of the block header on disc - see CED documentation ) See also SONSETWAVECHAN , SONSETREALMARKCHAN , SONSETTEXTMARKCHAN , SONWRITEMARKBLOCK Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteExtMarkBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteMarkBlock.m/","text":"SONWriteMarkBlock \u00b6 SONWRITEMARKBLOCK writes data to a marker channel Implemented through SONWriteMarkBlock . dll RET = SONWRITEMARKBLOCK ( FH , CHAN , TIMESTAMPS , MARKERS , COUNT ) INPUTS : FH the SON file handle CHAN the target channel TIMESTAMPS a vector of int32 timestamps for the markers which should be at least COUNT in length MARKERS the 4 xCOUNT array of uint8 marker values , one set of 4 for each timestamp COUNT the number of marker items to write to the buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETEVENTCHAN ( 20 is the size of the block header on disc ) see CED documentation See also SONSETEVENTCHAN , SONWRITEEVENTBLOCK , SONWRITEEXTMARKBLOCK Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteMarkBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteMarkBlock.m/#sonwritemarkblock","text":"SONWRITEMARKBLOCK writes data to a marker channel Implemented through SONWriteMarkBlock . dll RET = SONWRITEMARKBLOCK ( FH , CHAN , TIMESTAMPS , MARKERS , COUNT ) INPUTS : FH the SON file handle CHAN the target channel TIMESTAMPS a vector of int32 timestamps for the markers which should be at least COUNT in length MARKERS the 4 xCOUNT array of uint8 marker values , one set of 4 for each timestamp COUNT the number of marker items to write to the buffer Returns zero or a negative error code . For efficient use of disc space , COUNT should be a multiple of ( BUFSIZE bytes - 20 ) / 4 , where BUFSIZE is supplied in a prior call to SONSETEVENTCHAN ( 20 is the size of the block header on disc ) see CED documentation See also SONSETEVENTCHAN , SONWRITEEVENTBLOCK , SONWRITEEXTMARKBLOCK Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteMarkBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteRealBlock.m/","text":"SONWriteRealBlock \u00b6 SONWRITERealBLOCK writes data to an Real channel RET = SONWRITERealBLOCK ( FH , CHAN , BUFFER , COUNT , STARTTIME ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written ( single floating point ) COUNT the number of data items to write from buffer STARTTIME the time of the first sample in buffer ( in clock ticks ) RET is the time for the next sample to be supplied in a subsequqnt call to SONWRITERealBLOCK ( assuming continuous sampling ) or a negative error code . Fo efficient use of disc space , COUNT should be a multiple of ( BUFSIZE - 20 bytes ) / 4 , where BUFSIZE is supplied in a prior call to SONSETRealCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteRealBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONWriteRealBlock.m/#sonwriterealblock","text":"SONWRITERealBLOCK writes data to an Real channel RET = SONWRITERealBLOCK ( FH , CHAN , BUFFER , COUNT , STARTTIME ) INPUTS : FH the SON file handle CHAN the target channel BUFFER the data to be written ( single floating point ) COUNT the number of data items to write from buffer STARTTIME the time of the first sample in buffer ( in clock ticks ) RET is the time for the next sample to be supplied in a subsequqnt call to SONWRITERealBLOCK ( assuming continuous sampling ) or a negative error code . Fo efficient use of disc space , COUNT should be a multiple of ( BUFSIZE - 20 bytes ) / 4 , where BUFSIZE is supplied in a prior call to SONSETRealCHAN ( 20 is the size of the block header on disc ) see CED documentation Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONWriteRealBlock"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONYRange.m/","text":"SONYRange \u00b6 SONYRANGE returns the expected minimum and maximum values for a channel MINMAX = SONYRANGE ( FH , CHAN ) MINMAX is a 2 - element vector containing the minimum and maximum values Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONYRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/SONYRange.m/#sonyrange","text":"SONYRANGE returns the expected minimum and maximum values for a channel MINMAX = SONYRANGE ( FH , CHAN ) MINMAX is a 2 - element vector containing the minimum and maximum values Author : Malcolm Lidierth Matlab SON library : Copyright \u00a9 The Author & King ' s College London 2005-2006","title":"SONYRange"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/son32.m/","text":"son32 \u00b6 SON32 Prototype file . Create structures to define interfaces found in 'matlab' . This function was generated by the perl file prototypes . pl called from loadlibary . m on Tue Mar 22 18 : 35 : 30 2005 perl options : 'matlab.i -outfile=son32.m' This file is required by the MATLAB SON Librart for Windows to use son32 . dll","title":"son32"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/son32.m/#son32","text":"SON32 Prototype file . Create structures to define interfaces found in 'matlab' . This function was generated by the perl file prototypes . pl called from loadlibary . m on Tue Mar 22 18 : 35 : 30 2005 perl options : 'matlab.i -outfile=son32.m' This file is required by the MATLAB SON Librart for Windows to use son32 . dll","title":"son32"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/C_Sources/compile.m/","text":"compile \u00b6 COMPILE Script file to compile c-code sources and generate the DLLs To compile the files, you will need copies of CED's machine.h and son.h. These are proprietory and not included in the distribution. Contact CED.","title":"compile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/son/SON32/C_Sources/compile.m/#compile","text":"COMPILE Script file to compile c-code sources and generate the DLLs To compile the files, you will need copies of CED's machine.h and son.h. These are proprietory and not included in the distribution. Contact CED.","title":"compile"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ssd/ImportSSD.m/","text":"ImportSSD \u00b6 ImportSSD imports CONSAM SSD files . The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportSSD ( FILENAME ) OUTPUTFILE = ImportSSD ( FILENAME , TARGETPATH ) FILENAME is the path and name of the file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009-","title":"ImportSSD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/File/menu_Import/group_NeuroScience%20File%20Formats/ssd/ImportSSD.m/#importssd","text":"ImportSSD imports CONSAM SSD files . The file created is a sigTOOL compatible version 6 MAT - file with the kcl extension Example : OUTPUTFILE = ImportSSD ( FILENAME ) OUTPUTFILE = ImportSSD ( FILENAME , TARGETPATH ) FILENAME is the path and name of the file to import . The kcl file generated will be placed in TARGETPATH if supplied . If not , the file will be created in the directory taken from FILENAME . Author : Malcolm Lidierth 11 / 09 Copyright \u00a9 The Author & King ' s College London 2009-","title":"ImportSSD"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/gausswindow.m/","text":"gausswindow \u00b6 gausswindow returns a gaussian window Example: w=gausswindow(N); where N is the width of the window The standard deviation of the window is fixed at 0 . 5 ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"gausswindow"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/gausswindow.m/#gausswindow","text":"gausswindow returns a gaussian window Example: w=gausswindow(N); where N is the width of the window The standard deviation of the window is fixed at 0 . 5 ------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The Author & King's College London 2008 - -------------------------------------------------------------------------","title":"gausswindow"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_EventAutoCorrelation.m/","text":"menu_EventAutoCorrelation \u00b6 Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_EventAutoCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_EventAutoCorrelation.m/#menu_eventautocorrelation","text":"Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_EventAutoCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_EventCorrelation.m/","text":"menu_EventCorrelation \u00b6 menu_WaveformAverage: gateway to the wvAverage function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_EventCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_EventCorrelation.m/#menu_eventcorrelation","text":"menu_WaveformAverage: gateway to the wvAverage function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_EventCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Frequencygram.m/","text":"menu_Frequencygram \u00b6 menu_Frequencygram: gateway to the spPeriEventFrequencygram function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Frequencygram"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Frequencygram.m/#menu_frequencygram","text":"menu_Frequencygram: gateway to the spPeriEventFrequencygram function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Frequencygram"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_InterspikeInterval.m/","text":"menu_InterspikeInterval \u00b6 menu_ISIH: gateway to the wvPowerSpectralDensity function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_InterspikeInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_InterspikeInterval.m/#menu_interspikeinterval","text":"menu_ISIH: gateway to the wvPowerSpectralDensity function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_InterspikeInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_JPETH.m/","text":"menu_JPETH \u00b6 menu_JPETH : gateway to the spJPSTH function menu_JPETH is a uimenu callback Example : varargout = menu_JPETH ( hObject , EventData ) menu_JPETH is used also by the Event Auto - and Cross - Correlation menus Toolboxes required : None Author : Malcolm Lidierth 12 / 08 Copyright \u00a9 King \u0092 s College London 2008 - Acknowledgements : Revisions :","title":"menu_JPETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_JPETH.m/#menu_jpeth","text":"menu_JPETH : gateway to the spJPSTH function menu_JPETH is a uimenu callback Example : varargout = menu_JPETH ( hObject , EventData ) menu_JPETH is used also by the Event Auto - and Cross - Correlation menus Toolboxes required : None Author : Malcolm Lidierth 12 / 08 Copyright \u00a9 King \u0092 s College London 2008 - Acknowledgements : Revisions :","title":"menu_JPETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_JointIntervalDistribution.m/","text":"menu_JointIntervalDistribution \u00b6 menu_JointIntervalDistribution: gateway function Toolboxes required: None Author: Malcolm Lidierth 11/07 Copyright \u00a9 King\u0092s College London 2007 Acknowledgements: Revisions:","title":"menu_JointIntervalDistribution"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_JointIntervalDistribution.m/#menu_jointintervaldistribution","text":"menu_JointIntervalDistribution: gateway function Toolboxes required: None Author: Malcolm Lidierth 11/07 Copyright \u00a9 King\u0092s College London 2007 Acknowledgements: Revisions:","title":"menu_JointIntervalDistribution"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PETH.m/","text":"menu_PETH \u00b6 menu_PETH : gateway to the spEventCorrelation function menu_PETH is a uimenu callback Example : varargout = menu_PETH ( hObject , EventData ) menu_PETH is used also by the Event Auto - and Cross - Correlation menus Toolboxes required : None Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King \u0092 s College London 2006 Acknowledgements : Revisions :","title":"menu_PETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PETH.m/#menu_peth","text":"menu_PETH : gateway to the spEventCorrelation function menu_PETH is a uimenu callback Example : varargout = menu_PETH ( hObject , EventData ) menu_PETH is used also by the Event Auto - and Cross - Correlation menus Toolboxes required : None Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King \u0092 s College London 2006 Acknowledgements : Revisions :","title":"menu_PETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PhaseHistogram.m/","text":"menu_PhaseHistogram \u00b6 menu_PhaseCorrelation : gateway to the spPhaseCorrelation function menu_PhaseCorrelation is a uimenu callback Example : varargout = menu_PhaseCorrelation ( hObject , EventData ) Toolboxes required : None Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 King \u0092 s College London 2008 Acknowledgements : Revisions :","title":"menu_PhaseHistogram"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PhaseHistogram.m/#menu_phasehistogram","text":"menu_PhaseCorrelation : gateway to the spPhaseCorrelation function menu_PhaseCorrelation is a uimenu callback Example : varargout = menu_PhaseCorrelation ( hObject , EventData ) Toolboxes required : None Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 King \u0092 s College London 2008 Acknowledgements : Revisions :","title":"menu_PhaseHistogram"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PhaseRaster.m/","text":"menu_PhaseRaster \u00b6 menu_PhaseRaster: gateway to the spPhaseRatser function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_PhaseRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_PhaseRaster.m/#menu_phaseraster","text":"menu_PhaseRaster: gateway to the spPhaseRatser function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_PhaseRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Poincare.m/","text":"menu_Poincare \u00b6 menu_Poincare: gateway to the spPoincare function Toolboxes required: None Author: Malcolm Lidierth 11/07 Copyright \u00a9 King\u0092s College London 2007 Acknowledgements: Revisions:","title":"menu_Poincare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Poincare.m/#menu_poincare","text":"menu_Poincare: gateway to the spPoincare function Toolboxes required: None Author: Malcolm Lidierth 11/07 Copyright \u00a9 King\u0092s College London 2007 Acknowledgements: Revisions:","title":"menu_Poincare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Raster.m/","text":"menu_Raster \u00b6 menu_Raster: gateway to the spRaster function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Raster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Raster.m/#menu_raster","text":"menu_Raster: gateway to the spRaster function Toolboxes required: None Author: Malcolm Lidierth 11/06 Copyright \u00a9 King\u0092s College London 2006 Acknowledgements: Revisions:","title":"menu_Raster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_SpikeTriggeredAverage.m/","text":"menu_SpikeTriggeredAverage \u00b6 menu_STA : gateway to the wvAverage function for spike - triggered aveaging Toolboxes required : None Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King \u0092 s College London 2006 Acknowledgements : Revisions :","title":"menu_SpikeTriggeredAverage"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_SpikeTriggeredAverage.m/#menu_spiketriggeredaverage","text":"menu_STA : gateway to the wvAverage function for spike - triggered aveaging Toolboxes required : None Author : Malcolm Lidierth 11 / 06 Copyright \u00a9 King \u0092 s College London 2006 Acknowledgements : Revisions :","title":"menu_SpikeTriggeredAverage"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/group_zCreateRateChannel/menu_CreateRateChannel.m/","text":"menu_CreateRateChannel \u00b6 menu_CreateRateChannel: gateway to the spRateHistogram function Example: menu_CreateRateChannel(hObejct , EventData) menu callback function Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The author and King\u0092s College London 2008 - -------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_CreateRateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/group_zCreateRateChannel/menu_CreateRateChannel.m/#menu_createratechannel","text":"menu_CreateRateChannel: gateway to the spRateHistogram function Example: menu_CreateRateChannel(hObejct , EventData) menu callback function Toolboxes required: None -------------------------------------------------------------------------- Author: Malcolm Lidierth 03/08 Copyright \u00a9 The author and King\u0092s College London 2008 - -------------------------------------------------------------------------- Acknowledgements: Revisions:","title":"menu_CreateRateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Spike%20Sorting/menu_InterfaceTo_wave_clus.m/","text":"menu_InterfaceTo_wave_clus \u00b6 menu_InterfaceTo_wave_clus interface to the Wave_clus spike sorter Wave_clus is a package for unsupervised spike detection and sorting and is available from http : // www . vis . caltech . edu /~ rodri / Wave_clus / Wave_clus_home . htm It is not included in the sigTOOL distribution and needs to be downloaded separately . The algorithm is based on : R . Q . Quiroga , Z . Nadasdy & Y . Ben - Shaul ( 2004 ) . Unsupervised spike detection and sorting with wavelets and superparamagnetic clustering , Neural Computation , 16 , 1661 - 1687. The GUI for Wave_clus has been parasitized here to integrate it into sigTOOL Toolboxes required : Signal Processing & Wavelet Toolboxes are needed together with the Statistics Toolbox if PCA is used .","title":"menu_InterfaceTo_wave_clus"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/menu_Spike%20Sorting/menu_InterfaceTo_wave_clus.m/#menu_interfaceto_wave_clus","text":"menu_InterfaceTo_wave_clus interface to the Wave_clus spike sorter Wave_clus is a package for unsupervised spike detection and sorting and is available from http : // www . vis . caltech . edu /~ rodri / Wave_clus / Wave_clus_home . htm It is not included in the sigTOOL distribution and needs to be downloaded separately . The algorithm is based on : R . Q . Quiroga , Z . Nadasdy & Y . Ben - Shaul ( 2004 ) . Unsupervised spike detection and sorting with wavelets and superparamagnetic clustering , Neural Computation , 16 , 1661 - 1687. The GUI for Wave_clus has been parasitized here to integrate it into sigTOOL Toolboxes required : Signal Processing & Wavelet Toolboxes are needed together with the Statistics Toolbox if PCA is used .","title":"menu_InterfaceTo_wave_clus"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/eventcorr.m/","text":"eventcorr \u00b6 EVENTCORR workhorse function for calculating spike correlations Example [ pbin tb ] = EVENTCORR ( trigger , spiketimes , binwidth , duration , pretime ) Inputs : trigger the trigger times spiketimes the spike times binwidth binwidth for the histogram nsweeps the number of triggers per histogram , zero for a single histogram using all triggers duration sweep duration pretime the pretime period Outputs : pbin the histogram counts as number of spikes tb the timebase for the correlation EVENTCORR uses all triggers and spikes . The calling function should deal with end - effects where incomplete sweeps may be available . To calculate a post - or peri - stimulus time histogram , debounce the triggers before calling eventcorr . For spike - train cross - correlation , do not debounce . See also debounce ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- ------------------------------------------------------------------------- Note that this file may be shadowed by a mex - file and , in that case , will not execute . If no mex - file is present , a message will be be issued at the command line ( once per MATLAB session ), and this m - file will be executed . Note that the mex - file will run ~ 5000 x faster . To produce a mex - file for the current platform , compile eventcorr . c using mex or sigTOOL ( ' compile ' ). -------------------------------------------------------------------------","title":"eventcorr"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/eventcorr.m/#eventcorr","text":"EVENTCORR workhorse function for calculating spike correlations Example [ pbin tb ] = EVENTCORR ( trigger , spiketimes , binwidth , duration , pretime ) Inputs : trigger the trigger times spiketimes the spike times binwidth binwidth for the histogram nsweeps the number of triggers per histogram , zero for a single histogram using all triggers duration sweep duration pretime the pretime period Outputs : pbin the histogram counts as number of spikes tb the timebase for the correlation EVENTCORR uses all triggers and spikes . The calling function should deal with end - effects where incomplete sweeps may be available . To calculate a post - or peri - stimulus time histogram , debounce the triggers before calling eventcorr . For spike - train cross - correlation , do not debounce . See also debounce ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King ' s College London 2008 - ------------------------------------------------------------------------- ------------------------------------------------------------------------- Note that this file may be shadowed by a mex - file and , in that case , will not execute . If no mex - file is present , a message will be be issued at the command line ( once per MATLAB session ), and this m - file will be executed . Note that the mex - file will run ~ 5000 x faster . To produce a mex - file for the current platform , compile eventcorr . c using mex or sigTOOL ( ' compile ' ). -------------------------------------------------------------------------","title":"eventcorr"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/rasterprep.m/","text":"rasterprep \u00b6 RASTERPREP workhorse function for calculating spike correlations Example [ pbin tb intervals ] = RASTERPREP ( trigger , spiketimes , duration , pretime ) Inputs : trigger the trigger times spiketimes the spike times duration sweep duration pretime the pretime period Outputs : pbin the histogram counts as number of spikes tb the timebase for the correlation intervals the interspike intervals for each spike : t ( n ) - t ( n - 1 ) To calculate a post - or peri - stimulus time raster , debounce the triggers before calling rasterprep . For spike - train cross - correlation , do not debounce . See also debounce ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- ------------------------------------------------------------------------- Note that this file may be shadowed by a mex - file and , in that case , will not execute . If no mex - file is present , a message will be be issued at the command line ( once per MATLAB session ) , and this m - file will be executed . Note that the mex - file will run ~ 5000 x faster . To produce a mex - file for the current platform , compile rasterprep . cpp using mex or sigTOOL ( ' compile ' ) ------------------------------------------------------------------------- Revisions : 12 . 12 . 08 Help text corrected . Remove occasional trailing zero when intervals returned and first spike fell in a sweep . rasterprep . cpp updated accordingly . Unnecassary for loop removed from m - file","title":"rasterprep"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/rasterprep.m/#rasterprep","text":"RASTERPREP workhorse function for calculating spike correlations Example [ pbin tb intervals ] = RASTERPREP ( trigger , spiketimes , duration , pretime ) Inputs : trigger the trigger times spiketimes the spike times duration sweep duration pretime the pretime period Outputs : pbin the histogram counts as number of spikes tb the timebase for the correlation intervals the interspike intervals for each spike : t ( n ) - t ( n - 1 ) To calculate a post - or peri - stimulus time raster , debounce the triggers before calling rasterprep . For spike - train cross - correlation , do not debounce . See also debounce ------------------------------------------------------------------------- Author : Malcolm Lidierth 03 / 08 Copyright \u00a9 The Author & King ' s College London 2008- ------------------------------------------------------------------------- ------------------------------------------------------------------------- Note that this file may be shadowed by a mex - file and , in that case , will not execute . If no mex - file is present , a message will be be issued at the command line ( once per MATLAB session ) , and this m - file will be executed . Note that the mex - file will run ~ 5000 x faster . To produce a mex - file for the current platform , compile rasterprep . cpp using mex or sigTOOL ( ' compile ' ) ------------------------------------------------------------------------- Revisions : 12 . 12 . 08 Help text corrected . Remove occasional trailing zero when intervals returned and first spike fell in a sweep . rasterprep . cpp updated accordingly . Unnecassary for loop removed from m - file","title":"rasterprep"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spCreateRateChannel.m/","text":"spCreateRateChannel \u00b6 spCreateRateChannel creates rate channels from event data Example : channels = spCreateRateChannel ( fhandle , InputName1 , InputValue1 ,.... ) channels = spCreateRateChannel ( channels , InputName1 , InputValue1 ,.... ) where fhandle is a valid sigTOOL data view handle . If fhandle is provided on input the data view will be updated with the new channels on completion channels is a sigTOOL channel cell array Valid input options are : Sources A list of channnels to use as source for the input events ( scalar or vector ) Targets A list of channel numbers to use as the output targets ( scalar or vector ) Start The start time for the conversion ( scalar in seconds ) Stop The stop time for the conversion ( scalar in seconds ) BinWidth The binwidth to use for counting spikes . This determines the effective sample rate in the target channel : a bin width of 1 ms corresponds to a sample rate of 1 kHz ( scalar in seconds ) Scaling A string , either : ' count ' Results will be returned as events / bin or ' rate ' Results will be scaled to events / second Windowcoeff A vector of window coefficients which will be used to filter the result . This must be of odd - length and symmetrical to avoid phase - shifts . Note that data in the adcarray of the target channel may be a sparse double precision vector . See also adcarray ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spCreateRateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spCreateRateChannel.m/#spcreateratechannel","text":"spCreateRateChannel creates rate channels from event data Example : channels = spCreateRateChannel ( fhandle , InputName1 , InputValue1 ,.... ) channels = spCreateRateChannel ( channels , InputName1 , InputValue1 ,.... ) where fhandle is a valid sigTOOL data view handle . If fhandle is provided on input the data view will be updated with the new channels on completion channels is a sigTOOL channel cell array Valid input options are : Sources A list of channnels to use as source for the input events ( scalar or vector ) Targets A list of channel numbers to use as the output targets ( scalar or vector ) Start The start time for the conversion ( scalar in seconds ) Stop The stop time for the conversion ( scalar in seconds ) BinWidth The binwidth to use for counting spikes . This determines the effective sample rate in the target channel : a bin width of 1 ms corresponds to a sample rate of 1 kHz ( scalar in seconds ) Scaling A string , either : ' count ' Results will be returned as events / bin or ' rate ' Results will be scaled to events / second Windowcoeff A vector of window coefficients which will be used to filter the result . This must be of odd - length and symmetrical to avoid phase - shifts . Note that data in the adcarray of the target channel may be a sparse double precision vector . See also adcarray ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spCreateRateChannel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spEventCorrelation.m/","text":"spEventCorrelation \u00b6 spEventCorrelation main routine for event correlation spEventCorrelation is called for event auto- and cross- correlations and peri-event time histograms Example : spEventCorrelation ( fhandle , InputName1 , InputValue1 ,....); spEventCorrelation ( channels , InputName1 , InputValue1 ,....); or out = spEventCorrelation (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in seconds ) 'BinWidth' Binwidth ( in seconds ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'SweepsPerAverage' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers 'RetriggerFlag' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spEventCorrelation calls the eventcorr mex-file or the shadowing m-file if eventcorr . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spEventCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spEventCorrelation.m/#speventcorrelation","text":"spEventCorrelation main routine for event correlation spEventCorrelation is called for event auto- and cross- correlations and peri-event time histograms Example : spEventCorrelation ( fhandle , InputName1 , InputValue1 ,....); spEventCorrelation ( channels , InputName1 , InputValue1 ,....); or out = spEventCorrelation (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in seconds ) 'BinWidth' Binwidth ( in seconds ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'SweepsPerAverage' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers 'RetriggerFlag' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spEventCorrelation calls the eventcorr mex-file or the shadowing m-file if eventcorr . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spEventCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spInterspikeInterval.m/","text":"spInterspikeInterval \u00b6 spInterspikeInterval returns the interspike interval distribution Example : spInterspikeInterval ( fhandle , InputName1 , InputValue1 ,....); spInterspikeInterval ( channels , InputName1 , InputValue1 ,....); or out = spInterspikeInterval (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Other inputs are string / vlaue pairs 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'BinWidth' The width of the bins in the result ( in seconds ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spInterspikeInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spInterspikeInterval.m/#spinterspikeinterval","text":"spInterspikeInterval returns the interspike interval distribution Example : spInterspikeInterval ( fhandle , InputName1 , InputValue1 ,....); spInterspikeInterval ( channels , InputName1 , InputValue1 ,....); or out = spInterspikeInterval (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Other inputs are string / vlaue pairs 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'BinWidth' The width of the bins in the result ( in seconds ) ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spInterspikeInterval"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spJPETH.m/","text":"spJPETH \u00b6 spJPETH returns jpoint peri - event time histograms Example : out = spJPETH ( fhandle , ParamName1 , ParamValue1 ..... ) out = spJPETH ( channels , ParamName1 , ParamValue1 ..... ) Inputs are string / vlaue pairs ' Trigger ' Trigger channel ( single channel ) ' Sources ' List of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) ' Duration ' Duration of the required correlation ( in seconds ) ' BinWidth ' Binwidth ( in seconds ) ' PercentPreTime ' Percentage pre - time ( % of Duration ) ' SweepsPerAverage ' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers ' RetriggerFlag ' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spEventCorrelation calls the rasterprep m - file or the shadowing m - file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"spJPETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spJPETH.m/#spjpeth","text":"spJPETH returns jpoint peri - event time histograms Example : out = spJPETH ( fhandle , ParamName1 , ParamValue1 ..... ) out = spJPETH ( channels , ParamName1 , ParamValue1 ..... ) Inputs are string / vlaue pairs ' Trigger ' Trigger channel ( single channel ) ' Sources ' List of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) ' Duration ' Duration of the required correlation ( in seconds ) ' BinWidth ' Binwidth ( in seconds ) ' PercentPreTime ' Percentage pre - time ( % of Duration ) ' SweepsPerAverage ' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers ' RetriggerFlag ' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spEventCorrelation calls the rasterprep m - file or the shadowing m - file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 01 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"spJPETH"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spJointIntervalDistribution.m/","text":"spJointIntervalDistribution \u00b6 spJointIntervalDistribution Plots the joint frequency distribution of the intervals between successive events as a colored image . Example : spJointIntervalDistribution ( fhandle , InputName1 , InputValue1 ,.... ) spJointIntervalDistribution ( fhandle , InputName1 , InputValue1 ,.... ) or out = spJointIntervalDistribution ( .... ) where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Inputs are string / value pairs ' Sources ' Vector of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) ' BinWidth ' The width of the bins in the result ( in seconds ) A similar analysis can be presented as a scatter plot through the spPoincare function See also spPoincare ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spJointIntervalDistribution"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spJointIntervalDistribution.m/#spjointintervaldistribution","text":"spJointIntervalDistribution Plots the joint frequency distribution of the intervals between successive events as a colored image . Example : spJointIntervalDistribution ( fhandle , InputName1 , InputValue1 ,.... ) spJointIntervalDistribution ( fhandle , InputName1 , InputValue1 ,.... ) or out = spJointIntervalDistribution ( .... ) where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Inputs are string / value pairs ' Sources ' Vector of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) ' BinWidth ' The width of the bins in the result ( in seconds ) A similar analysis can be presented as a scatter plot through the spPoincare function See also spPoincare ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spJointIntervalDistribution"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPeriEventFrequency.m/","text":"spPeriEventFrequency \u00b6 Process argumants","title":"spPeriEventFrequency"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPeriEventFrequency.m/#spperieventfrequency","text":"Process argumants","title":"spPeriEventFrequency"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPhaseCorrelation.m/","text":"spPhaseCorrelation \u00b6 spPhaseCorrelation main routine for event correlation spPhaseCorrelation is called for event auto- and cross- correlations and peri-event time histograms Example : spPhaseCorrelation ( fhandle , InputName1 , InputValue1 ,....); spPhaseCorrelation ( channels , InputName1 , InputValue1 ,....); or out = spPhaseCorrelation (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in cycles ) 'BinWidth' Binwidth ( in degrees ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'SweepsPerAverage' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers NB spPhaseCorrelation calls the eventcorr mex-file or the shadowing m-file if eventcorr . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPhaseCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPhaseCorrelation.m/#spphasecorrelation","text":"spPhaseCorrelation main routine for event correlation spPhaseCorrelation is called for event auto- and cross- correlations and peri-event time histograms Example : spPhaseCorrelation ( fhandle , InputName1 , InputValue1 ,....); spPhaseCorrelation ( channels , InputName1 , InputValue1 ,....); or out = spPhaseCorrelation (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in cycles ) 'BinWidth' Binwidth ( in degrees ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'SweepsPerAverage' Number of triggers to use for each average . Set to zero to use all triggers . Otherwise , if SweepsPerAverage is less than the number of available triggers , multiple event correlations will be returned , each using SweepsPerAverage triggers NB spPhaseCorrelation calls the eventcorr mex-file or the shadowing m-file if eventcorr . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPhaseCorrelation"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPhaseRaster.m/","text":"spPhaseRaster \u00b6 spPhaseRaster main routine for event correlation spPhaseRaster is called for event auto- and cross- correlations and peri-event time histograms Example : spPhaseRaster ( fhandle , InputName1 , InputValue1 ,....); spPhaseRaster ( channels , InputName1 , InputValue1 ,....); or out = spPhaseRaster (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in cycles ) 'PercentPreTime' Percentage pre-time (% of Duration ) NB spPhaseRaster calls the rsterprep mex-file or the shadowing m-file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPhaseRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPhaseRaster.m/#spphaseraster","text":"spPhaseRaster main routine for event correlation spPhaseRaster is called for event auto- and cross- correlations and peri-event time histograms Example : spPhaseRaster ( fhandle , InputName1 , InputValue1 ,....); spPhaseRaster ( channels , InputName1 , InputValue1 ,....); or out = spPhaseRaster (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the reslut will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in cycles ) 'PercentPreTime' Percentage pre-time (% of Duration ) NB spPhaseRaster calls the rsterprep mex-file or the shadowing m-file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 08 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPhaseRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPoincare.m/","text":"spPoincare \u00b6 spPoincare creates a Poincare diagram Example : spPoincare ( fhandle , InputName1 , InputValue1 ,.... ) spPoincare ( fhandle , InputName1 , InputValue1 ,.... ) or out = spPoincare ( .... ) where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object A Poincare diagram plots the interval between successive events as a scatter plot i . e . the n + 1 th interval is plotted against the nth . If no output is requested the result will be plotted Inputs are string / value pairs ' Sources ' Vector of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) A similar analysis can be presented as a colored image though the spJointIntervalDistribution function See also spJointIntervalDistribution ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPoincare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spPoincare.m/#sppoincare","text":"spPoincare creates a Poincare diagram Example : spPoincare ( fhandle , InputName1 , InputValue1 ,.... ) spPoincare ( fhandle , InputName1 , InputValue1 ,.... ) or out = spPoincare ( .... ) where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object A Poincare diagram plots the interval between successive events as a scatter plot i . e . the n + 1 th interval is plotted against the nth . If no output is requested the result will be plotted Inputs are string / value pairs ' Sources ' Vector of source channels ' Start ' Start time for processing ( in seconds ) ' Stop ' End time for processing ( in seconds ) A similar analysis can be presented as a colored image though the spJointIntervalDistribution function See also spJointIntervalDistribution ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spPoincare"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spRaster.m/","text":"spRaster \u00b6 spRaster generates a raster plot Example : spRaster ( fhandle , InputName1 , InputValue1 ,....); spRaster ( channels , InputName1 , InputValue1 ,....); or out = spRaster (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in seconds ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'RetriggerFlag' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spRaster calls the rasterprep mex-file or the shadowing m-file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/spRaster.m/#spraster","text":"spRaster generates a raster plot Example : spRaster ( fhandle , InputName1 , InputValue1 ,....); spRaster ( channels , InputName1 , InputValue1 ,....); or out = spRaster (....); where fhandle is a valid sigTOOL data view handle channels is a sigTOOL channel cell array out ( if requested ) will be a sigTOOLResultData object If no output is requested the result will be plotted Inputs are string / vlaue pairs 'Trigger' List of trigger channels 'Sources' List of source channels 'Start' Start time for processing ( in seconds ) 'Stop' End time for processing ( in seconds ) 'Duration' Duration of the required correlation ( in seconds ) 'PercentPreTime' Percentage pre-time (% of Duration ) 'RetriggerFlag' If true , all triggers will be used ( typical for an event correlation ) If false , triggers falling during a preceding sweep will be ignored ( typical for a PETH ) NB spRaster calls the rasterprep mex-file or the shadowing m-file if rasterprep . cpp has not been compiled for the current platform ------------------------------------------------------------------------- Author : Malcolm Lidierth 04 / 08 Copyright \u00a9 The Author & King ' s College London 2008- -------------------------------------------------------------------------","title":"spRaster"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/display.m/","text":"display \u00b6 display method overloaded for jpeth class","title":"display"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/display.m/#display","text":"display method overloaded for jpeth class","title":"display"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/get.m/","text":"get \u00b6 get methods for jpeth class out = get ( obj , propertyname ) where obj is a jpeth object and propertyname is a string See also jpeth","title":"get"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/get.m/#get","text":"get methods for jpeth class out = get ( obj , propertyname ) where obj is a jpeth object and propertyname is a string See also jpeth","title":"get"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getAverage.m/","text":"getAverage \u00b6 getAverage methods for the jpeth class Example: matrix=getAverage(obj) returns the averaged coincidence matrix i . e . the raw matrix divided by the number of triggers See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getAverage"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getAverage.m/#getaverage","text":"getAverage methods for the jpeth class Example: matrix=getAverage(obj) returns the averaged coincidence matrix i . e . the raw matrix divided by the number of triggers See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getAverage"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getBinWidth.m/","text":"getBinWidth \u00b6 getBinWidth method for jpeth objects Example : t = getBinWidth ( ml ) returns the binwidth in seconds used to construct the jpeth object NB If the tscale property is empty , getBinWidth returns an empty result .","title":"getBinWidth"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getBinWidth.m/#getbinwidth","text":"getBinWidth method for jpeth objects Example : t = getBinWidth ( ml ) returns the binwidth in seconds used to construct the jpeth object NB If the tscale property is empty , getBinWidth returns an empty result .","title":"getBinWidth"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getCoincidence.m/","text":"getCoincidence \u00b6 getCoincidence method for jpeth objects Examples : out = getCoincidence ( obj ); % when obj . filter is set or out = getCoincidence ( obj , width ); % obj . filter will be ignored getCoincidence ( obj ) returns the values from the coincidence matrix that are temporally aligned i . e . along the main diagional of the matrix . The coincindence matrix will be filtered before taking the values if obj . filter is not empty ( and does not contain unity ). getCoincidence ( obj , width ) returns the average of the bins across the main diagonal i . e . those aligned at 90 degrees to the diagonal (= 45 degrees to the horizontal ). Width should be an odd whole number . The result will be appropriately scaled to account for the missing data at the corners of the matrix . Note that the value of width will default to unity if the filter is set ( and a warning will be issued at the command line ) since this would otherwise involve averaging data that have already been averaged using the set filter See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"getCoincidence"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getCoincidence.m/#getcoincidence","text":"getCoincidence method for jpeth objects Examples : out = getCoincidence ( obj ); % when obj . filter is set or out = getCoincidence ( obj , width ); % obj . filter will be ignored getCoincidence ( obj ) returns the values from the coincidence matrix that are temporally aligned i . e . along the main diagional of the matrix . The coincindence matrix will be filtered before taking the values if obj . filter is not empty ( and does not contain unity ). getCoincidence ( obj , width ) returns the average of the bins across the main diagonal i . e . those aligned at 90 degrees to the diagonal (= 45 degrees to the horizontal ). Width should be an odd whole number . The result will be appropriately scaled to account for the missing data at the corners of the matrix . Note that the value of width will default to unity if the filter is set ( and a warning will be issued at the command line ) since this would otherwise involve averaging data that have already been averaged using the set filter See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"getCoincidence"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getCorrected.m/","text":"getCorrected \u00b6 getCorrected methods for the jpeth class Example: matrix=getCorrected(obj) returns the corrected coincidence matrix i . e . the raw matrix scaled by subtracting the cross product of peth1 and peth2 See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getCorrected"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getCorrected.m/#getcorrected","text":"getCorrected methods for the jpeth class Example: matrix=getCorrected(obj) returns the corrected coincidence matrix i . e . the raw matrix scaled by subtracting the cross product of peth1 and peth2 See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getCorrected"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getErrors.m/","text":"getErrors \u00b6 getErrors method for jpeth class Example : matrix = getErrors ( obj ) returns the binomial errors . Statistical measures usually rely on having 0 or 1 coincidences in any bin in a single sweep but , with finite bin widths , more than one coincidence may occur . getErrors returns the number of occasions when more than one coincidence occurred in a single bin in a single sweep . See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"getErrors"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getErrors.m/#geterrors","text":"getErrors method for jpeth class Example : matrix = getErrors ( obj ) returns the binomial errors . Statistical measures usually rely on having 0 or 1 coincidences in any bin in a single sweep but , with finite bin widths , more than one coincidence may occur . getErrors returns the number of occasions when more than one coincidence occurred in a single bin in a single sweep . See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King ' s College London 2009- -------------------------------------------------------------------------","title":"getErrors"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getLabel.m/","text":"getLabel \u00b6 getLabel method for the jpeth class Example: md=getLabel(obj); returns the label for the JPETH object See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getLabel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getLabel.m/#getlabel","text":"getLabel method for the jpeth class Example: md=getLabel(obj); returns the label for the JPETH object See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getLabel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getMatrix.m/","text":"getMatrix \u00b6 getMatrix method for jpeth class Example matrix = getMatrix ( obj ) returns the JPETH matrix scaled according to the current mode ( as set by setMode ) and filtered by the current filter ( as set by setFilter ) . Mode is set to 'raw' by default in the jpeth constructor . Valid standard modes include 'raw' , 'average' , 'corrected' , 'errors' , 'normalized' and 'surprise' . User - defined modes may be added ( see setMode for details ) . Note that the returned matrix is filtered with the contents of obj . filter by a call to filter2 . Note that no re - scaling is done at the edges of matrix after filtering . See Also filter2 , jpeth setMode , setFilter ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"getMatrix"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getMatrix.m/#getmatrix","text":"getMatrix method for jpeth class Example matrix = getMatrix ( obj ) returns the JPETH matrix scaled according to the current mode ( as set by setMode ) and filtered by the current filter ( as set by setFilter ) . Mode is set to 'raw' by default in the jpeth constructor . Valid standard modes include 'raw' , 'average' , 'corrected' , 'errors' , 'normalized' and 'surprise' . User - defined modes may be added ( see setMode for details ) . Note that the returned matrix is filtered with the contents of obj . filter by a call to filter2 . Note that no re - scaling is done at the edges of matrix after filtering . See Also filter2 , jpeth setMode , setFilter ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"getMatrix"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getMode.m/","text":"getMode \u00b6 getMode method for the jpeth class Example: md=getMode(obj); returns the present mode for calculating the JPETH matrix See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getMode.m/#getmode","text":"getMode method for the jpeth class Example: md=getMode(obj); returns the present mode for calculating the JPETH matrix See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getNormalized.m/","text":"getNormalized \u00b6 getNormalized methods for the jpeth class Example: matrix=getNormalized(obj) returns the normalized coincidence matrix i . e . the raw matrix scaled by product of the standard deviations of the peths . Normalized values are therefore correlation coefficients with a range of - 1 to 1 . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getNormalized"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getNormalized.m/#getnormalized","text":"getNormalized methods for the jpeth class Example: matrix=getNormalized(obj) returns the normalized coincidence matrix i . e . the raw matrix scaled by product of the standard deviations of the peths . Normalized values are therefore correlation coefficients with a range of - 1 to 1 . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getNormalized"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getRaw.m/","text":"getRaw \u00b6 getRaw methods for the jpeth class Example: matrix=getRaw(obj) returns the raw coincidence matrix ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getRaw"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getRaw.m/#getraw","text":"getRaw methods for the jpeth class Example: matrix=getRaw(obj) returns the raw coincidence matrix ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getRaw"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getSurprise.m/","text":"getSurprise \u00b6 getSurprise method for jpeth class Examples : surprise = getSurprise ( obj ) [ surprise excite inhib ] = getSurprise ( obj ) Returns the \"surprise\" matrix for the jpeth object as defined in Palm et al . 1988 : surprise = excite-inhib where excite = -ln ( prob ( z >= M given K and L )) and inhib = -ln ( prob ( z <= M given K and L ) M is number of coincidences in the jpeth raw matrix and K and L are the corresponding number of spikes in peth1 and peth2 of the jpeth object ( reversed if K > L ). Corrections are included for Palm 's Type 1 and 2 errors following his original FORTRAN code. Algorithm: The probabilities of z==M are estimated following Eqn. 7 of Palm et al. 1988 but natural logs are used throughout to minimize problems due to IEEE precision and to enhance speed: ln(x!) is estimated as gammaln(x+1) ln(choosek(n,k)) as gammaln(n+1)-(gammaln(n-k+1)+gammaln(k+1)); (see Press et al. 1992) Eqn 7 is then evaluated by log addition/subtraction before finally taking the exponent to return probabilities. This avoids intermediate results beyond the 15 significant digits of IEEE 64-bit floating point arithmetic References Palm et al. (1988) On the significance of correlations among neural spike trains Biological Cybernetics 59, 1-11. Press et al. (1992) Numerical Recipes in C. See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/09 Copyright \u00a9 The Author & King' s College London 2009- -------------------------------------------------------------------------","title":"getSurprise"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getSurprise.m/#getsurprise","text":"getSurprise method for jpeth class Examples : surprise = getSurprise ( obj ) [ surprise excite inhib ] = getSurprise ( obj ) Returns the \"surprise\" matrix for the jpeth object as defined in Palm et al . 1988 : surprise = excite-inhib where excite = -ln ( prob ( z >= M given K and L )) and inhib = -ln ( prob ( z <= M given K and L ) M is number of coincidences in the jpeth raw matrix and K and L are the corresponding number of spikes in peth1 and peth2 of the jpeth object ( reversed if K > L ). Corrections are included for Palm 's Type 1 and 2 errors following his original FORTRAN code. Algorithm: The probabilities of z==M are estimated following Eqn. 7 of Palm et al. 1988 but natural logs are used throughout to minimize problems due to IEEE precision and to enhance speed: ln(x!) is estimated as gammaln(x+1) ln(choosek(n,k)) as gammaln(n+1)-(gammaln(n-k+1)+gammaln(k+1)); (see Press et al. 1992) Eqn 7 is then evaluated by log addition/subtraction before finally taking the exponent to return probabilities. This avoids intermediate results beyond the 15 significant digits of IEEE 64-bit floating point arithmetic References Palm et al. (1988) On the significance of correlations among neural spike trains Biological Cybernetics 59, 1-11. Press et al. (1992) Numerical Recipes in C. See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 01/09 Copyright \u00a9 The Author & King' s College London 2009- -------------------------------------------------------------------------","title":"getSurprise"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getXcorr.m/","text":"getXcorr \u00b6 getXcorr method for jpeth class returns the cross - correlation Example: x=xcorr(obj); [ x tb ] =xcorr(obj); returns the cross - correlation formed by averaging along the anti - diagonals of the jpeth matrix calculated according to the current mode . If requested , the timebase for the correlation will also be returned . ------------------------------------------------------------------------- Note that no filter is applied to the matrix before calculating the cross - corelation ------------------------------------------------------------------------- See also setMode See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getXcorr"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/getXcorr.m/#getxcorr","text":"getXcorr method for jpeth class returns the cross - correlation Example: x=xcorr(obj); [ x tb ] =xcorr(obj); returns the cross - correlation formed by averaging along the anti - diagonals of the jpeth matrix calculated according to the current mode . If requested , the timebase for the correlation will also be returned . ------------------------------------------------------------------------- Note that no filter is applied to the matrix before calculating the cross - corelation ------------------------------------------------------------------------- See also setMode See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"getXcorr"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/jpeth.m/","text":"jpeth \u00b6 JPETH constructor for jpeth class Example: obj = jpeth ( trig , sp1 , sp2 , BinWidth , Duration , pt , tscale ) returns the jpeth object . Inputs: trig: the trigger times sp1: spike times on channel 1 sp2: spike times on channel 2 BinWidth: the binwidth for the histigrams Duration: the duration over which to calculate the result relative to the trigger the average ( inclusive of the pre-time ) pt: the pre-time length tscale: all the above arguments are arbitrarily scaled ( typically in clock ticks ). tscale provides the scaling factor to convert times to seconds . The returned jpeth object has the following properties data: contains intermediate results used in calculating the jpeth object display: user-settable function handle of the function used to display the matrix . This is set to @imagesc by default . Use setDisplay to alter the value . filter: a user-settable filter that will be used to filter the result matrix when the getMatrix method is called handle: the handle of the figure or uipanel used for the latest call to plot on the jpeth object ( set to [] if not yet plotted ) label: a user-settable string ( empty ny default ). mode: the mode for calculating the jpeth matrix ( see below for details ) nsweeps: the total number of sweeps ( triggers ) peth1: the peri-event time histogram for spike-train 1 relative to the trigger peth2: the peri-event time histogram for spike-train 2 relative the trigger raw: the raw jpeth matrix scaled according to the number of triggers . Note this will be stored as a sparse double matrix in the object . getXXXX methods will return full matrices . sqpeth1: the sum of squares of the counts in each sweep of the peri-event time histogram for spike-train 1 sqpeth2: the sum of squares of the counts in each sweep of the peri-event time histogram for spike-train 2 tbase: the time base for the matrices and histograms tscale: all times for the propeties above are arbitrarily scaled ( typically in clock ticks ). The tscale property provides the scaling factor to convert times to seconds . To view the object call plot ( obj ). ------------------------------------------------------------------------- Note With the exception of mode , display , filter and label these properties should not be altered by the user . ------------------------------------------------------------------------- User-settable properties: These may be modified by calls to setMode , setDisplay , setFilter and setLabel e . g . obj = setMode ( obj , 'surprise' ); ------------------------------------------------------------------------- Note: If no output arguments are specified with these methods , the relevant property of the jpeth object in the calling workspace will be updated with the value of ph where this is possible ( i . e . where the object is a named variable in the calling workspace resolvable by a call to inputname (...)). ------------------------------------------------------------------------- Mode mode is set by calling the setMode method on the object . Valid standard modes are: 'average' the raw jpeth matrix scaled by the number of triggers will be used 'corrected' the raw matrix will be scaled by subtracting the cross product of peth1 and peth2 'normalized' the corrected matrix will be scaled by product of the standard deviations of the peths . Normalized values are therefore correlation coefficients with a range of - 1 to 1 . 'raw' returns the spike counts without scaling 'errors' returns the binomial errors i . e . the counts above 1 when more than one spike falls within a bin in a given sweep 'surprise' returns Palm's surprise ( Palm et al ., 1988 ) To return the jpeth matrix for each mode call setMode followed by getMatrix e . g . obj = jpeth (.....); % construct object obj = setMode ( obj , 'normalized' ); % normalized mode matrix = getMatrix ( obj ); % get the answer ------------------------------------------------------------------------- NOTE: Custom modes may be added by the user . To add a mode 'abcdefg' simply define a new method \"getAbcdefg\" ( note capital \"A\" ) and place it in the @jpeth class folder . getMatrix will automatically detect the new method . -------------------------------------------------------------------------- Display This contains a function handle to a function to plot the coincidence matrix . Valid settings are @imagesc ( default ), @contour and @surf . Filter Contains the coefficients of a matrix used to filter the coincidence matrix within the getMatrix method . Typically a nXn matrix where n is odd . Label A user settable string . References: Palm et al . ( 1988 ) On the significance of correlations among neural spike trains Biological Cybernetics 59 , 1 - 11 . ------------------------------------------------------------------------- Author: Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King's College London 2009 - ------------------------------------------------------------------------- Documentation for jpeth doc jpeth","title":"jpeth"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/jpeth.m/#jpeth","text":"JPETH constructor for jpeth class Example: obj = jpeth ( trig , sp1 , sp2 , BinWidth , Duration , pt , tscale ) returns the jpeth object . Inputs: trig: the trigger times sp1: spike times on channel 1 sp2: spike times on channel 2 BinWidth: the binwidth for the histigrams Duration: the duration over which to calculate the result relative to the trigger the average ( inclusive of the pre-time ) pt: the pre-time length tscale: all the above arguments are arbitrarily scaled ( typically in clock ticks ). tscale provides the scaling factor to convert times to seconds . The returned jpeth object has the following properties data: contains intermediate results used in calculating the jpeth object display: user-settable function handle of the function used to display the matrix . This is set to @imagesc by default . Use setDisplay to alter the value . filter: a user-settable filter that will be used to filter the result matrix when the getMatrix method is called handle: the handle of the figure or uipanel used for the latest call to plot on the jpeth object ( set to [] if not yet plotted ) label: a user-settable string ( empty ny default ). mode: the mode for calculating the jpeth matrix ( see below for details ) nsweeps: the total number of sweeps ( triggers ) peth1: the peri-event time histogram for spike-train 1 relative to the trigger peth2: the peri-event time histogram for spike-train 2 relative the trigger raw: the raw jpeth matrix scaled according to the number of triggers . Note this will be stored as a sparse double matrix in the object . getXXXX methods will return full matrices . sqpeth1: the sum of squares of the counts in each sweep of the peri-event time histogram for spike-train 1 sqpeth2: the sum of squares of the counts in each sweep of the peri-event time histogram for spike-train 2 tbase: the time base for the matrices and histograms tscale: all times for the propeties above are arbitrarily scaled ( typically in clock ticks ). The tscale property provides the scaling factor to convert times to seconds . To view the object call plot ( obj ). ------------------------------------------------------------------------- Note With the exception of mode , display , filter and label these properties should not be altered by the user . ------------------------------------------------------------------------- User-settable properties: These may be modified by calls to setMode , setDisplay , setFilter and setLabel e . g . obj = setMode ( obj , 'surprise' ); ------------------------------------------------------------------------- Note: If no output arguments are specified with these methods , the relevant property of the jpeth object in the calling workspace will be updated with the value of ph where this is possible ( i . e . where the object is a named variable in the calling workspace resolvable by a call to inputname (...)). ------------------------------------------------------------------------- Mode mode is set by calling the setMode method on the object . Valid standard modes are: 'average' the raw jpeth matrix scaled by the number of triggers will be used 'corrected' the raw matrix will be scaled by subtracting the cross product of peth1 and peth2 'normalized' the corrected matrix will be scaled by product of the standard deviations of the peths . Normalized values are therefore correlation coefficients with a range of - 1 to 1 . 'raw' returns the spike counts without scaling 'errors' returns the binomial errors i . e . the counts above 1 when more than one spike falls within a bin in a given sweep 'surprise' returns Palm's surprise ( Palm et al ., 1988 ) To return the jpeth matrix for each mode call setMode followed by getMatrix e . g . obj = jpeth (.....); % construct object obj = setMode ( obj , 'normalized' ); % normalized mode matrix = getMatrix ( obj ); % get the answer ------------------------------------------------------------------------- NOTE: Custom modes may be added by the user . To add a mode 'abcdefg' simply define a new method \"getAbcdefg\" ( note capital \"A\" ) and place it in the @jpeth class folder . getMatrix will automatically detect the new method . -------------------------------------------------------------------------- Display This contains a function handle to a function to plot the coincidence matrix . Valid settings are @imagesc ( default ), @contour and @surf . Filter Contains the coefficients of a matrix used to filter the coincidence matrix within the getMatrix method . Typically a nXn matrix where n is odd . Label A user settable string . References: Palm et al . ( 1988 ) On the significance of correlations among neural spike trains Biological Cybernetics 59 , 1 - 11 . ------------------------------------------------------------------------- Author: Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King's College London 2009 - ------------------------------------------------------------------------- Documentation for jpeth doc jpeth","title":"jpeth"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/plot.m/","text":"plot \u00b6 plot method overloaded for jpeth class Examples : ph = plot ( obj ) plots the object in a new figure ph = plot ( handle , obj ) plots the object in the figure or uipanel specified by handle ph is the handle of the parent figure or uipanel of the plot Note , if no output arguments are specified , the handle property of the jpeth object in the calling workspace will be updated with the value of ph where this is possible ( i . e . where the object is a named variable in the calling workspace resolvable by a call to inputname ( ... )) . See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"plot"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/plot.m/#plot","text":"plot method overloaded for jpeth class Examples : ph = plot ( obj ) plots the object in a new figure ph = plot ( handle , obj ) plots the object in the figure or uipanel specified by handle ph is the handle of the parent figure or uipanel of the plot Note , if no output arguments are specified , the handle property of the jpeth object in the calling workspace will be updated with the value of ph where this is possible ( i . e . where the object is a named variable in the calling workspace resolvable by a call to inputname ( ... )) . See also jpeth ------------------------------------------------------------------------- Author : Malcolm Lidierth 02 / 09 Copyright \u00a9 The Author & King 's College London 2009- -------------------------------------------------------------------------","title":"plot"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/plotoptions.m/","text":"plotoptions \u00b6 plotoptions method for jpeth object fcn=plotoptions(obj) returns the handle to a function that will be called when the plot options button is selected in a sigTOOL result view . Alternatively , c=plotoptions(obj) returns a cell array with the handle in the first element and optional arguments in subsequent elements ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"plotoptions"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/plotoptions.m/#plotoptions","text":"plotoptions method for jpeth object fcn=plotoptions(obj) returns the handle to a function that will be called when the plot options button is selected in a sigTOOL result view . Alternatively , c=plotoptions(obj) returns a cell array with the handle in the first element and optional arguments in subsequent elements ------------------------------------------------------------------------- Author: Malcolm Lidierth 10/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"plotoptions"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setDisplay.m/","text":"setDisplay \u00b6 setDisplay method for jpeth class Example: obj=setDisplay(obj , func) where obj is a jpeth object and func is the handle of a function to plot the coincidence matrix See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setDisplay"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setDisplay.m/#setdisplay","text":"setDisplay method for jpeth class Example: obj=setDisplay(obj , func) where obj is a jpeth object and func is the handle of a function to plot the coincidence matrix See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setDisplay"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setFilter.m/","text":"setFilter \u00b6 setFilter method for the jpsth class Example: obj=setFilter(obj , coeff); where coeff is normally an NxN matrix of coefficients and N is odd Sets the filter to used by getMatrix and getCoincidence . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setFilter"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setFilter.m/#setfilter","text":"setFilter method for the jpsth class Example: obj=setFilter(obj , coeff); where coeff is normally an NxN matrix of coefficients and N is odd Sets the filter to used by getMatrix and getCoincidence . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setFilter"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setLabel.m/","text":"setLabel \u00b6 setLabel method for the jpsth class Example: obj=setLabel(obj , label); where label is a string See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setLabel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setLabel.m/#setlabel","text":"setLabel method for the jpsth class Example: obj=setLabel(obj , label); where label is a string See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setLabel"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setMode.m/","text":"setMode \u00b6 setMode method for the jpsth class Example: obj=setMode(obj); See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/setMode.m/#setmode","text":"setMode method for the jpsth class Example: obj=setMode(obj); See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"setMode"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subasgn.m/","text":"subasgn \u00b6 ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subasgn"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subasgn.m/#subasgn","text":"------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subasgn"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subsasgn.m/","text":"subsasgn \u00b6 subsasgn method for jpeth class Example: out=subsasgn(obj , index , val) Standard method Note that subsasgn currently permits write - access to all jpeth properties but only mode , display , filter and label should be altered by the user . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subsasgn.m/#subsasgn","text":"subsasgn method for jpeth class Example: out=subsasgn(obj , index , val) Standard method Note that subsasgn currently permits write - access to all jpeth properties but only mode , display , filter and label should be altered by the user . See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subsasgn"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subsref.m/","text":"subsref \u00b6 subsasgn method for jpeth class Example: out=subsref(obj , index , val) Standard method See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/subsref.m/#subsref","text":"subsasgn method for jpeth class Example: out=subsref(obj , index , val) Standard method See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"subsref"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/update.m/","text":"update \u00b6 update method for jpeth objects Example: update(obj) updates the plot of a jpeth object using the current settings in the same figure or uipanel as the latest call to plot . If plot has not been called yet , update will emulate the initial call See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"update"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/%40jpeth/update.m/#update","text":"update method for jpeth objects Example: update(obj) updates the plot of a jpeth object using the current settings in the same figure or uipanel as the latest call to plot . If plot has not been called yet , update will emulate the initial call See also jpeth ------------------------------------------------------------------------- Author: Malcolm Lidierth 02/09 Copyright \u00a9 The Author & King's College London 2009 - -------------------------------------------------------------------------","title":"update"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/private/Cusum.m/","text":"Cusum \u00b6 --------------------------------------------------------------------------","title":"Cusum"},{"location":"reference/lib/sigTOOL/sigTOOL%20Neuroscience%20Toolkit/Spike%20Train%20Toolkit/utils/private/Cusum.m/#cusum","text":"--------------------------------------------------------------------------","title":"Cusum"},{"location":"tutorials/makingnewreader/","text":"","title":"4 Add a new file format"},{"location":"tutorials/readanalog/","text":"","title":"1 Reading analog data"},{"location":"tutorials/readdigital/","text":"","title":"2 Reading digital data"},{"location":"tutorials/readevents/","text":"","title":"3 Reading events"}]}